<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wang&#39;s dayliy document</title>
  
  
  <link href="http://www.wqkenqing.ren/daydoc/atom.xml" rel="self"/>
  
  <link href="http://www.wqkenqing.ren/daydoc/"/>
  <updated>2023-10-14T02:58:25.926Z</updated>
  <id>http://www.wqkenqing.ren/daydoc/</id>
  
  <author>
    <name>Kuiq  Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E4%B8%8E%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%BC%94%E7%A4%BA%E8%AF%B4%E6%98%8E/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%E4%B8%8E%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%BC%94%E7%A4%BA%E8%AF%B4%E6%98%8E/</id>
    <published>2023-10-14T02:58:25.926Z</published>
    <updated>2023-10-14T02:58:25.926Z</updated>
    
    <content type="html"><![CDATA[<h2 id="接口测试"><a href="#接口测试" class="headerlink" title="接口测试"></a>接口测试</h2><p>在postman中配置了系统中相关接口信息，通过传入相应的参数进行测试。</p><p>测试步骤</p><ol><li>先通过接口登录，测试工具加载出相应的token。</li><li>随机选择一些接口进行测试。</li></ol><p>因为系统已经投入使用，所以相应的接口已经与对应的功能进行绑定。这里的接口测试主要是会选择一些GET请求来方便演示为主。</p><hr><h2 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h2><p>通过jmeter进行性能测试，已经选取了一些系统中有代表性的数据接口编写了对应的测试计划。</p><h3 id="模拟场景"><a href="#模拟场景" class="headerlink" title="模拟场景"></a>模拟场景</h3><ol><li>100人同时对测试计划中的请求发送请求</li><li>检测请求成功通过率</li><li>响应时间</li><li>并呈现如TPS、记录条数&#x2F;秒、数据量&#x2F;秒、通过概等</li><li>图表化呈现测试结果</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;接口测试&quot;&gt;&lt;a href=&quot;#接口测试&quot; class=&quot;headerlink&quot; title=&quot;接口测试&quot;&gt;&lt;/a&gt;接口测试&lt;/h2&gt;&lt;p&gt;在postman中配置了系统中相关接口信息，通过传入相应的参数进行测试。&lt;/p&gt;
&lt;p&gt;测试步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B/%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B/%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF/</id>
    <published>2023-10-14T02:58:25.926Z</published>
    <updated>2023-10-14T02:58:25.926Z</updated>
    
    <content type="html"><![CDATA[<h1 id="古诗词竞赛"><a href="#古诗词竞赛" class="headerlink" title="古诗词竞赛"></a>古诗词竞赛</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个趣味小游戏，以诗词竞赛为主题，引入竞赛机制。</span><br></pre></td></tr></table></figure><h2 id="一、技术架构"><a href="#一、技术架构" class="headerlink" title="一、技术架构"></a>一、技术架构</h2><p>图示：</p><p><img src="http://img.wqkenqing.ren/typora_img/CleanShot%202022-05-12%20at%2010.27.26.png" alt="CleanShot 2022-05-12 at 10.27.26"></p><p>涉及技术栈:</p><ol><li>java</li><li>spring全家桶</li><li>elasticsearch</li><li>mybaits-plus</li><li>flink</li><li>web</li><li>jsoup</li><li>kafka</li></ol><p>以上主要是一期</p><p>二期会主要围绕小端等来进行开发</p><p>本应用采用了三层结构：采集层、治理层、应用层。</p><p>为此服务体系也采用微服务架构</p><h2 id="二、实现思路"><a href="#二、实现思路" class="headerlink" title="二、实现思路"></a>二、实现思路</h2><h3 id="2-1-采集层"><a href="#2-1-采集层" class="headerlink" title="2.1 采集层"></a>2.1 采集层</h3><p>通过爬虫服务，抓取相应的诗词数据，并放入暂存层中</p><h3 id="2-2-清洗转换层"><a href="#2-2-清洗转换层" class="headerlink" title="2.2 清洗转换层"></a>2.2 清洗转换层</h3><p>将暂存层中的数据，清洗后、分发至相应的数据库中</p><h3 id="2-3-应用层"><a href="#2-3-应用层" class="headerlink" title="2.3 应用层"></a>2.3 应用层</h3><p>基于抓取的数据进行设计开发web页面</p><h2 id="三、开发记录"><a href="#三、开发记录" class="headerlink" title="三、开发记录"></a>三、开发记录</h2><p>解析步骤<br>1.获取到总页数<br>2.获取a列表<br>3.抓取页面内容<br>    1. class zhuti yuanjiao 获取名称<br>    2. class jjzz 获取年代与作者名<br>    3. class shicineirong 获取诗词内容</p><h3 id="生成全局唯一id"><a href="#生成全局唯一id" class="headerlink" title="生成全局唯一id"></a>生成全局唯一id</h3><ol><li>数据库自增长序列或字段生成id</li><li>UUID</li><li>Redis生成ID</li><li>zookeeper生成ID</li><li>Twitter的snowflake算法</li></ol><h3 id="诗歌全局唯一id生成策略"><a href="#诗歌全局唯一id生成策略" class="headerlink" title="诗歌全局唯一id生成策略"></a>诗歌全局唯一id生成策略</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;古诗词竞赛&quot;&gt;&lt;a href=&quot;#古诗词竞赛&quot; class=&quot;headerlink&quot; title=&quot;古诗词竞赛&quot;&gt;&lt;/a&gt;古诗词竞赛&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B/%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B%E4%B8%9A%E5%8A%A1%E6%9E%B6%E6%9E%84/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B/%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B%E4%B8%9A%E5%8A%A1%E6%9E%B6%E6%9E%84/</id>
    <published>2023-10-14T02:58:25.926Z</published>
    <updated>2023-10-14T02:58:25.926Z</updated>
    
    <content type="html"><![CDATA[<h1 id="诗词竞赛业务架构"><a href="#诗词竞赛业务架构" class="headerlink" title="诗词竞赛业务架构"></a>诗词竞赛业务架构</h1><p>现有业务模块梳理</p><ol><li>消费从而生成诗词源</li><li>任务生成，并绑定对应的诗词</li><li>生成试题</li><li>测验</li><li>批改</li><li>判胜负</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;诗词竞赛业务架构&quot;&gt;&lt;a href=&quot;#诗词竞赛业务架构&quot; class=&quot;headerlink&quot; title=&quot;诗词竞赛业务架构&quot;&gt;&lt;/a&gt;诗词竞赛业务架构&lt;/h1&gt;&lt;p&gt;现有业务模块梳理&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;消费从而生成诗词源&lt;/li&gt;
&lt;li&gt;任务生成，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E4%BA%AC%E4%B8%9C%E4%BA%91/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E4%BA%AC%E4%B8%9C%E4%BA%91/</id>
    <published>2023-10-14T02:58:25.925Z</published>
    <updated>2023-10-14T02:58:25.925Z</updated>
    
    <content type="html"><![CDATA[<p>114.67.107.246<br>wangkuiqing<br>eExfeTmKkgRJ255SRRZq</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;114.67.107.246&lt;br&gt;wangkuiqing&lt;br&gt;eExfeTmKkgRJ255SRRZq&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E5%8D%9A%E5%AE%A2%E4%B8%8D%E5%90%8C%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E5%8D%9A%E5%AE%A2%E4%B8%8D%E5%90%8C%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/</id>
    <published>2023-10-14T02:58:25.925Z</published>
    <updated>2023-10-14T02:58:25.925Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这里的背景是针对博客不同项目生成不同主题类目的方案</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>step one </p><p> 更换wqkenqing.github.io下的github项目</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>操作记录</title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</id>
    <published>2023-10-14T02:58:25.925Z</published>
    <updated>2023-10-14T02:58:25.925Z</updated>
    
    <content type="html"><![CDATA[ <span id="more"></span><p>docker run  –name fid_state_new -d -v &#x2F;data&#x2F;query_sql:&#x2F;query  –add-host  data1:10.20.10.136 –add-host  data2:10.20.10.137 –add-host  data3:10.20.10.138 registry.lisong.pub:28500&#x2F;toll_job_tmp &#x2F;query&#x2F;fid_state_tmp.sql    30<br>docker run  –name fid_state_new -d -v &#x2F;data&#x2F;query_sql:&#x2F;query  –add-host  data1:10.20.10.136 –add-host  data2:10.20.10.137 –add-host  data3:10.20.10.138 registry.lisong.pub:28500&#x2F;toll_state_new &#x2F;query&#x2F;fid_state_tmp.sql    30</p><p>docker run    -v &#x2F;data&#x2F;query_sql:&#x2F;query  –add-host  data1:10.20.10.136 –add-host  data2:10.20.10.137 –add-host  data3:10.20.10.138 registry.lisong.pub:28500&#x2F;toll_job_state_tmp &#x2F;query&#x2F;fid_state_tmp.sql</p><p>69641199</p><p>kafka-console-consumer.sh –bootstrap-server data1:9092 –property print.key&#x3D;true –topic zhsd_real –partition&#x3D;0  –offset  69640199 &gt;real.log</p><p>kafka-consumer-groups.sh –bootstrap-server data1:9092 –group jzwsd-camera-real-time-forecast-a –describe</p><p>c9656300807b</p><p>docker run -d   -v &#x2F;data&#x2F;query_sql:&#x2F;query  –add-host  data1:10.20.10.136 –add-host  data2:10.20.10.137 –add-host  data3:10.20.10.138 registry.lisong.pub:28500&#x2F;toll_job_tmp &#x2F;query&#x2F;fid_info.sql  30</p><p>select * from Biz_Roadstae where FID &gt; 186681323</p><p>ssh -o ServerAliveInterval&#x3D;59 -NfL 0.0.0.0:9092:data1:9092 jzw</p><p>ssh -o ServerAliveInterval&#x3D;59 -NfL 0.0.0.0:2181:data1:2181 jzw</p><p>kafka-run-class.sh kafka.tools.GetOaffsetShell  –broker-list localhost:9092 –partitions 0 –topic zhsd_real –time -1</p><p>71429512</p><p>kafka-console-consumer.sh –bootstrap-server data1:9092 –property print.key&#x3D;true –topic zhsd_real –partition&#x3D;0  –offset 71409512 &gt;real.log</p><p>kafka-console-consumer.sh –bootstrap-server data1:9092  –from-beginning –topic jzw_toll_island_state   &gt;state.txt</p><p>kafka-run-class.sh kafka.tools.GetOaffsetShell  –broker-list data1:9092  –topic ws_hy_mock_data_five_minute –time -1</p><p>PUT &#x2F;_snapshot&#x2F;my_backup<br>{<br>  “type” : “fs”,<br>  “settings”: {<br>    “location”: “&#x2F;data&#x2F;snapshot&#x2F;backup1”<br>    “max_snapshot_bytes_per_sec” : “50mb”,<br>    “max_restore_bytes_per_sec” :”50mb”,<br>    “compress”:true}<br>  }<br>}</p><p>curl -XPUT ‘<a href="http://192.168.5.185:9200/_snapshot/el_bak">http://192.168.5.185:9200/_snapshot/el_bak</a>‘ -d ‘{“type”: “fs”,”settings”: {“location”:”&#x2F;usr&#x2F;hadoop&#x2F;application&#x2F;el_bak”,”max_snapshot_bytes_per_sec” : “50mb”, “max_restore_bytes_per_sec” :”50mb”,”compress”:true}}’</p><p>————————————————<br>版权声明：本文为CSDN博主「warrah」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/warrah/article/details/78978244">https://blog.csdn.net/warrah/article/details/78978244</a></p><p>plugin install elasticsearch&#x2F;elasticsearch-repository-hdfs&#x2F;6.7.2</p><p>POST &#x2F;hy_mock_data_five_minute&#x2F;_delete_by_query<br>{<br>  “query”: {<br>      “bool”: {<br>        “must”: [<br>          {<br>            “range”: {<br>              “rangeBegin”: {<br>                “gte”: “2020-04-18 00:00:00”,<br>                “lt”: “2020-04-22 00:00:00”<br>              }<br>            }<br>          }<br>        ]<br>      }<br>    }<br>}</p><p>同步hy_mock_data</p><p>elasticdump –input&#x3D;<a href="http://namenode2:9200/hy_mock_data_five_minute">http://namenode2:9200/hy_mock_data_five_minute</a> –output&#x3D;<a href="http://yd_data1:9200/hy_mock_data_five_minute_new">http://yd_data1:9200/hy_mock_data_five_minute_new</a>  –type&#x3D;settings<br>elasticdump –input&#x3D;<a href="http://namenode2:9200/hy_mock_data_five_minute">http://namenode2:9200/hy_mock_data_five_minute</a> –output&#x3D;<a href="http://yd_data1:9200/hy_mock_data_five_minute_new">http://yd_data1:9200/hy_mock_data_five_minute_new</a>  –type&#x3D;mapping<br>elasticdump –input&#x3D;<a href="http://namenode2:9200/hy_mock_data_five_minute">http://namenode2:9200/hy_mock_data_five_minute</a> –output&#x3D;<a href="http://yd_data1:9200/hy_mock_data_five_minute_new">http://yd_data1:9200/hy_mock_data_five_minute_new</a>  –type&#x3D;data</p><p>hy_traffic_baidu_five_minute</p><p>elasticdump –input&#x3D;<a href="http://namenode2:9200/hy_traffic_baidu_five_minute">http://namenode2:9200/hy_traffic_baidu_five_minute</a> –output&#x3D;<a href="http://yd_data1:9200/hy_traffic_baidu_five_minute_new1">http://yd_data1:9200/hy_traffic_baidu_five_minute_new1</a>  –type&#x3D;settings<br>elasticdump –input&#x3D;<a href="http://namenode2:9200/hy_traffic_baidu_five_minute">http://namenode2:9200/hy_traffic_baidu_five_minute</a> –output&#x3D;<a href="http://yd_data1:9200/hy_traffic_baidu_five_minute_new1">http://yd_data1:9200/hy_traffic_baidu_five_minute_new1</a>  –type&#x3D;mapping<br>elasticdump –input&#x3D;<a href="http://namenode2:9200/hy_traffic_baidu_five_minute">http://namenode2:9200/hy_traffic_baidu_five_minute</a> –output&#x3D;<a href="http://yd_data1:9200/hy_traffic_baidu_five_minute_new1">http://yd_data1:9200/hy_traffic_baidu_five_minute_new1</a>  –type&#x3D;data</p><p>county_consumption_city</p><p>hotel_tourist_source 不一致</p><p>tourist_local_data<br>tourist_source_prov<br>tourist_source_country<br>county_consumption<br>county_consumption_province<br>hotel_checkin_record</p><hr><p>tourist_passenger_ticket<br>tourist_minute_local_data</p><p>industry_real-weather_data  26866<br>environment_bureau-data 12749</p><hr><p>ddns</p><p>docker run -d  <br>    –restart&#x3D;always <br>    –name ddns-aliyun <br>    -e “AKID&#x3D;LTAI4GBKPp17u31LThucvsab” <br>    -e “AKSCT&#x3D;mmR4XXXKC1QG9KeiHCAuWktMq50UyF” <br>    -e “DOMAIN&#x3D;home.kuiq.wang” <br>    -e “REDO&#x3D;600” <br>    chenhw2&#x2F;aliyun-ddns-cli</p><p>curl -X GET <a href="http://jd_cloud:9200/_search?v">http://jd_cloud:9200/_search?v</a></p><p>county_consumption_city<br>county_industry_consumption<br>county_consumption_province<br>county_consumption<br>county_business_circle_consumption</p><p>tourist_local_data<br>tourist_source_prov<br>tourist_source_country<br>tourist_source_city</p><hr><p>returns((TypeInformation) TupleTypeInfo.getBasicTupleTypeInfo(String.class, Integer.class)).groupBy(0).sum(1)</p><p>2020-07-29</p><p>flink run -c org.example.stream.SocketTextStreamWordCount &#x2F;Users&#x2F;wqkenqing&#x2F;Desktop&#x2F;gitfiles&#x2F;flink-demo&#x2F;target&#x2F;original-flink-demo-1.0-SNAPSHOT.jar 127.0.0.1 9000<br>flink run -c org.example.stream.SocketTextStreamWordCount original-flink-demo-1.0-SNAPSHOT.jar 127.0.0.1 9000</p><p>&#x2F;Users&#x2F;wqkenqing&#x2F;Desktop&#x2F;gitfiles&#x2F;flink-demo&#x2F;target&#x2F;original-flink-demo-1.0-SNAPSHOT.jar</p><p>docker run -d <br>    –restart&#x3D;always <br>    –name ddns-aliyun <br>    -e “AKID&#x3D;LTAI4GBKPp17u31LThucvsab” <br>    -e “AKSCT&#x3D;mmR4XXXKC1QG9KeiHCAuWktMq50UyF” <br>    -e “DOMAIN&#x3D;home.kuiq.wang” <br>    -e “REDO&#x3D;600” <br>chenhw2&#x2F;aliyun-ddns-cli</p><p>LTAI4GBKPp17u31LThucvsab</p>]]></content>
    
    
      
      
    <summary type="html"> &lt;span id=&quot;more&quot;&gt;&lt;/span&gt;
&lt;p&gt;docker run  –name fid_state_new -d -v &amp;#x2F;data&amp;#x2F;query_sql:&amp;#x2F;query  –add-host  data1:10.20.10.136 –add-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E6%93%8D%E4%BD%9C/</id>
    <published>2023-10-14T02:58:25.925Z</published>
    <updated>2023-10-14T02:58:25.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Q-更换ubuntu安装源"><a href="#Q-更换ubuntu安装源" class="headerlink" title="Q: 更换ubuntu安装源"></a>Q: 更换ubuntu安装源</h2><p>cp &#x2F;source&#x2F;apt&#x2F;source.plist &#x2F;source&#x2F;apt&#x2F;source.list.bak</p><p>vim &#x2F;source&#x2F;apt&#x2F;source.plist</p><p>添加国内源.</p><p>Q: mac 查看目前哪些进程占用哪些端口</p><p>lsof -nP  | grep TCP | grep LISTEN</p><p>lsof -i :TCP</p><p><img src="http://img.wqkenqing.ren/759a2c6c1c06fc81b9c400060913e93b.png" alt="查看mac pid进程的端口"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Q-更换ubuntu安装源&quot;&gt;&lt;a href=&quot;#Q-更换ubuntu安装源&quot; class=&quot;headerlink&quot; title=&quot;Q: 更换ubuntu安装源&quot;&gt;&lt;/a&gt;Q: 更换ubuntu安装源&lt;/h2&gt;&lt;p&gt;cp &amp;#x2F;source&amp;#x2F;apt</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BB%84%E4%BB%B6%E5%8D%87%E7%BA%A7%E6%94%B9%E9%80%A0/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%BB%84%E4%BB%B6%E5%8D%87%E7%BA%A7%E6%94%B9%E9%80%A0/</id>
    <published>2023-10-14T02:58:25.925Z</published>
    <updated>2023-10-14T02:58:25.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="组件安全升级"><a href="#组件安全升级" class="headerlink" title="组件安全升级"></a>组件安全升级</h2><blockquote><p>洪雅项目发生了elaticsearch被黑客入侵事故，事后分析，主要跟我们内部安全策略不强也有关系，接下来对相关组件进行安全升级</p></blockquote><h3 id="1-问题分析"><a href="#1-问题分析" class="headerlink" title="1 问题分析"></a>1 问题分析</h3><p>1.1 因为elasticsearch默认是9200、9300的端口开放，且默认是没有加安全组件的，我们的移动云服务器，虽然并未将相应端口外部暴露，如果是移动云内部，仍可能发生被扫描的爆破</p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><ol><li>加xpack安全组件</li><li>加防火墙策略<ol><li>只允许内部服务器访问</li></ol></li><li>升级es从6.7到6.8</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">我现在需要对部署在ubuntu上的elasticsearch服务进行端口防火墙策略，现在需要实现的策略是只允许</span><br><span class="line">192.168.18.100 namenode</span><br><span class="line">192.168.18.104 namenode2</span><br><span class="line">192.168.18.101 datanode1</span><br><span class="line">192.168.18.102 datanode2</span><br><span class="line">192.168.18.103 datanode3</span><br><span class="line">这几台服务器之前可以访问9200、9300端口</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 允许192.168.18.100访问9200端口</span><br><span class="line">sudo ufw allow from 192.168.18.100 to any port 9200</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.100访问9300端口</span><br><span class="line">sudo ufw allow from 192.168.18.100 to any port 9300</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.104访问9200端口</span><br><span class="line">sudo ufw allow from 192.168.18.104 to any port 9200</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.104访问9300端口</span><br><span class="line">sudo ufw allow from 192.168.18.104 to any port 9300</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.101访问9200端口</span><br><span class="line">sudo ufw allow from 192.168.18.101 to any port 9200</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.101访问9300端口</span><br><span class="line">sudo ufw allow from 192.168.18.101 to any port 9300</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.102访问9200端口</span><br><span class="line">sudo ufw allow from 192.168.18.102 to any port 9200</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.102访问9300端口</span><br><span class="line">sudo ufw allow from 192.168.18.102 to any port 9300</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.103访问9200端口</span><br><span class="line">sudo ufw allow from 192.168.18.103 to any port 9200</span><br><span class="line"></span><br><span class="line"># 允许192.168.18.103访问9300端口</span><br><span class="line">sudo ufw allow from 192.168.18.103 to any port 9300</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo ufw allow from 192.168.9.185 to any port 9200</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>centos</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># 添加允许192.168.18.100访问9200端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.100 port port=9200 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.100访问9300端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.100 port port=9300 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.104访问9200端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.104 port port=9200 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.104访问9300端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.104 port port=9300 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.101访问9200端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.101 port port=9200 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.101访问9300端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.101 port port=9300 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.102访问9200端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.102 port port=9200 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.102访问9300端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.102 port port=9300 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.103访问9200端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.103 port port=9200 protocol=tcp accept&#x27;</span><br><span class="line"></span><br><span class="line"># 添加允许192.168.18.103访问9300端口的规则</span><br><span class="line">sudo firewall-cmd --permanent --zone=public --add-rich-rule=&#x27;rule family=ipv4 source address=192.168.18.103 port port=9300 protocol=tcp accept&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -X GET &quot;http://namenode2:9200/_cat/indices?v&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;组件安全升级&quot;&gt;&lt;a href=&quot;#组件安全升级&quot; class=&quot;headerlink&quot; title=&quot;组件安全升级&quot;&gt;&lt;/a&gt;组件安全升级&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;洪雅项目发生了elaticsearch被黑客入侵事故，事后分析，主要跟我们内部安全</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/prepare/%E6%95%B0%E6%8D%AE%E5%82%A8%E5%A4%87/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/prepare/%E6%95%B0%E6%8D%AE%E5%82%A8%E5%A4%87/</id>
    <published>2023-10-14T02:58:25.924Z</published>
    <updated>2023-10-14T02:58:25.924Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">采集数据,留作备用</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>所涉组件</p><p>采集</p><ul><li>flume</li><li>logstash</li><li>beats</li><li>elasticsearch-dump</li></ul><p>传输</p><ul><li>kafka</li><li>flume</li></ul><p>存储</p><ul><li>elasticsearch</li><li>hbase</li><li>hdfs</li></ul><p>step one : 采集数据到elasticsearch</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/vue/vue/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/vue/vue/</id>
    <published>2023-10-14T02:58:25.924Z</published>
    <updated>2023-10-14T02:58:25.924Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/about%E4%BA%91%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/about%E4%BA%91%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</id>
    <published>2023-10-14T02:58:25.924Z</published>
    <updated>2023-10-14T02:58:25.924Z</updated>
    
    <content type="html"><![CDATA[<p>account: wqkenqing<br>password:125323wkQ$</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;account: wqkenqing&lt;br&gt;password:125323wkQ$&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/jumpserver/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/jumpserver/</id>
    <published>2023-10-14T02:58:25.924Z</published>
    <updated>2023-10-14T02:58:25.924Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="title-jumpserver体验-date-2020-07-28-tags-jumpserver-资产管理"><a href="#title-jumpserver体验-date-2020-07-28-tags-jumpserver-资产管理" class="headerlink" title=" title:  jumpserver体验 date: 2020-07-28 tags: [jumpserver,资产管理]"></a> title:  jumpserver体验<br> date: 2020-07-28<br> tags: [jumpserver,资产管理]</h2> <span id="more"></span><p> # jumpserver体验</p><p> ## 一体化安装</p><p>mysql -uroot -e “create database jumpserver default charset ‘utf8’; grant all on jumpserver.* to ‘jumpserver‘@’127.0.0.1’ identified by ‘$DB_PASSWORD’; flush privileges;”</p><p>m6GgXgemmBw5B7om9uYqFSz3erVo0JCLO7Trxpo8S2bxazXk2Y</p><p>Vv42qLmxsEPUO4Kf</p><p>xLnAOS5Mc8cqRZ8QDxUzVQvZgxIRnJl73c0rE56WCSq8tYZQFG</p><p>ETNhIk9zu3fgN2pG</p>]]></content>
    
    
    <summary type="html">&lt;hr&gt;
&lt;h2 id=&quot;title-jumpserver体验-date-2020-07-28-tags-jumpserver-资产管理&quot;&gt;&lt;a href=&quot;#title-jumpserver体验-date-2020-07-28-tags-jumpserver-资产管理&quot; class=&quot;headerlink&quot; title=&quot; title:  jumpserver体验 date: 2020-07-28 tags: [jumpserver,资产管理]&quot;&gt;&lt;/a&gt; title:  jumpserver体验&lt;br&gt; date: 2020-07-28&lt;br&gt; tags: [jumpserver,资产管理]&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/tmux%E4%B8%8A%E6%89%8B/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/tmux%E4%B8%8A%E6%89%8B/</id>
    <published>2023-10-14T02:58:25.924Z</published>
    <updated>2023-10-14T02:58:25.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用tmux"><a href="#使用tmux" class="headerlink" title="使用tmux"></a>使用tmux</h2><p>mac os 通过 brew install tmux</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux 接收快捷键的指令是 ^ + B 即mac中的control + B</span><br></pre></td></tr></table></figure><p>窗格的操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这些操作都是通过 ^+b 来接收</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">操作符</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">%</td><td align="left">左右创建两个窗格</td></tr><tr><td align="left">‘’</td><td align="left">左右创建两个窗格</td></tr><tr><td align="left">x</td><td align="left">关闭当前窗格</td></tr><tr><td align="left">{</td><td align="left">前移当前窗格</td></tr><tr><td align="left">}</td><td align="left">后移当前窗格</td></tr><tr><td align="left">;</td><td align="left">选择上次用的窗格</td></tr><tr><td align="left">o</td><td align="left">选择下一个窗格</td></tr><tr><td align="left">space</td><td align="left">切换窗格布局</td></tr><tr><td align="left">z</td><td align="left">放大窗格</td></tr><tr><td align="left">q</td><td align="left">显示序号</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;使用tmux&quot;&gt;&lt;a href=&quot;#使用tmux&quot; class=&quot;headerlink&quot; title=&quot;使用tmux&quot;&gt;&lt;/a&gt;使用tmux&lt;/h2&gt;&lt;p&gt;mac os 通过 brew install tmux&lt;/p&gt;
&lt;figure class=&quot;highlig</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%80%83%E8%AF%95/%E7%94%B5%E5%AD%90%E7%A7%91%E5%A4%A72019%E6%8B%9B%E7%94%9F%E6%94%B6%E9%9B%86/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%80%83%E8%AF%95/%E7%94%B5%E5%AD%90%E7%A7%91%E5%A4%A72019%E6%8B%9B%E7%94%9F%E6%94%B6%E9%9B%86/</id>
    <published>2023-10-14T02:58:25.924Z</published>
    <updated>2023-10-14T02:58:25.924Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/blog_sync_project/plan/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/blog_sync_project/plan/</id>
    <published>2023-10-14T02:58:25.923Z</published>
    <updated>2023-10-14T02:58:25.923Z</updated>
    
    <content type="html"><![CDATA[<p>about two git project</p><p>one hexo .<br>this project is used to deploy the files;</p><p>two : dayliy_doc</p><p>so I just divide the project about these parts</p><ol><li><p>pull files from github </p></li><li><p>list the files;</p></li><li><p>choose the files to sync. </p></li><li><p>push and deploy;</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;about two git project&lt;/p&gt;
&lt;p&gt;one hexo .&lt;br&gt;this project is used to deploy the files;&lt;/p&gt;
&lt;p&gt;two : dayliy_doc&lt;/p&gt;
&lt;p&gt;so I just divide the </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E7%99%BB%E9%99%86%E4%B8%8Esso/%E5%90%8E%E7%AB%AF%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E7%99%BB%E9%99%86%E4%B8%8Esso/%E5%90%8E%E7%AB%AF%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0/</id>
    <published>2023-10-14T02:58:25.923Z</published>
    <updated>2023-10-14T02:58:25.923Z</updated>
    
    <content type="html"><![CDATA[<p>本期主要实现的功能有</p><ol><li><p>用户登陆验证功能</p></li><li><p>路由拦截，token验证功能</p></li><li><p>待实现的功能</p><ol><li>路由拦截功能<ol><li>即通过地址访问时，会先拦截，进行校验是否有token。</li><li>若无token，则回退到登陆页面。</li></ol></li><li>用户验证功能<ol><li>通过账号密码可以正常登陆。</li></ol></li><li>授权功能<ol><li>可以登陆sso中任意一个系统，通过token</li></ol></li></ol></li></ol><p>实现过程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 在调研的过程中发现现在前后端分离，在这种情况下如何实现后端的登陆校验</span><br><span class="line">2. 原来前后端分离，现在的校验方式就是每个页面现在发起一个后端请求。验证是是否能访问</span><br><span class="line">3.我的思路是现在封装一个validate.js</span><br><span class="line">4. 现在先实现后端的验证，打算基于spring secruity 来实现</span><br></pre></td></tr></table></figure><p>创建用户认证模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 创建用户表</span><br><span class="line">Q: 我需要创建一个用户表 ，表名user，字段为 id,username,password,name,password_salt,type,status,update_time,create_time</span><br></pre></td></tr></table></figure><p>再创建一个menu表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q. 我需要创建一个菜单表，表名们menu，字段为 id、code、name、type、path、create_time、update_time、icon</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">先实现一个初级的方法，即前端传用户传用户名与密码，后端生成token，且有失效时间，前端存储改token，每次访问的时候，带入此token</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br><span class="line">//第二步：将想要保存到数据存入session中</span><br><span class="line">session.setAttribute(&quot;userName&quot;,userName);</span><br><span class="line">session.setAttribute(&quot;password&quot;,passWord);</span><br></pre></td></tr></table></figure><p>网关服务的实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用网关服务的好处是，这样我在开发的过程中就不用再频繁切换后端地址。方便开发与调试</span><br></pre></td></tr></table></figure><ol><li>安装nacos</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull nacos/nacos-server</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --name nacos-standalone -e MODE=standalone -p 8848:8848 -d nacos/nacos-server:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本期主要实现的功能有&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;用户登陆验证功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;路由拦截，token验证功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;待实现的功能&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;路由拦截功能&lt;ol&gt;
&lt;li&gt;即通过地址访问时，会先拦截，进行校</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E7%99%BB%E9%99%86%E4%B8%8Esso/login&amp;sso/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E7%99%BB%E9%99%86%E4%B8%8Esso/login&amp;sso/</id>
    <published>2023-10-14T02:58:25.923Z</published>
    <updated>2023-10-14T02:58:25.923Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>结合现有的服务，需要设计一个login与sso页面的功能</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;结合现有的服务，需要设计一个login与sso页面的功能&lt;/p&gt;
&lt;/blockquote&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A%E4%BF%AE%E6%94%B9%E6%84%8F%E8%A7%81/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/%E6%B5%8B%E8%AF%95%E6%8A%A5%E5%91%8A%E4%BF%AE%E6%94%B9%E6%84%8F%E8%A7%81/</id>
    <published>2023-10-14T02:58:25.922Z</published>
    <updated>2023-10-14T02:58:25.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h2><ol><li>增加对软件的评估</li></ol><h3 id="4、详细测试结果"><a href="#4、详细测试结果" class="headerlink" title="4、详细测试结果"></a>4、详细测试结果</h3><p>把测试用例按结果分类编写</p><p><img src="/daydoc/Users/kuiqwang/Library/Application%20Support/typora-user-images/image-20230719143839876.png" alt="image-20230719143839876"></p><h3 id="测试用例"><a href="#测试用例" class="headerlink" title="测试用例"></a>测试用例</h3><ol><li>按模块进行分类</li><li>用例名称-&gt;更改成一个测试方法类型</li></ol><h3 id="测试记录"><a href="#测试记录" class="headerlink" title="测试记录"></a>测试记录</h3><h3 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h3><p>缺陷与限制细分一下</p><h3 id="测试建议"><a href="#测试建议" class="headerlink" title="测试建议"></a>测试建议</h3><p>修改测试建议</p><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;测试结果&quot;&gt;&lt;a href=&quot;#测试结果&quot; class=&quot;headerlink&quot; title=&quot;测试结果&quot;&gt;&lt;/a&gt;测试结果&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;增加对软件的评估&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;4、详细测试结果&quot;&gt;&lt;a href=&quot;#4、详细测试结果</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92/</id>
    <published>2023-10-14T02:58:25.922Z</published>
    <updated>2023-10-14T02:58:25.922Z</updated>
    
    <content type="html"><![CDATA[<p>按模版调整</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;按模版调整&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/%E7%89%87%E6%AE%B5/"/>
    <id>http://www.wqkenqing.ren/daydoc/2023/10/14/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E9%A1%B9%E7%9B%AE/%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B/%E7%89%87%E6%AE%B5/</id>
    <published>2023-10-14T02:58:25.922Z</published>
    <updated>2023-10-14T02:58:25.922Z</updated>
    
    <content type="html"><![CDATA[<p>成都旸谷</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">项目内容: 数据基础服务平台、数据运维平台</span><br><span class="line">本项目是结合我司众多项目的研发过程中，归纳相关需求，内部孵化的自研产品，能快速的为项目提供基础服务，加快项目的推进进程，从而更快产生价值。</span><br><span class="line">主要的功能包含数据地图、数据集成(数据采集、数据同步)、元数据管理、数据治理、调度系统、数据应用（数据服务、数据图表、报表）等核心功能。</span><br><span class="line">该项目较完整的包含了数据流过程中的功能，每部份功能都能在项目中提供具体的功能。如数据采集、数据同步等，通过相关配置，我们即可快速的完成主流的采集协议的采集通道构建。数据同步我们已经支持较多组件之前的同步和多种策略的同步，并在不断的完善中。元数据管理，我们基于atlas进行二次开发，在此基础上完成了我们主要的组件的元数据的采集，粒度细致到字段级，并查相关血缘信息。数据治理，基础海豚调度加flink、spark、hive、clickhouse等组件，完成了一些常见内置治理规则的治理，同时还支持上传udf包，进行自定义规则处理。</span><br><span class="line">我的职责</span><br><span class="line">1. 担任本项目的团队sm，主导项目的推进与孵化</span><br><span class="line">2. 主力架构与拆分项目的主体的功能。</span><br><span class="line">3. 管理数据运维平台，保障各基础组件正常运行。</span><br></pre></td></tr></table></figure><p>浩海通达</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">项目内容:</span><br><span class="line">通过jt807、jt808等协议对平台多个客户方的近千量车辆的轨迹采集，业务数据量级日均百G级，并进行清洗,处理.存储.然后再结合业务数据,进行相同起始点的耗时对比，线路运费对比等业务分析，线路故障信息分析等,从而进行流程优化，线路推荐等。针对积累的数据，进行聚合分析，反馈给司机端，以供司机选择最优路径。以报表形式反馈给B端，以供企业做成本分析，与商业决策。</span><br><span class="line">我的职责</span><br><span class="line">1. 主导数据中心的建设，为团队提供大数据存储、处理的能力</span><br><span class="line">2. 主导JT807、JT808协议解析的数据采集服务的构建、提供稳定，高效的数据采集服务。</span><br><span class="line">3. 主力开发相关数据处理任务，如轨迹数据的异常点清洗，轨迹纠偏，轨迹稀疏，轨迹对比等任务开发。</span><br></pre></td></tr></table></figure><p>海航</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">项目内容:</span><br><span class="line">海航hiapp (MTS app)项目，是一款涉及航旅、住宿、美食等ToC应用服务，承载了海航千万级注册用户，日活过百万。我们的工作职责是以app用户登录为入口产生的行为数据流进行存储、处理、分析、应用等数据流处理。涉及到较大数据量的实时数据流的处理，和丰富的业务应用，如面向运营部门的报表业务、面向AI对话机器人的模型治理数据、推荐中心的推荐模型数据等。</span><br><span class="line">我的职责:</span><br><span class="line">1. 部份模块的任务开发，如用户埋点日志信息流处理、对话数据的NLP切词流任务、主流网站的出行旅游游记爬虫任务等</span><br><span class="line">2. 部份数据报表服务的开发实现.</span><br></pre></td></tr></table></figure><p>摩森特</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">针对公司的数百T的存量文本数据反复进行切词、聚类、分析等处理与挖掘，在此基础开发出了公司的DMP平台，主要的核心功能有多标签的用户画像、多主题的数据仓库、脱敏的数据服务等。为公司带来可观的经济增值。</span><br><span class="line">主要职责:</span><br><span class="line">1.数据集群各组件搭建</span><br><span class="line">2.批处理任务的开发，如文本信息的切词、聚类任务等，数据仓库入库数据的清洗等和一些Hive的UDF包开发</span><br><span class="line">3.DMP的部份模块开发如数据仓库即席查询服务，用户画像功能等。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;成都旸谷&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span</summary>
      
    
    
    
    
  </entry>
  
</feed>

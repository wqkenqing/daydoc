<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wang&#39;s dayliy document</title>
  
  
  <link href="http://www.wqkenqing.ren/daydoc/atom.xml" rel="self"/>
  
  <link href="http://www.wqkenqing.ren/daydoc/"/>
  <updated>2024-03-28T07:11:18.590Z</updated>
  <id>http://www.wqkenqing.ren/daydoc/</id>
  
  <author>
    <name>Kuiq  Wang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cdc调研</title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/03/25/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/cdc%E8%B0%83%E7%A0%94/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/03/25/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/cdc%E8%B0%83%E7%A0%94/</id>
    <published>2024-03-25T07:56:48.000Z</published>
    <updated>2024-03-28T07:11:18.590Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ac1a787c565a378930390537fa6983fbfe3246a9c8bb313e3c168d149e9f132d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/daydoc/lib/hbe.js"></script><link href="/daydoc/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="专题" scheme="http://www.wqkenqing.ren/daydoc/categories/%E4%B8%93%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>Flinkcdc</title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/03/25/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/Flinkcdc/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/03/25/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/Flinkcdc/</id>
    <published>2024-03-25T06:49:28.000Z</published>
    <updated>2024-03-25T07:55:42.882Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a215957e2f51e9910601c327cf2322edb9c2b66a350c2982cb0a05a85692e6bd">c53f42a1e5e13d1b4f230ee1f4a7563d2711600470bbcd89000fc4b25515e219ae45d7a1e23fd06b172b26dd607f96e8a48283b771bd08b2a9e2ae19ef1c7dd2607581b2d6c3a1dff4f3a1aa355a5202012e62171f4112f0e1f32d1eb2ed067390d91365fbecc216856821ec4576082f4e105bfdb4728b242d166b8de02c7a2953076013205f90e053572f5208143490837786358dd27c4ffe8ea007b29085471fee7585c6bf737ff0bf36841385abfb803818718bcedc522a819f081743dbf3760748d8d8480b399ce8f1cc9d18e51301bde05001c037b451ac5b9eaef1373e21ed160bcd7da1ce238a33b00fc984d1c07c495698ac372ef0c62d7485cfab0696953caeb1bff65def895affa306eed87bbd9668819dd078f6f866822a09bc2ee1882404abe59bb6884be2fa07314e81babacd2dee83b511cc6c16b48403de0ca3715cf9af4237ab632666f94a26feea4508bd8db5f792d9c7ee7370723754b14933ae5d1e655fff46c6e2948a94f0659fe78648a430ec0126fc8f1dbfee5e9ed35dd29685693eb0af486ef9140b0b55360e52c0fc50207f35a51a8fc8b1602186fc6f02f16bd7caad3913f41cfac2962fb0c5108a71c72dfb777e28c4ab1df61c8e6fef6c8bb15e2c020b1153ec30f72f7068a3a41d7979cb34f212445b925527c5f468449d3b2292645d0af23902a910f1187f943570f930ebe434f2ea56c652260ad10ae1fb9dcb04a1d1cad979f3e35f1aa3225a0f013c1f2a47995f12c30a04a397f4715e90b751b35f99d22c98758191cd2ce8f45b6a37d9e3387e720df805a85a378704ac24c06ba7d602207108e952fa7453dd45770bf580f41cc1b255c5784df3911d5770f4334b32c88b33f7f1da41fbe152444db6fa1e584d9deface25a4916dfc6af0b3dfae0a6d327061aebea743f4d77c9595371b858d6cb9ed561624ba46a73e91c9fb2e5552d947234f94a59186f4508f928b24a9ee919f6a1e7afa30b341e11f31344dc73c7cd2854a0fc7327b3cccefdb99ff50285c1943bd782268794de55afdc2c88f94581bf3a9a771245b79c50b6cd5aa9eb5687ff6e0364e7ba41694228436bdb89669b30db010e98d593323fb43a0f26b485c179a7cb1c0f24a937a110dd3265262cf520fd2b26887f7ebc0fbf142496c89d918b82fdd0d4ba73e299361e4e69ff4a968a3c44c351ea4b3b8ac0d3bfaf199ef995f8308fcc18e1a619503300efda18043408830f29abda3457224b4d66abcb89c3e129447420a0cfd121fa034d0de87f60c6ecf057dc92a1a683d781f813a7c9e3d73abc4729f017862bc4366d1090bd06090687e4562427ef4fe256cdb4deb9b05cf317cf3bd295787c096ec0354944b99dd05640891fd777e52ad2c49ed8cb82bd70fbbedd876873d3401866d3dd73da763a5e79ed3d9422285079db27ac9145964bfd995c3524da9141f81e2e9f92ecc82a573e0024faf255ee0e4aa1c19af80367ffea3acd45d4c1fb081950f7d657e9439b64db0a32d71e8218039489acd15b8d1a08ffccbe79d56bae41550ee485354777e1f4144f70bc34838eab496c80d9fa01e99f7aea1128d355723a77d8b13047811d28417a9a5bd144a5554356bcca6ee6e4840112a5981eaea875d9b8e25b352f0ec057d51f2427bef459acdf2a96b51da0c17aa3974a335ae35402c2a043660345ca66a51348240635ed6a96dfecacc255777b50fdb16f64fc850c6440be8e3671079098b909a4983caa63d6bd63b58abd2304dbf55d0690ae31c3fdad6e3fdb01164eb3d20dcfc14600daafc58355053ba1d63713a3988538592d786e706004a3ffff0b7f924dbe3ea7ed7e7a4fbc8845944102651fcfcc3735f06447bad57626cc83f1a18476ec0d8edd36ba163e292dcd8188f289845f5340846b688a2f88dfc22c69c4143250b966bc8034f6f740ea4f21f611c2314c427645e82267a39fbac1de40b24b02b5bbb6278f425928f6ccb68b46984a1af28d6377427e9eed33cc955a0283d0e4cd2cc80d1a7f810f05aeecd0fce0baf3f19a3823813baf70695f1c038d96924b9df569e7df269bd972ed786e95c10c5a1a85f0ff94fc01a514f96bacdf5cb1515aabbff291bd3cb26be7c82ed35e76036486eff6a346657de58b1cfb36c22641863f111971f9884634be3c757c8543f501521837fb6f104bbb75c67aada3d9502613921ad2631b7cc2325be58cebfce178070e96fd93ad7a434fcf30c8b7f742c30b580045fd89bddaaeaeadf68201242e246b69789de08ccb1129043b30e58d98284da86b0b1bd7b864b77a8eb4eaca1e606425c5d675eef2d071c6742d6ee54804857143c713dc36faf79ffb0c35b89b470a574e5089684acc9c75d5f5df710545ccd2a2439db0853a8153518cec959b331219e29a33de5f43d0790b8bde95a70c9bc14e232faa8b3cff3f5fc36df1392395057ed507d42001b36c4ae9b01e45b8661b8f9903afd94ac5fc3bea87acdbe4c91ef231bb6664df112bde5d3b05cffdc967ee6b479c5e3a9d0737bef9733f38fe8f8db02f455ffdee9d719126d0808af21aa96688fd0ca93d7f3b2630e140163b82ae42c5652644f022e4c1eb8be016933a204383c0b76692348f1c5140b7616f4be3d285bc2ad07f8d9bba8b23649a51d7b8ddc80d7691909e9f1091e62a75ae9344813510dc62a718dfa48c50bcfd5c60d024ad627c9a0d5b4fd55fcccf7c2bb21355c7f370081fd57e41f2fd9ee74c9a534a538d5a5b8333c3d291cd36b18ec66abd</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/daydoc/lib/hbe.js"></script><link href="/daydoc/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    <category term="专题" scheme="http://www.wqkenqing.ren/daydoc/categories/%E4%B8%93%E9%A2%98/"/>
    
    
    <category term="flink" scheme="http://www.wqkenqing.ren/daydoc/tags/flink/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/03/15/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/%E5%AD%97%E8%B4%B4/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/03/15/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/%E5%AD%97%E8%B4%B4/</id>
    <published>2024-03-15T06:43:37.443Z</published>
    <updated>2024-03-15T06:43:46.377Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br></pre></td><td class="code"><pre><span class="line">丙烯马克笔</span><br><span class="line">红蓝铅笔</span><br><span class="line">刮刮乐</span><br><span class="line">红领巾</span><br><span class="line">甘肃包书皮</span><br><span class="line">作业本</span><br><span class="line">银河写手</span><br><span class="line">儿童书包</span><br><span class="line">法国成全球第二大武器出口国</span><br><span class="line">显微镜下的玻璃刀</span><br><span class="line">初中生书包男生</span><br><span class="line">初中生书包女孩</span><br><span class="line">文房四宝</span><br><span class="line">文具盒男孩</span><br><span class="line">儿童书包幼儿园</span><br><span class="line">上林赋</span><br><span class="line">彩旗</span><br><span class="line">三菱黑科技笔</span><br><span class="line">棱镜</span><br><span class="line">嘉之派老板娘</span><br><span class="line">毕加索</span><br><span class="line">利群</span><br><span class="line">娃哈哈印章</span><br><span class="line">焖烧杯</span><br><span class="line">喷喷笔</span><br><span class="line">小书包3-6岁幼儿园</span><br><span class="line">马赛克专用剪刀</span><br><span class="line">书包小学生1-3年级</span><br><span class="line">笔记本</span><br><span class="line">棱镜talk</span><br><span class="line">小学生书包</span><br><span class="line">中华铅笔白色塑料屁股</span><br><span class="line">幼儿园书包女宝</span><br><span class="line">笔袋</span><br><span class="line">国誉笔记本</span><br><span class="line">儿童减负书包</span><br><span class="line">10000元一支的笔</span><br><span class="line">文具直播</span><br><span class="line">书包幼儿园</span><br><span class="line">放大晋</span><br><span class="line">马克笔</span><br><span class="line">一二年级用的铅笔</span><br><span class="line">黑旗</span><br><span class="line">文具</span><br><span class="line">钢笔</span><br><span class="line">中性笔</span><br><span class="line">初中生笔袋男生</span><br><span class="line">优尚按动钢笔</span><br><span class="line">0.38的笔芯</span><br><span class="line">巴布豆书包</span><br><span class="line">镇纸</span><br><span class="line">蓝黑笔</span><br><span class="line">战旗</span><br><span class="line">粉笔</span><br><span class="line">修正带</span><br><span class="line">账门牌</span><br><span class="line">本子</span><br><span class="line">恐怖警示牌</span><br><span class="line">毛笔字</span><br><span class="line">哈哈镜</span><br><span class="line">幼儿园小班书包</span><br><span class="line">14-16岁女中学生书包</span><br><span class="line">显微镜</span><br><span class="line">中华铅笔</span><br><span class="line">书包初中生</span><br><span class="line">毛笔</span><br><span class="line">高考查分0分激动视频</span><br><span class="line">油画棒</span><br><span class="line">放大镜</span><br><span class="line">初中女孩书包</span><br><span class="line">奶酪体</span><br><span class="line">涂改带</span><br><span class="line">铅笔</span><br><span class="line">手拉手模型</span><br><span class="line">火漆印章</span><br><span class="line">时间单</span><br><span class="line">丙烯马克笔晨光正版</span><br><span class="line">斑马中性笔</span><br><span class="line">书包幼儿园女孩</span><br><span class="line">笔袋大容量初中生</span><br><span class="line">橡皮擦小学生专用无屑</span><br><span class="line">水晶胶棒</span><br><span class="line">优尚钢笔</span><br><span class="line">草稿箱</span><br><span class="line">地球仪</span><br><span class="line">卖文房四宝</span><br><span class="line">ideal</span><br><span class="line">Palette power调色盘</span><br><span class="line">三菱黑科技笔写字</span><br><span class="line">日晷</span><br><span class="line">初中生男款书包</span><br><span class="line">记事本</span><br><span class="line">马克笔丙烯</span><br><span class="line">拆快递神器小刀</span><br><span class="line">铅笔小学生专用</span><br><span class="line">试卷收纳袋神器</span><br><span class="line">沉浸式整理笔袋</span><br><span class="line">铅笔小学生专用晨光</span><br><span class="line">书包5-6年级高颜值</span><br><span class="line">刮刮乐直播</span><br><span class="line">笔袋小学生1-3年级</span><br><span class="line">便利贴女孩</span><br><span class="line">雅擦</span><br><span class="line">学生书包</span><br><span class="line">蓝黑笔医护专用</span><br><span class="line">小本</span><br><span class="line">学习用品</span><br><span class="line">铋晶体</span><br><span class="line">行书字帖成人练字</span><br><span class="line">百乐官方旗舰店</span><br><span class="line">美工刀</span><br><span class="line">文具盒</span><br><span class="line">字帖</span><br><span class="line">橡皮擦</span><br><span class="line">便签</span><br><span class="line">小学生文具用品大全</span><br><span class="line">刀子</span><br><span class="line">文件夹</span><br><span class="line">晨光官方旗舰店直播</span><br><span class="line">透明笔记本</span><br><span class="line">樱花橡皮</span><br><span class="line">坐姿矫正神器</span><br><span class="line">幼儿园书包3-6岁</span><br><span class="line">书包初中男生大容量</span><br><span class="line">激光笔</span><br><span class="line">奇葩文具</span><br><span class="line">马赛克剪刀</span><br><span class="line">宣纸</span><br><span class="line">儿童幼儿园书包</span><br><span class="line">幼儿园书包</span><br><span class="line">护眼灯</span><br><span class="line">尺子套装小学生</span><br><span class="line">笔中性笔</span><br><span class="line">初中生书包</span><br><span class="line">橡皮</span><br><span class="line">玻璃黑板</span><br><span class="line">女孩笔袋6-12岁</span><br><span class="line">4-6年级学生手提袋</span><br><span class="line">手冲专用收藏夹</span><br><span class="line">男童书包幼儿园</span><br><span class="line">初中女生书包</span><br><span class="line">巴布豆双肩包</span><br><span class="line">东米</span><br><span class="line">自动铅笔</span><br><span class="line">写字姿势纠正神器</span><br><span class="line">指星笔</span><br><span class="line">儿童减负双肩包</span><br><span class="line">copilot</span><br><span class="line">菲涅尔透镜</span><br><span class="line">安全旗</span><br><span class="line">奇奇怪怪的文具</span><br><span class="line">马克笔直播间秒杀晨光48色</span><br><span class="line">幼儿园儿童书包</span><br><span class="line">马克笔丙烯晨光</span><br><span class="line">书包小学生</span><br><span class="line">斑马jj15</span><br><span class="line">修正带小学生专用</span><br><span class="line">二维码</span><br><span class="line">帐门牌</span><br><span class="line">日记本</span><br><span class="line">瞬变画本</span><br><span class="line">得力文具官方旗舰店直播</span><br><span class="line">手提袋学生专用</span><br><span class="line">双面牌</span><br><span class="line">中性笔学生专用笔</span><br><span class="line">勾线笔美术专用儿童</span><br><span class="line">小学生背包</span><br><span class="line">百乐橡皮擦</span><br><span class="line">烧杯</span><br><span class="line">蜡笔</span><br><span class="line">爱笔思画</span><br><span class="line">董宇辉卖地球仪封神</span><br><span class="line">铅笔幼儿园专用</span><br><span class="line">修正带晨光官方旗舰店</span><br><span class="line">数学方块</span><br><span class="line">上林赋临摹字帖</span><br><span class="line">笔记本本子</span><br><span class="line">国誉笔袋</span><br><span class="line">学生手提书袋</span><br><span class="line">文具盒幼儿园</span><br><span class="line">晨光可伸缩橡皮</span><br><span class="line">百乐p500</span><br><span class="line">印章</span><br><span class="line">aike卷笔刀</span><br><span class="line">阿拉蕾的橡皮擦</span><br><span class="line">点点胶</span><br><span class="line">丙烯颜料</span><br><span class="line">广告牌展示牌</span><br><span class="line">算盘</span><br><span class="line">晨光Gp1008</span><br><span class="line">抽拉纸条笔</span><br><span class="line">蓝色碳素笔</span><br><span class="line">水彩</span><br><span class="line">雅思笔</span><br><span class="line">放大镜老年人用</span><br><span class="line">荧光笔</span><br><span class="line">水彩笔</span><br><span class="line">英雄钢笔</span><br><span class="line">三菱黑科技</span><br><span class="line">笔袋女孩专用</span><br><span class="line">蜡笔小新笔</span><br><span class="line">1-3年级护脊减负书包</span><br><span class="line">沉浸式买文具</span><br><span class="line">黑笔0.5中性笔</span><br><span class="line">云龙</span><br><span class="line">甘肃人包书皮</span><br><span class="line">圆珠笔</span><br><span class="line">便利贴</span><br><span class="line">坐姿矫正器</span><br><span class="line">幼儿园书包女孩</span><br><span class="line">自动铅笔小学生专用</span><br><span class="line">书皮自粘贴透明款</span><br><span class="line">毛笔直播</span><br><span class="line">手术刀</span><br><span class="line">正品百乐网上店铺</span><br><span class="line">书包小学生3-6年级</span><br><span class="line">画画本</span><br><span class="line">晨光橡皮擦</span><br><span class="line">外驱小文具</span><br><span class="line">晨光丙烯马克笔</span><br><span class="line">书立</span><br><span class="line">按动钢笔</span><br><span class="line">同学录六年级爆款</span><br><span class="line">丙烯笔马克笔</span><br><span class="line">记号笔</span><br><span class="line">书旗</span><br><span class="line">好视力护眼灯</span><br><span class="line">旗帜</span><br><span class="line">婴儿床拼接大床</span><br><span class="line">书包初中生女孩</span><br><span class="line">行书字帖</span><br><span class="line">得力丙烯马克笔</span><br><span class="line">勾线笔</span><br><span class="line">产检收纳册</span><br><span class="line">vanwalk笔袋</span><br><span class="line">黏土</span><br><span class="line">欠条模范本</span><br><span class="line">女孩文具盒6-12岁</span><br><span class="line">笔推荐高颜值中性笔</span><br><span class="line">一年级书包女孩</span><br><span class="line">晨光和楠姐</span><br><span class="line">小学书包1-3年级</span><br><span class="line">瓜瓜乐</span><br><span class="line">浙江文房四宝</span><br><span class="line">remee studio文具</span><br><span class="line">1-3年级小学生书包</span><br><span class="line">尼泊尔手工本</span><br><span class="line">透明笔袋</span><br><span class="line">橡皮擦小学生专用无屑第一名晨光</span><br><span class="line">蜡笔不脏手可水洗</span><br><span class="line">笔芯</span><br><span class="line">碳素笔</span><br><span class="line">铅笔盒女孩</span><br><span class="line">沉浸式翻笔袋</span><br><span class="line">小机关豆豆本</span><br><span class="line">秀丽笔</span><br><span class="line">标志</span><br><span class="line">小学生书皮</span><br><span class="line">文具盒小学生1-3年级</span><br><span class="line">卡西米尔小白杆铅笔</span><br><span class="line">名字练字帖</span><br><span class="line">儿童文具盒</span><br><span class="line">红笔</span><br><span class="line">点石</span><br><span class="line">图画本</span><br><span class="line">订书机</span><br><span class="line">300元的橡皮</span><br><span class="line">晨光gp-1008</span><br><span class="line">彩铅</span><br><span class="line">文具用品</span><br><span class="line">铅笔盒</span><br><span class="line">毛笔书法</span><br><span class="line">铅笔1-3年级专用</span><br><span class="line">三菱UBA-188限定款</span><br><span class="line">正方体展开图教具</span><br><span class="line">晨光中性笔</span><br><span class="line">小学生文具盒</span><br><span class="line">remeestudio文具</span><br><span class="line">水彩笔幼儿园专用</span><br><span class="line">算盘小学生专用</span><br><span class="line">颈托防低头神器</span><br><span class="line">艾斯笔</span><br><span class="line">文具安利</span><br><span class="line">斑马官方旗舰店直播间</span><br><span class="line">书包幼儿园女款</span><br><span class="line">文具袋</span><br><span class="line">龙年限定笔</span><br><span class="line">激光手电筒</span><br><span class="line">可擦笔</span><br><span class="line">幼儿园书包男宝宝</span><br><span class="line">百乐果汁</span><br><span class="line">燕尾夹</span><br><span class="line">卷子收纳袋</span><br><span class="line">黑科技笔</span><br><span class="line">桌面吸尘器</span><br><span class="line">发光广告牌</span><br><span class="line">墨条</span><br><span class="line">意见箱</span><br><span class="line">白板写字板</span><br><span class="line">彩色玻璃笔</span><br><span class="line">初中书包女生专用</span><br><span class="line">百乐笔</span><br><span class="line">钢笔式毛笔</span><br><span class="line">调色盘</span><br><span class="line">书皮</span><br><span class="line">钢笔小学生专用</span><br><span class="line">彩笔</span><br><span class="line">电子屏黑板</span><br><span class="line">放大镜100倍高清</span><br><span class="line">水彩颜料</span><br><span class="line">爱马仕铅笔橡皮</span><br><span class="line">小米巨能写</span><br><span class="line">上界天骄矫正器</span><br><span class="line">活页本</span><br><span class="line">自动削笔器</span><br><span class="line">可升降阅读书架</span><br><span class="line">华夏万卷练字帖</span><br><span class="line">大傻牌铅笔</span><br><span class="line">削笔刀全自动晨光</span><br><span class="line">毛笔字帖</span><br><span class="line">卡拉羊官方旗舰店书包直播间</span><br><span class="line">本本</span><br><span class="line">签字笔</span><br><span class="line">文具盒女生</span><br><span class="line">记工本</span><br><span class="line">收款码</span><br><span class="line">得力修正带</span><br><span class="line">白板</span><br><span class="line">七杯奶茶扛标旗</span><br><span class="line">晨光丙烯马克笔正版</span><br><span class="line">练字帖成年人</span><br><span class="line">学生自粘书皮</span><br><span class="line">砚台</span><br><span class="line">卡西米尔</span><br><span class="line">削笔刀</span><br><span class="line">晨光修正带</span><br><span class="line">七杯奶茶迎标旗</span><br><span class="line">永生3</span><br><span class="line">削笔刀小学生专用</span><br><span class="line">儿童书包3-6岁幼儿园</span><br><span class="line">无缝印章</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/03/14/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/%E8%BF%90%E8%90%A5%E6%89%8B%E5%86%8C/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/03/14/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/%E8%BF%90%E8%90%A5%E6%89%8B%E5%86%8C/</id>
    <published>2024-03-14T08:40:58.879Z</published>
    <updated>2024-03-18T08:09:30.334Z</updated>
    
    <content type="html"><![CDATA[<p>姐妹们，春款百搭好裤上新啦。这款时尚微喇叭裤，它阔腿设计 个性时尚，还能从视觉上拉长腿型，还是立体剪裁，高腰设计，隐藏肉肉，凸显身材曲线，是日常穿搭好物，真心墙裂推荐！ </p><hr><p>家长们千万要注意，学前宝宝可以不练字但要练控笔，这样即可以锻炼宝宝的手部力量，还能培养他们的专注力，为以后正式上学打下坚实的基础</p><hr><p>有没有那种就是连笔，但是看得清还有点笔锋赞不多，然后还给人一种很出挑的感觉，很潇洒，写作业、考试不会扣分，那就对着这套字贴练习吧。</p><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">千万不要觉得剪刀危险，就不让孩子碰，让小朋友多玩手工，肯定要比玩手机好很，要给他准备合适的剪纸，一两岁以后多玩剪纸。</span><br><span class="line">对宝宝以后控笔写字，画画都非常有好处。这一套蒙式剪纸教具，还搭配了一把安全的儿童剪刀。</span><br><span class="line">宝宝可以从基础的直线剪过渡到曲线，连续剪再剪复杂的图形，剪下来的纸片，还可以贴成有趣的图案，培养宝宝的想象力和创造力。</span><br><span class="line">剪粘贴的过程，还特别锻炼孩子的手眼，协调和专注力。</span><br></pre></td></tr></table></figure><hr><p>姐妹们，快看，春款好裤上新啦，微喇叭开口设计，时尚不漏风，高腰设计，遮肉显瘦，不论你穿什么上装，搭我们这个裤子，都很时尚大气，赶紧入手试试看吧</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;姐妹们，春款百搭好裤上新啦。这款时尚微喇叭裤，它阔腿设计 个性时尚，还能从视觉上拉长腿型，还是立体剪裁，高腰设计，隐藏肉肉，凸显身材曲线，是日常穿搭好物，真心墙裂推荐！ &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;家长们千万要注意，学前宝宝可以不练字但要练控笔，这样即可以锻炼宝宝的手部力量，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/03/12/%E7%8E%8B%E9%98%81/%E8%BF%90%E8%90%A5/%E8%BF%90%E8%90%A5%E8%AF%9D%E6%9C%AF/312/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/03/12/%E7%8E%8B%E9%98%81/%E8%BF%90%E8%90%A5/%E8%BF%90%E8%90%A5%E8%AF%9D%E6%9C%AF/312/</id>
    <published>2024-03-12T09:43:26.164Z</published>
    <updated>2024-03-16T11:34:31.396Z</updated>
    
    <content type="html"><![CDATA[<h3 id="剪纸"><a href="#剪纸" class="headerlink" title="剪纸"></a>剪纸</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">宝爸宝妈们，一定要让宝贝少玩手机，要让孩子们在闲暇之余，拿起彩色剪纸，用小手一点点地剪出一个个生动的图案，不仅能锻炼他们的动手能力，还能培养他们的耐心和专注力。更重要的是，剪纸的过程还能激发孩子们的创造力和想象力，让他们在玩耍中不断成长。快来选购吧，让我们的孩子在快乐中学习！在玩耍中成长！</span><br></pre></td></tr></table></figure><p>家长们，要让少宝宝们少玩手机，趁着她们对世界充满了好奇，还活泼好动，试试这套剪纸套装，培养宝宝们的认知与动手能力！#儿童彩纸手工 #一起玩手工吧</p><p>家长们，想宝宝们少玩手机，趁着他们对世界充满了好奇，还活泼好动试试这套剪纸套装#让孩子远离手机 #一起玩手工吧 </p><p>姐妹们，塑造优美身材，看看这款男女通用的矫姿开肩美背提升气质背部矫正带,柔软透气,大人小孩都可以穿，赶紧入手吧</p><p>姐妹们，时尚#微喇裤 #春季新款谁穿谁好看 #面料柔软舒适胖瘦都能穿 #穿出长腿美感 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;剪纸&quot;&gt;&lt;a href=&quot;#剪纸&quot; class=&quot;headerlink&quot; title=&quot;剪纸&quot;&gt;&lt;/a&gt;剪纸&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/03/04/%E7%8E%8B%E9%98%81/%E8%BF%90%E8%90%A5/%E6%97%A5%E5%B8%B8%E9%80%89%E5%93%81/%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/03/04/%E7%8E%8B%E9%98%81/%E8%BF%90%E8%90%A5/%E6%97%A5%E5%B8%B8%E9%80%89%E5%93%81/%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</id>
    <published>2024-03-04T02:41:07.380Z</published>
    <updated>2024-03-07T15:39:18.380Z</updated>
    
    <content type="html"><![CDATA[<p>有没有那种就是连笔，但是看得清还有点笔锋但不多，然后还给人一种张扬个性的感觉，很潇洒，考试不会扣分，写作业，有种出挑灵动的感觉的字体，就在这里对着这本字贴练习吧，大人学生都适用！</p><p>抢！【9.9元7件套】成人学生行书速成字帖零基础行书控笔常用3000字</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;有没有那种就是连笔，但是看得清还有点笔锋但不多，然后还给人一种张扬个性的感觉，很潇洒，考试不会扣分，写作业，有种出挑灵动的感觉的字体，就在这里对着这本字贴练习吧，大人学生都适用！&lt;/p&gt;
&lt;p&gt;抢！【9.9元7件套】成人学生行书速成字帖零基础行书控笔常用3000字&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/02/14/%E7%8E%8B%E9%98%81/%E8%BF%90%E8%90%A5/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%BE%85%E4%BA%A7%E5%8C%85/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/02/14/%E7%8E%8B%E9%98%81/%E8%BF%90%E8%90%A5/%E6%9C%AA%E5%88%86%E7%B1%BB/%E5%BE%85%E4%BA%A7%E5%8C%85/</id>
    <published>2024-02-14T12:18:14.053Z</published>
    <updated>2024-02-14T12:18:14.053Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/02/02/%E7%8E%8B%E9%98%81/%E8%BF%90%E8%90%A5/%E6%9C%AA%E5%88%86%E7%B1%BB/demo/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/02/02/%E7%8E%8B%E9%98%81/%E8%BF%90%E8%90%A5/%E6%9C%AA%E5%88%86%E7%B1%BB/demo/</id>
    <published>2024-02-02T03:13:10.534Z</published>
    <updated>2024-02-02T03:13:10.534Z</updated>
    
    <content type="html"><![CDATA[<p>家里有初中生的家长们，孩子是不是背单词比较痛苦的，可以看看这本书。初中生，你得这样背单词，这是一本不需要家长和老师辅导的书，有新颖的导读，导背方法，它里面涵盖了初中三年所有的单词用不同的颜色对单词进行拆解，让孩子学会自然拼读，更符合记忆曲线，这样记住就不容易忘。后面还有例句以及拓展。如果孩子不会读，可以扫码进行跟读，这样背单词，再也不用家长操心。</p><p>我在大学专业是古典文学，本职是一名语文老师，深入在教育第一线。</p><p>为各位朋友，家长分享一些实用，有趣，有意义的读物和教辅材料等</p><p>欢迎各位选购</p><p>MiiOW&#x2F;猫人无痕内衣无钢圈软支撑女士睡眠胸罩聚拢收副乳文胸新款</p><p>2024新版【初中生你得这样背单词】人教版7-9年级必备词汇秒记单词，假期也不要忘了提升自己#单词速记 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">家长请收藏！只要孩子吃透这两三百个知识点，初中小四门就跟玩一样，我们可以给孩子准备这套小四门睡前5分钟考点暗记！小四门包含了地理、历史、生物、道德与法治。不要小看小小的一本，他把初中三年的知识都囊括了，走到哪都能随时背诵。每一科的考点、知识点都给孩子罗列的非常清楚，并且用漫画图解的方式呈现给孩子，内容丰富有趣不枯燥，孩子爱看，就像读课外书一样，每晚睡前5分钟，需要记什么罗列的非常详细，趁着假期，给孩子准备起来吧！</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;家里有初中生的家长们，孩子是不是背单词比较痛苦的，可以看看这本书。初中生，你得这样背单词，这是一本不需要家长和老师辅导的书，有新颖的导读，导背方法，它里面涵盖了初中三年所有的单词用不同的颜色对单词进行拆解，让孩子学会自然拼读，更符合记忆曲线，这样记住就不容易忘。后面还有例句</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/02/02/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/%E5%9B%9E%E9%A1%BE/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/02/02/%E7%8E%8B%E9%98%81/%E4%B8%93%E9%A2%98/%E5%9B%9E%E9%A1%BE/</id>
    <published>2024-02-02T01:28:12.681Z</published>
    <updated>2024-02-02T03:27:43.004Z</updated>
    
    <content type="html"><![CDATA[<p>接下来的需要做的事情不少，重点梳理一下。 </p><p><strong>生活中：</strong></p><ol><li>孕晚期，宝宝待产</li><li>父亲检查身体<ol><li>确定好后续治疗</li></ol></li><li>房屋整理</li><li>过年<ol><li>买烧烤架<ol><li>组织一场烧烤</li></ol></li><li>修电视</li><li>安窗帘<ol><li>自己买杆子</li><li>喊人弄伤</li></ol></li></ol></li></ol><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;接下来的需要做的事情不少，重点梳理一下。 &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;生活中：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;孕晚期，宝宝待产&lt;/li&gt;
&lt;li&gt;父亲检查身体&lt;ol&gt;
&lt;li&gt;确定好后续治疗&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;房屋整理&lt;/li&gt;
&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/22/%E7%8E%8B%E9%98%81/%E5%88%86%E4%BA%AB/Pulsar%E5%88%86%E4%BA%AB2/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/22/%E7%8E%8B%E9%98%81/%E5%88%86%E4%BA%AB/Pulsar%E5%88%86%E4%BA%AB2/</id>
    <published>2024-01-22T08:19:37.680Z</published>
    <updated>2024-01-23T05:08:18.276Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Pulsar分享"><a href="#Pulsar分享" class="headerlink" title="Pulsar分享"></a>Pulsar分享</h2><p>大家好，我今天想给大家分享的是 Pulsar。一款云原生分布式消息流平台，集消息、存储、轻量化函数式计算为一体，采用计算与存储分离架构设计，支持多租户、持久化存储、多机房跨区域数据复制，具有强一致性、高吞吐、低延时及高可扩展性等流数据存储特性。</p><p>它有以下关键特性：</p><ul><li>是下一代云原生分布式消息流平台。</li><li>Pulsar 的单个实例原生支持多个集群，可跨机房在集群间无缝地完成消息复制。</li><li>极低的发布延迟和端到端延迟。</li><li>可无缝扩展到超过一百万个 topic。</li><li>简单的客户端 API，支持 Java、Go、Python 和 C++。</li><li>主题的多种订阅模式（独占、共享和故障转移）。</li><li>通过 Apache BookKeeper 提供的持久化消息存储机制保证消息传递 。</li><li>由轻量级的 serverless 计算框架 Pulsar Functions 实现流原生的数据处理。</li><li>基于 Pulsar Functions 的 serverless connector 框架 Pulsar IO 使得数据更易移入、移出 Apache Pulsar。</li><li>分层式存储可在数据陈旧时，将数据从热存储卸载到冷&#x2F;长期存储（如 S3、GCS）中。</li></ul><hr><p>今天主要是想对Pulsar这款组件进行一个介绍，为了让大家更直观的了解到Pulsar的一些特性，我的分享将会更直接的将它与kafka对比来开展。</p><hr><h3 id="kafka-VS-pulsar-架构图对比"><a href="#kafka-VS-pulsar-架构图对比" class="headerlink" title="kafka VS pulsar 架构图对比"></a>kafka VS pulsar 架构图对比</h3><p><img src="http://img.wqkenqing.ren/typora_img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAT29aenp5,size_20,color_FFFFFF,t_70,g_se,x_16.png" alt="在这里插入图片描述" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></p><p><img src="http://img.wqkenqing.ren/typora_img/f188a12f1fd078c0b1405e60dc6f2006.png" alt="img" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></p><p>由上图可知</p><h4 id="Pulsar的组成"><a href="#Pulsar的组成" class="headerlink" title="Pulsar的组成"></a>Pulsar的组成</h4><ol><li>bookie（bookkeeper底层数据存储，在kafka中是由broker节点承担）<ol><li>BookKeeper 节点（bookie）存储消息和游标，ZooKeeper 则只用于为 broker 和 bookie 存储元数据。另外，BookKeeper 使用 RocksDB 作为内嵌数据库，用于存储内部索引，但不能独立于 BookKeeper 单独管理 RocksDB。</li><li>采用了 BookKeeper，因此伸缩性更灵活，速度更快，性能更一致，运维开销更小</li></ol></li><li>broker（这里的broker更像hbase-client、hive-thrift-server等节点与kafka的broker有所区别）<ol><li>Broker 是无状态服务，客户端需要连接到 broker 进行核心消息传递。而 BookKeeper 和 ZooKeeper 是有状态服务。</li></ol></li><li>zookeeper（元数据存储，这倒是跟kafka中的zookeeper雷同）</li></ol><hr><p>kafka VS Pulsar的一些关键名词</p><table><thead><tr><th>Pulsar</th><th>Kafka</th></tr></thead><tbody><tr><td>Topic</td><td>Topic</td></tr><tr><td>Partition</td><td>Partition</td></tr><tr><td>Ledger(Segment)&#x2F;Fragment</td><td>Fragment&#x2F;Segment</td></tr><tr><td>Bookie</td><td>Broker</td></tr><tr><td>Broker</td><td>Client SDK</td></tr><tr><td>Ensemble Size</td><td>metadata.broker.list</td></tr><tr><td>Write Quorum Size (Qw)</td><td>Replica Number</td></tr><tr><td>Ack Quorum Size (Qa)</td><td>request.required.acks</td></tr></tbody></table><hr><p>上面我们看到了，接下来我们按正常层级进行分析</p><h4 id="存储层-bookie-vs-kafka-broker"><a href="#存储层-bookie-vs-kafka-broker" class="headerlink" title="存储层 (bookie vs kafka broker)"></a>存储层 (bookie vs kafka broker)</h4><p><img src="http://img.wqkenqing.ren/typora_img/640-20240123095436487.jpeg" alt="图片" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></p><p>Pulsar 的多层架构影响了存储数据的方式，即Pulsar也是分层存储</p><p><img src="http://img.wqkenqing.ren/typora_img/640.png" alt="图片" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></p><h4 id="第一层是Topic、Subscription、Cursors"><a href="#第一层是Topic、Subscription、Cursors" class="headerlink" title="第一层是Topic、Subscription、Cursors"></a>第一层是Topic、Subscription、Cursors</h4><p>Topic下面是ledger层，保存了分片(Segment)，分片里面保存更小粒度的ertries，entries存储一条条的Message。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">消息存储在Topic中。逻辑上一个Topic是日志结构，每个消息都在这个日志结构中有一个偏移量。Apache Pulsar使用游标来跟踪偏移量。生产者将消息发送到一个指定的Topic，Apache Pulsar保证消息一旦被确认就不会丢失(正确的配置和非整个集群故障的情况下)。</span><br></pre></td></tr></table></figure><p>消费者通过订阅来消费Topic中的消息。订阅是游标(跟踪偏移量)的逻辑实体，并且还根据不同的订阅类型提供一些额外的保证</p><p>​1. Exclusive(独享) - 一个订阅只能有一个消息者消费消息</p><p>​2. Shared(共享) - 一个订阅中同时可以有多个消费者，多个消费者共享Topic中的消息</p><pre><code>3. Fail-Over(灾备) - 一个订阅同时只有一个消费者，可以有多个备份消费者。一旦主消费者故障则备份消费者接管。不会出现同时有两个活跃的消费者。</code></pre><p>一个Topic可以添加多个订阅。订阅不包含消息的数据，只包含元数据和游标。</p><p>Apache Pulsar通过允许消费者将Topic看做在消费者消费确认后删除消息的队列，或者消费者可以根据游标的回放来提供队列和日志的语义。在底层都使用日志作为存储模型。</p><hr><ol><li>Pulsar的简介</li><li>Pulsar 组件架构</li><li>Pulsar 的一条数据的读写之旅</li><li>Pulsar的运维特点</li><li>Pulsar与kafka的区别</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Pulsar分享&quot;&gt;&lt;a href=&quot;#Pulsar分享&quot; class=&quot;headerlink&quot; title=&quot;Pulsar分享&quot;&gt;&lt;/a&gt;Pulsar分享&lt;/h2&gt;&lt;p&gt;大家好，我今天想给大家分享的是 Pulsar。一款云原生分布式消息流平台，集消息、存储、轻量</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/22/%E7%8E%8B%E9%98%81/%E5%88%86%E4%BA%AB/Pulsar%E9%83%A8%E7%BD%B2/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/22/%E7%8E%8B%E9%98%81/%E5%88%86%E4%BA%AB/Pulsar%E9%83%A8%E7%BD%B2/</id>
    <published>2024-01-22T01:54:00.223Z</published>
    <updated>2024-01-22T07:02:43.401Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Pulsar安装部署"><a href="#Pulsar安装部署" class="headerlink" title="Pulsar安装部署"></a>Pulsar安装部署</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pulsar initialize-cluster-metadata \</span><br><span class="line">  --cluster yanggu-pulsar \</span><br><span class="line">  --zookeeper 192.168.10.217:2181 \</span><br><span class="line">  --configuration-store 192.168.10.217:2181 \</span><br><span class="line">  --web-service-url http://192.168.10.217:8080,192.168.10.218:8080,192.168.10.219:8080 \</span><br><span class="line">  --broker-service-url pulsar://192.168.10.217:6650,192.168.10.218:6650,192.168.10.219:6650</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Pulsar安装部署&quot;&gt;&lt;a href=&quot;#Pulsar安装部署&quot; class=&quot;headerlink&quot; title=&quot;Pulsar安装部署&quot;&gt;&lt;/a&gt;Pulsar安装部署&lt;/h3&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;tabl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/fetch-blob/README/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/fetch-blob/README/</id>
    <published>2024-01-06T06:44:19.000Z</published>
    <updated>2024-01-06T06:44:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="fetch-blob"><a href="#fetch-blob" class="headerlink" title="fetch-blob"></a>fetch-blob</h1><p><a href="https://www.npmjs.com/package/fetch-blob"><img src="https://flat.badgen.net/npm/v/fetch-blob" alt="npm version" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://github.com/node-fetch/fetch-blob/actions"><img src="https://github.com/node-fetch/fetch-blob/workflows/CI/badge.svg" alt="build status" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://codecov.io/gh/node-fetch/fetch-blob"><img src="https://flat.badgen.net/codecov/c/github/node-fetch/fetch-blob/master" alt="coverage status" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://packagephobia.now.sh/result?p=fetch-blob"><img src="https://flat.badgen.net/packagephobia/install/fetch-blob" alt="install size" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></p><p>A Blob implementation in Node.js, originally from <a href="https://github.com/node-fetch/node-fetch">node-fetch</a>.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install fetch-blob</span><br></pre></td></tr></table></figure><details>  <summary>Upgrading from 2x to 3x</summary><p>  Updating from 2 to 3 should be a breeze since there is not many changes to the blob specification.<br>  The major cause of a major release is coding standards.<br>    - internal WeakMaps was replaced with private fields<br>    - internal Buffer.from was replaced with TextEncoder&#x2F;Decoder<br>    - internal buffers was replaced with Uint8Arrays<br>    - CommonJS was replaced with ESM<br>    - The node stream returned by calling <code>blob.stream()</code> was replaced with whatwg streams<br>    - (Read “Differences from other blobs” for more info.)</p></details><details>  <summary>Differences from other Blobs</summary><ul><li>Unlike NodeJS <code>buffer.Blob</code> (Added in: v15.7.0) and browser native Blob this polyfilled version can’t be sent via PostMessage</li><li>This blob version is more arbitrary, it can be constructed with blob parts that isn’t a instance of itself<br>  it has to look and behave as a blob to be accepted as a blob part.<ul><li>The benefit of this is that you can create other types of blobs that don’t contain any internal data that has to be read in other ways, such as the <code>BlobDataItem</code> created in <code>from.js</code> that wraps a file path into a blob-like item and read lazily (nodejs plans to <a href="https://github.com/nodejs/node/issues/37340">implement this</a> as well)</li></ul></li><li>The <code>blob.stream()</code> is the most noticeable differences. It returns a WHATWG stream now. to keep it as a node stream you would have to do:</li></ul>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Readable</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;stream&#x27;</span></span><br><span class="line"><span class="keyword">const</span> stream = <span class="title class_">Readable</span>.<span class="title function_">from</span>(blob.<span class="title function_">stream</span>())</span><br></pre></td></tr></table></figure></details><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Ways to import</span></span><br><span class="line"><span class="comment">// (PS it&#x27;s dependency free ESM package so regular http-import from CDN works too)</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Blob</span> <span class="keyword">from</span> <span class="string">&#x27;fetch-blob&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">File</span> <span class="keyword">from</span> <span class="string">&#x27;fetch-blob/file.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Blob</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;fetch-blob&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">File</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;fetch-blob/file.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;<span class="title class_">Blob</span>&#125; = <span class="keyword">await</span> <span class="keyword">import</span>(<span class="string">&#x27;fetch-blob&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Ways to read the blob:</span></span><br><span class="line"><span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="string">&#x27;hello, world&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> blob.<span class="title function_">text</span>()</span><br><span class="line"><span class="keyword">await</span> blob.<span class="title function_">arrayBuffer</span>()</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> (<span class="keyword">let</span> chunk <span class="keyword">of</span>  blob.<span class="title function_">stream</span>()) &#123; ... &#125;</span><br><span class="line">blob.<span class="title function_">stream</span>().<span class="title function_">getReader</span>().<span class="title function_">read</span>()</span><br><span class="line">blob.<span class="title function_">stream</span>().<span class="title function_">getReader</span>(&#123;<span class="attr">mode</span>: <span class="string">&#x27;byob&#x27;</span>&#125;).<span class="title function_">read</span>(view)</span><br></pre></td></tr></table></figure><h3 id="Blob-part-backed-up-by-filesystem"><a href="#Blob-part-backed-up-by-filesystem" class="headerlink" title="Blob part backed up by filesystem"></a>Blob part backed up by filesystem</h3><p><code>fetch-blob/from.js</code> comes packed with tools to convert any filepath into either a Blob or a File<br>It will not read the content into memory. It will only stat the file for last modified date and file size.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// The default export is sync and use fs.stat to retrieve size &amp; last modified as a blob</span></span><br><span class="line"><span class="keyword">import</span> blobFromSync <span class="keyword">from</span> <span class="string">&#x27;fetch-blob/from.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">File</span>, <span class="title class_">Blob</span>, blobFrom, blobFromSync, fileFrom, fileFromSync&#125; <span class="keyword">from</span> <span class="string">&#x27;fetch-blob/from.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> fsFile = <span class="title function_">fileFromSync</span>(<span class="string">&#x27;./2-GiB-file.bin&#x27;</span>, <span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fsBlob = <span class="keyword">await</span> <span class="title function_">blobFrom</span>(<span class="string">&#x27;./2-GiB-file.mp4&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Not a 4 GiB memory snapshot, just holds references</span></span><br><span class="line"><span class="comment">// points to where data is located on the disk</span></span><br><span class="line"><span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([fsFile, fsBlob, <span class="string">&#x27;memory&#x27;</span>, <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(<span class="number">10</span>)])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(blob.<span class="property">size</span>) <span class="comment">// ~4 GiB</span></span><br></pre></td></tr></table></figure><p><code>blobFrom|blobFromSync|fileFrom|fileFromSync(path, [mimetype])</code></p><h3 id="Creating-Blobs-backed-up-by-other-async-sources"><a href="#Creating-Blobs-backed-up-by-other-async-sources" class="headerlink" title="Creating Blobs backed up by other async sources"></a>Creating Blobs backed up by other async sources</h3><p>Our Blob &amp; File class are more generic then any other polyfills in the way that it can accept any blob look-a-like item<br>An example of this is that our blob implementation can be constructed with parts coming from <a href="https://github.com/node-fetch/fetch-blob/blob/8ef89adad40d255a3bbd55cf38b88597c1cd5480/from.js#L32">BlobDataItem</a> (aka a filepath) or from <a href="https://nodejs.org/api/buffer.html#buffer_new_buffer_blob_sources_options">buffer.Blob</a>, It dose not have to implement all the methods - just enough that it can be read&#x2F;understood by our Blob implementation. The minium requirements is that it has <code>Symbol.toStringTag</code>, <code>size</code>, <code>slice()</code> and either a <code>stream()</code> or a <code>arrayBuffer()</code> method. If you then wrap it in our Blob or File <code>new Blob([blobDataItem])</code> then you get all of the other methods that should be implemented in a blob or file</p><p>An example of this could be to create a file or blob like item coming from a remote HTTP request. Or from a DataBase</p><p>See the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob">MDN documentation</a> and <a href="https://github.com/node-fetch/fetch-blob/blob/master/test.js">tests</a> for more details of how to use the Blob.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;fetch-blob&quot;&gt;&lt;a href=&quot;#fetch-blob&quot; class=&quot;headerlink&quot; title=&quot;fetch-blob&quot;&gt;&lt;/a&gt;fetch-blob&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/package</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/node-domexception/README/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/node-domexception/README/</id>
    <published>2024-01-06T06:44:19.000Z</published>
    <updated>2024-01-06T06:44:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DOMException"><a href="#DOMException" class="headerlink" title="DOMException"></a>DOMException</h1><p>An implementation of the DOMException class from NodeJS</p><p>NodeJS has DOMException built in, but it’s not globally available, and you can’t require&#x2F;import it from somewhere.</p><p>This package exposes the <a href="https://developer.mozilla.org/en-US/docs/Web/API/DOMException"><code>DOMException</code></a> class that comes from NodeJS itself. (including all of the legacy codes)</p><p><sub>(plz don’t depend on this package in any other environment other than node &gt;&#x3D;10.5)</sub></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">DOMException</span> <span class="keyword">from</span> <span class="string">&#x27;node-domexception&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">MessageChannel</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;worker_threads&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">hello</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> port = <span class="keyword">new</span> <span class="title class_">MessageChannel</span>().<span class="property">port1</span></span><br><span class="line">  <span class="keyword">const</span> ab = <span class="keyword">new</span> <span class="title class_">ArrayBuffer</span>()</span><br><span class="line">  port.<span class="title function_">postMessage</span>(ab, [ab, ab])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">hello</span>().<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">assert</span>(err.<span class="property">name</span> === <span class="string">&#x27;DataCloneError&#x27;</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">assert</span>(err.<span class="property">code</span> === <span class="number">25</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">assert</span>(err <span class="keyword">instanceof</span> <span class="title class_">DOMException</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> e1 = <span class="keyword">new</span> <span class="title class_">DOMException</span>(<span class="string">&#x27;Something went wrong&#x27;</span>, <span class="string">&#x27;BadThingsError&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">assert</span>(e1.<span class="property">name</span> === <span class="string">&#x27;BadThingsError&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">assert</span>(e1.<span class="property">code</span> === <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> e2 = <span class="keyword">new</span> <span class="title class_">DOMException</span>(<span class="string">&#x27;Another exciting error message&#x27;</span>, <span class="string">&#x27;NoModificationAllowedError&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">assert</span>(e2.<span class="property">name</span> === <span class="string">&#x27;NoModificationAllowedError&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">assert</span>(e2.<span class="property">code</span> === <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">assert</span>(<span class="title class_">DOMException</span>.<span class="property">INUSE_ATTRIBUTE_ERR</span> === <span class="number">10</span>)</span><br></pre></td></tr></table></figure><h1 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h1><p>The only possible way is to use some web-ish tools that have been introduced into NodeJS that throws a DOMException and catch the constructor. This is exactly what this package dose for you and exposes it.<br><br>This way you will have the same class that NodeJS has and you can check if the error is a instance of DOMException.<br><br>The instanceof check would not have worked with a custom class such as the DOMException provided by domenic which also is much larger in size since it has to re-construct the hole class from the ground up.</p><p>The DOMException is used in many places such as the Fetch API, File &amp; Blobs, PostMessaging and more. <br><br>Why they decided to call it <strong>DOM</strong>, I don’t know</p><p>Please consider sponsoring if you find this helpful</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;DOMException&quot;&gt;&lt;a href=&quot;#DOMException&quot; class=&quot;headerlink&quot; title=&quot;DOMException&quot;&gt;&lt;/a&gt;DOMException&lt;/h1&gt;&lt;p&gt;An implementation of the DOMEx</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/node-fetch/LICENSE/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/node-fetch/LICENSE/</id>
    <published>2024-01-06T06:44:19.000Z</published>
    <updated>2024-01-06T06:44:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>The MIT License (MIT)</p><p>Copyright (c) 2016 - 2020 Node Fetch Team</p><p>Permission is hereby granted, free of charge, to any person obtaining a copy<br>of this software and associated documentation files (the “Software”), to deal<br>in the Software without restriction, including without limitation the rights<br>to use, copy, modify, merge, publish, distribute, sublicense, and&#x2F;or sell<br>copies of the Software, and to permit persons to whom the Software is<br>furnished to do so, subject to the following conditions:</p><p>The above copyright notice and this permission notice shall be included in all<br>copies or substantial portions of the Software.</p><p>THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<br>SOFTWARE.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;The MIT License (MIT)&lt;/p&gt;
&lt;p&gt;Copyright (c) 2016 - 2020 Node Fetch Team&lt;/p&gt;
&lt;p&gt;Permission is hereby granted, free of charge, to any person</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/node-fetch/README/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/node-fetch/README/</id>
    <published>2024-01-06T06:44:19.000Z</published>
    <updated>2024-01-06T06:44:19.000Z</updated>
    
    <content type="html"><![CDATA[<div align="center">    <img src="docs/media/Banner.svg" alt="Node Fetch" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'/>    <br>    <p>A light-weight module that brings <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API">Fetch API</a> to Node.js.</p>    <a href="https://github.com/node-fetch/node-fetch/actions"><img src="https://github.com/node-fetch/node-fetch/workflows/CI/badge.svg?branch=master" alt="Build status" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a>    <a href="https://coveralls.io/github/node-fetch/node-fetch"><img src="https://img.shields.io/coveralls/github/node-fetch/node-fetch" alt="Coverage status" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a>    <a href="https://packagephobia.now.sh/result?p=node-fetch"><img src="https://badgen.net/packagephobia/install/node-fetch" alt="Current version" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a>    <a href="https://www.npmjs.com/package/node-fetch"><img src="https://img.shields.io/npm/v/node-fetch" alt="Install size" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a>    <a href="https://github.com/sindresorhus/awesome-nodejs"><img src="https://awesome.re/mentioned-badge.svg" alt="Mentioned in Awesome Node.js" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a>    <a href="https://discord.gg/Zxbndcm"><img src="https://img.shields.io/discord/619915844268326952?color=%237289DA&label=Discord" alt="Discord" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a>    <br>    <br>    <b>Consider supporting us on our Open Collective:</b>    <br>    <br>    <a href="https://opencollective.com/node-fetch"><img src="https://opencollective.com/node-fetch/donate/button.png?color=blue" alt="Open Collective" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></div><hr><p><strong>You might be looking for the <a href="https://github.com/node-fetch/node-fetch/tree/2.x#readme">v2 docs</a></strong></p><!-- TOC --><ul><li><a href="#motivation">Motivation</a></li><li><a href="#features">Features</a></li><li><a href="#difference-from-client-side-fetch">Difference from client-side fetch</a></li><li><a href="#installation">Installation</a></li><li><a href="#loading-and-configuring-the-module">Loading and configuring the module</a></li><li><a href="#upgrading">Upgrading</a></li><li><a href="#common-usage">Common Usage</a><ul><li><a href="#plain-text-or-html">Plain text or HTML</a></li><li><a href="#json">JSON</a></li><li><a href="#simple-post">Simple Post</a></li><li><a href="#post-with-json">Post with JSON</a></li><li><a href="#post-with-form-parameters">Post with form parameters</a></li><li><a href="#handling-exceptions">Handling exceptions</a></li><li><a href="#handling-client-and-server-errors">Handling client and server errors</a></li><li><a href="#handling-cookies">Handling cookies</a></li></ul></li><li><a href="#advanced-usage">Advanced Usage</a><ul><li><a href="#streams">Streams</a></li><li><a href="#accessing-headers-and-other-metadata">Accessing Headers and other Metadata</a></li><li><a href="#extract-set-cookie-header">Extract Set-Cookie Header</a></li><li><a href="#post-data-using-a-file">Post data using a file</a></li><li><a href="#request-cancellation-with-abortsignal">Request cancellation with AbortSignal</a></li></ul></li><li><a href="#api">API</a><ul><li><a href="#fetchurl-options">fetch(url[, options])</a></li><li><a href="#options">Options</a><ul><li><a href="#default-headers">Default Headers</a></li><li><a href="#custom-agent">Custom Agent</a></li><li><a href="#custom-highwatermark">Custom highWaterMark</a></li><li><a href="#insecure-http-parser">Insecure HTTP Parser</a></li></ul></li><li><a href="#class-request">Class: Request</a><ul><li><a href="#new-requestinput-options">new Request(input[, options])</a></li></ul></li><li><a href="#class-response">Class: Response</a><ul><li>[new Response([body[, options]])](#new-responsebody-options)</li><li><a href="#responseok">response.ok</a></li><li><a href="#responseredirected">response.redirected</a></li><li><a href="#responsetype">response.type</a></li></ul></li><li><a href="#class-headers">Class: Headers</a><ul><li><a href="#new-headersinit">new Headers([init])</a></li></ul></li><li><a href="#interface-body">Interface: Body</a><ul><li><a href="#bodybody">body.body</a></li><li><a href="#bodybodyused">body.bodyUsed</a></li><li><a href="#bodyarraybuffer">body.arrayBuffer()</a></li><li><a href="#bodyblob">body.blob()</a></li><li><a href="#formdata">body.formData()</a></li><li><a href="#bodyjson">body.json()</a></li><li><a href="#bodytext">body.text()</a></li></ul></li><li><a href="#class-fetcherror">Class: FetchError</a></li><li><a href="#class-aborterror">Class: AbortError</a></li></ul></li><li><a href="#typescript">TypeScript</a></li><li><a href="#acknowledgement">Acknowledgement</a></li><li><a href="#team">Team</a><br>          - <a href="#former">Former</a></li><li><a href="#license">License</a></li></ul><!-- /TOC --><h2 id="Motivation"><a href="#Motivation" class="headerlink" title="Motivation"></a>Motivation</h2><p>Instead of implementing <code>XMLHttpRequest</code> in Node.js to run browser-specific <a href="https://github.com/github/fetch">Fetch polyfill</a>, why not go from native <code>http</code> to <code>fetch</code> API directly? Hence, <code>node-fetch</code>, minimal code for a <code>window.fetch</code> compatible API on Node.js runtime.</p><p>See Jason Miller’s <a href="https://www.npmjs.com/package/isomorphic-unfetch">isomorphic-unfetch</a> or Leonardo Quixada’s <a href="https://github.com/lquixada/cross-fetch">cross-fetch</a> for isomorphic usage (exports <code>node-fetch</code> for server-side, <code>whatwg-fetch</code> for client-side).</p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>Stay consistent with <code>window.fetch</code> API.</li><li>Make conscious trade-off when following <a href="https://fetch.spec.whatwg.org/">WHATWG fetch spec</a> and <a href="https://streams.spec.whatwg.org/">stream spec</a> implementation details, document known differences.</li><li>Use native promise and async functions.</li><li>Use native Node streams for body, on both request and response.</li><li>Decode content encoding (gzip&#x2F;deflate&#x2F;brotli) properly, and convert string output (such as <code>res.text()</code> and <code>res.json()</code>) to UTF-8 automatically.</li><li>Useful extensions such as redirect limit, response size limit, <a href="https://github.com/node-fetch/node-fetch/blob/master/docs/ERROR-HANDLING.md">explicit errors</a> for troubleshooting.</li></ul><h2 id="Difference-from-client-side-fetch"><a href="#Difference-from-client-side-fetch" class="headerlink" title="Difference from client-side fetch"></a>Difference from client-side fetch</h2><ul><li>See known differences:<ul><li><a href="docs/v3-LIMITS.md">As of v3.x</a></li><li><a href="docs/v2-LIMITS.md">As of v2.x</a></li></ul></li><li>If you happen to use a missing feature that <code>window.fetch</code> offers, feel free to open an issue.</li><li>Pull requests are welcomed too!</li></ul><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>Current stable release (<code>3.x</code>) requires at least Node.js 12.20.0.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install node-fetch</span><br></pre></td></tr></table></figure><h2 id="Loading-and-configuring-the-module"><a href="#Loading-and-configuring-the-module" class="headerlink" title="Loading and configuring the module"></a>Loading and configuring the module</h2><h3 id="ES-Modules-ESM"><a href="#ES-Modules-ESM" class="headerlink" title="ES Modules (ESM)"></a>ES Modules (ESM)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="CommonJS"><a href="#CommonJS" class="headerlink" title="CommonJS"></a>CommonJS</h3><p><code>node-fetch</code> from v3 is an ESM-only module - you are not able to import it with <code>require()</code>.</p><p>If you cannot switch to ESM, please use v2 which remains compatible with CommonJS. Critical bug fixes will continue to be published for v2.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install node-fetch@2</span><br></pre></td></tr></table></figure><p>Alternatively, you can use the async <code>import()</code> function from CommonJS to load <code>node-fetch</code> asynchronously:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mod.cjs</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fetch</span> = (<span class="params">...args</span>) =&gt; <span class="keyword">import</span>(<span class="string">&#x27;node-fetch&#x27;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">&#123;<span class="keyword">default</span>: fetch&#125;</span>) =&gt;</span> <span class="title function_">fetch</span>(...args));</span><br></pre></td></tr></table></figure><h3 id="Providing-global-access"><a href="#Providing-global-access" class="headerlink" title="Providing global access"></a>Providing global access</h3><p>To use <code>fetch()</code> without importing it, you can patch the <code>global</code> object in node:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// fetch-polyfill.js</span></span><br><span class="line"><span class="keyword">import</span> fetch, &#123;</span><br><span class="line">  <span class="title class_">Blob</span>,</span><br><span class="line">  blobFrom,</span><br><span class="line">  blobFromSync,</span><br><span class="line">  <span class="title class_">File</span>,</span><br><span class="line">  fileFrom,</span><br><span class="line">  fileFromSync,</span><br><span class="line">  <span class="title class_">FormData</span>,</span><br><span class="line">  <span class="title class_">Headers</span>,</span><br><span class="line">  <span class="title class_">Request</span>,</span><br><span class="line">  <span class="title class_">Response</span>,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!globalThis.<span class="property">fetch</span>) &#123;</span><br><span class="line">  globalThis.<span class="property">fetch</span> = fetch</span><br><span class="line">  globalThis.<span class="property">Headers</span> = <span class="title class_">Headers</span></span><br><span class="line">  globalThis.<span class="property">Request</span> = <span class="title class_">Request</span></span><br><span class="line">  globalThis.<span class="property">Response</span> = <span class="title class_">Response</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// index.js</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./fetch-polyfill&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br></pre></td></tr></table></figure><h2 id="Upgrading"><a href="#Upgrading" class="headerlink" title="Upgrading"></a>Upgrading</h2><p>Using an old version of node-fetch? Check out the following files:</p><ul><li><a href="docs/v3-UPGRADE-GUIDE.md">2.x to 3.x upgrade guide</a></li><li><a href="docs/v2-UPGRADE-GUIDE.md">1.x to 2.x upgrade guide</a></li><li><a href="https://github.com/node-fetch/node-fetch/releases">Changelog</a></li></ul><h2 id="Common-Usage"><a href="#Common-Usage" class="headerlink" title="Common Usage"></a>Common Usage</h2><p>NOTE: The documentation below is up-to-date with <code>3.x</code> releases, if you are using an older version, please check how to <a href="#upgrading">upgrade</a>.</p><h3 id="Plain-text-or-HTML"><a href="#Plain-text-or-HTML" class="headerlink" title="Plain text or HTML"></a>Plain text or HTML</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://github.com/&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> body = <span class="keyword">await</span> response.<span class="title function_">text</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(body);</span><br></pre></td></tr></table></figure><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://api.github.com/users/github&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br></pre></td></tr></table></figure><h3 id="Simple-Post"><a href="#Simple-Post" class="headerlink" title="Simple Post"></a>Simple Post</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://httpbin.org/post&#x27;</span>, &#123;<span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, <span class="attr">body</span>: <span class="string">&#x27;a=1&#x27;</span>&#125;);</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br></pre></td></tr></table></figure><h3 id="Post-with-JSON"><a href="#Post-with-JSON" class="headerlink" title="Post with JSON"></a>Post with JSON</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> body = &#123;<span class="attr">a</span>: <span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://httpbin.org/post&#x27;</span>, &#123;</span><br><span class="line"><span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line"><span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(body),</span><br><span class="line"><span class="attr">headers</span>: &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br></pre></td></tr></table></figure><h3 id="Post-with-form-parameters"><a href="#Post-with-form-parameters" class="headerlink" title="Post with form parameters"></a>Post with form parameters</h3><p><code>URLSearchParams</code> is available on the global object in Node.js as of v10.0.0. See <a href="https://nodejs.org/api/url.html#url_class_urlsearchparams">official documentation</a> for more usage methods.</p><p>NOTE: The <code>Content-Type</code> header is only set automatically to <code>x-www-form-urlencoded</code> when an instance of <code>URLSearchParams</code> is given as such:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> params = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>();</span><br><span class="line">params.<span class="title function_">append</span>(<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://httpbin.org/post&#x27;</span>, &#123;<span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, <span class="attr">body</span>: params&#125;);</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br></pre></td></tr></table></figure><h3 id="Handling-exceptions"><a href="#Handling-exceptions" class="headerlink" title="Handling exceptions"></a>Handling exceptions</h3><p>NOTE: 3xx-5xx responses are <em>NOT</em> exceptions, and should be handled in <code>then()</code>, see the next section.</p><p>Wrapping the fetch function into a <code>try/catch</code> block will catch <em>all</em> exceptions, such as errors originating from node core libraries, like network errors, and operational errors which are instances of FetchError. See the <a href="https://github.com/node-fetch/node-fetch/blob/master/docs/ERROR-HANDLING.md">error handling document</a> for more details.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://domain.invalid/&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Handling-client-and-server-errors"><a href="#Handling-client-and-server-errors" class="headerlink" title="Handling client and server errors"></a>Handling client and server errors</h3><p>It is common to create a helper function to check that the response contains no client (4xx) or server (5xx) error responses:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HTTPResponseError</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Error</span> &#123;</span><br><span class="line"><span class="title function_">constructor</span>(<span class="params">response</span>) &#123;</span><br><span class="line"><span class="variable language_">super</span>(<span class="string">`HTTP Error Response: <span class="subst">$&#123;response.status&#125;</span> <span class="subst">$&#123;response.statusText&#125;</span>`</span>);</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">response</span> = response;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">checkStatus</span> = response =&gt; &#123;</span><br><span class="line"><span class="keyword">if</span> (response.<span class="property">ok</span>) &#123;</span><br><span class="line"><span class="comment">// response.status &gt;= 200 &amp;&amp; response.status &lt; 300</span></span><br><span class="line"><span class="keyword">return</span> response;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">HTTPResponseError</span>(response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://httpbin.org/status/400&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="title function_">checkStatus</span>(response);</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(error);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> errorBody = <span class="keyword">await</span> error.<span class="property">response</span>.<span class="title function_">text</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`Error body: <span class="subst">$&#123;errorBody&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Handling-cookies"><a href="#Handling-cookies" class="headerlink" title="Handling cookies"></a>Handling cookies</h3><p>Cookies are not stored by default. However, cookies can be extracted and passed by manipulating request and response headers. See <a href="#extract-set-cookie-header">Extract Set-Cookie Header</a> for details.</p><h2 id="Advanced-Usage"><a href="#Advanced-Usage" class="headerlink" title="Advanced Usage"></a>Advanced Usage</h2><h3 id="Streams"><a href="#Streams" class="headerlink" title="Streams"></a>Streams</h3><p>The “Node.js way” is to use streams when possible. You can pipe <code>res.body</code> to another stream. This example uses <a href="https://nodejs.org/api/stream.html#stream_stream_pipeline_streams_callback">stream.pipeline</a> to attach stream error handlers and wait for the download to complete.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createWriteStream&#125; <span class="keyword">from</span> <span class="string">&#x27;node:fs&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;pipeline&#125; <span class="keyword">from</span> <span class="string">&#x27;node:stream&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;promisify&#125; <span class="keyword">from</span> <span class="string">&#x27;node:util&#x27;</span></span><br><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> streamPipeline = <span class="title function_">promisify</span>(pipeline);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://github.githubassets.com/images/modules/logos_page/Octocat.png&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!response.<span class="property">ok</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`unexpected response <span class="subst">$&#123;response.statusText&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">await</span> <span class="title function_">streamPipeline</span>(response.<span class="property">body</span>, <span class="title function_">createWriteStream</span>(<span class="string">&#x27;./octocat.png&#x27;</span>));</span><br></pre></td></tr></table></figure><p>In Node.js 14 you can also use async iterators to read <code>body</code>; however, be careful to catch<br>errors – the longer a response runs, the more likely it is to encounter an error.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://httpbin.org/stream/3&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> (<span class="keyword">const</span> chunk <span class="keyword">of</span> response.<span class="property">body</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(chunk.<span class="title function_">toString</span>()));</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">stack</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In Node.js 12 you can also use async iterators to read <code>body</code>; however, async iterators with streams<br>did not mature until Node.js 14, so you need to do some extra work to ensure you handle errors<br>directly from the stream and wait on it response to fully close.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">read</span> = <span class="keyword">async</span> body =&gt; &#123;</span><br><span class="line"><span class="keyword">let</span> error;</span><br><span class="line">body.<span class="title function_">on</span>(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">error = err;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="keyword">await</span> (<span class="keyword">const</span> chunk <span class="keyword">of</span> body) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(chunk.<span class="title function_">toString</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">body.<span class="title function_">on</span>(<span class="string">&#x27;close&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">error ? <span class="title function_">reject</span>(error) : <span class="title function_">resolve</span>();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://httpbin.org/stream/3&#x27;</span>);</span><br><span class="line"><span class="keyword">await</span> <span class="title function_">read</span>(response.<span class="property">body</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">error</span>(err.<span class="property">stack</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Accessing-Headers-and-other-Metadata"><a href="#Accessing-Headers-and-other-Metadata" class="headerlink" title="Accessing Headers and other Metadata"></a>Accessing Headers and other Metadata</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://github.com/&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">ok</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">status</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">statusText</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">headers</span>.<span class="title function_">raw</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;content-type&#x27;</span>));</span><br></pre></td></tr></table></figure><h3 id="Extract-Set-Cookie-Header"><a href="#Extract-Set-Cookie-Header" class="headerlink" title="Extract Set-Cookie Header"></a>Extract Set-Cookie Header</h3><p>Unlike browsers, you can access raw <code>Set-Cookie</code> headers manually using <code>Headers.raw()</code>. This is a <code>node-fetch</code> only API.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://example.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Returns an array of values, instead of a string of comma-separated values</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">headers</span>.<span class="title function_">raw</span>()[<span class="string">&#x27;set-cookie&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="Post-data-using-a-file"><a href="#Post-data-using-a-file" class="headerlink" title="Post data using a file"></a>Post data using a file</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch, &#123;</span><br><span class="line">  <span class="title class_">Blob</span>,</span><br><span class="line">  blobFrom,</span><br><span class="line">  blobFromSync,</span><br><span class="line">  <span class="title class_">File</span>,</span><br><span class="line">  fileFrom,</span><br><span class="line">  fileFromSync,</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mimetype = <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line"><span class="keyword">const</span> blob = <span class="title function_">fileFromSync</span>(<span class="string">&#x27;./input.txt&#x27;</span>, mimetype)</span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;https://httpbin.org/post&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123; <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, <span class="attr">body</span>: blob &#125;)</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br></pre></td></tr></table></figure><p>node-fetch comes with a spec-compliant <a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData">FormData</a> implementations for posting<br>multipart&#x2F;form-data payloads</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch, &#123; <span class="title class_">FormData</span>, <span class="title class_">File</span>, fileFrom &#125; <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> httpbin = <span class="string">&#x27;https://httpbin.org/post&#x27;</span></span><br><span class="line"><span class="keyword">const</span> formData = <span class="keyword">new</span> <span class="title class_">FormData</span>()</span><br><span class="line"><span class="keyword">const</span> binary = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>([ <span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span> ])</span><br><span class="line"><span class="keyword">const</span> abc = <span class="keyword">new</span> <span class="title class_">File</span>([binary], <span class="string">&#x27;abc.txt&#x27;</span>, &#123; <span class="attr">type</span>: <span class="string">&#x27;text/plain&#x27;</span> &#125;)</span><br><span class="line"></span><br><span class="line">formData.<span class="title function_">set</span>(<span class="string">&#x27;greeting&#x27;</span>, <span class="string">&#x27;Hello, world!&#x27;</span>)</span><br><span class="line">formData.<span class="title function_">set</span>(<span class="string">&#x27;file-upload&#x27;</span>, abc, <span class="string">&#x27;new name.txt&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(httpbin, &#123; <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, <span class="attr">body</span>: formData &#125;)</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>()</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br></pre></td></tr></table></figure><p>If you for some reason need to post a stream coming from any arbitrary place,<br>then you can append a <a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob">Blob</a> or a <a href="https://developer.mozilla.org/en-US/docs/Web/API/File">File</a> look-a-like item.</p><p>The minimum requirement is that it has:</p><ol><li>A <code>Symbol.toStringTag</code> getter or property that is either <code>Blob</code> or <code>File</code></li><li>A known size.</li><li>And either a <code>stream()</code> method or a <code>arrayBuffer()</code> method that returns a ArrayBuffer.</li></ol><p>The <code>stream()</code> must return any async iterable object as long as it yields Uint8Array (or Buffer)<br>so Node.Readable streams and whatwg streams works just fine.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">formData.<span class="title function_">append</span>(<span class="string">&#x27;upload&#x27;</span>, &#123;</span><br><span class="line">[<span class="title class_">Symbol</span>.<span class="property">toStringTag</span>]: <span class="string">&#x27;Blob&#x27;</span>,</span><br><span class="line"><span class="attr">size</span>: <span class="number">3</span>,</span><br><span class="line">  *<span class="title function_">stream</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="keyword">new</span> <span class="title class_">Uint8Array</span>([<span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>])</span><br><span class="line">&#125;,</span><br><span class="line"><span class="title function_">arrayBuffer</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Uint8Array</span>([<span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>]).<span class="property">buffer</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;, <span class="string">&#x27;abc.txt&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="Request-cancellation-with-AbortSignal"><a href="#Request-cancellation-with-AbortSignal" class="headerlink" title="Request cancellation with AbortSignal"></a>Request cancellation with AbortSignal</h3><p>You may cancel requests with <code>AbortController</code>. A suggested implementation is <a href="https://www.npmjs.com/package/abort-controller"><code>abort-controller</code></a>.</p><p>An example of timing out a request after 150ms could be achieved as the following:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch, &#123; <span class="title class_">AbortError</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// AbortController was added in node v14.17.0 globally</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AbortController</span> = globalThis.<span class="property">AbortController</span> || <span class="keyword">await</span> <span class="keyword">import</span>(<span class="string">&#x27;abort-controller&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> controller = <span class="keyword">new</span> <span class="title class_">AbortController</span>();</span><br><span class="line"><span class="keyword">const</span> timeout = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">controller.<span class="title function_">abort</span>();</span><br><span class="line">&#125;, <span class="number">150</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://example.com&#x27;</span>, &#123;<span class="attr">signal</span>: controller.<span class="property">signal</span>&#125;);</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">&#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line"><span class="keyword">if</span> (error <span class="keyword">instanceof</span> <span class="title class_">AbortError</span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;request was aborted&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="built_in">clearTimeout</span>(timeout);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>See <a href="https://github.com/node-fetch/node-fetch/blob/master/test/">test cases</a> for more examples.</p><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="fetch-url-options"><a href="#fetch-url-options" class="headerlink" title="fetch(url[, options])"></a>fetch(url[, options])</h3><ul><li><code>url</code> A string representing the URL for fetching</li><li><code>options</code> <a href="#fetch-options">Options</a> for the HTTP(S) request</li><li>Returns: <code>Promise&lt;<a href="#class-response">Response</a>&gt;</code></li></ul><p>Perform an HTTP(S) fetch.</p><p><code>url</code> should be an absolute URL, such as <code>https://example.com/</code>. A path-relative URL (<code>/file/under/root</code>) or protocol-relative URL (<code>//can-be-http-or-https.com/</code>) will result in a rejected <code>Promise</code>.</p><p><a id="fetch-options"></a></p><h3 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h3><p>The default values are shown after each option key.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="comment">// These properties are part of the Fetch Standard</span></span><br><span class="line"><span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line"><span class="attr">headers</span>: &#123;&#125;,            <span class="comment">// Request headers. format is the identical to that accepted by the Headers constructor (see below)</span></span><br><span class="line"><span class="attr">body</span>: <span class="literal">null</span>,             <span class="comment">// Request body. can be null, or a Node.js Readable stream</span></span><br><span class="line"><span class="attr">redirect</span>: <span class="string">&#x27;follow&#x27;</span>,     <span class="comment">// Set to `manual` to extract redirect headers, `error` to reject redirect</span></span><br><span class="line"><span class="attr">signal</span>: <span class="literal">null</span>,           <span class="comment">// Pass an instance of AbortSignal to optionally abort requests</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// The following properties are node-fetch extensions</span></span><br><span class="line"><span class="attr">follow</span>: <span class="number">20</span>,             <span class="comment">// maximum redirect count. 0 to not follow redirect</span></span><br><span class="line"><span class="attr">compress</span>: <span class="literal">true</span>,         <span class="comment">// support gzip/deflate content encoding. false to disable</span></span><br><span class="line"><span class="attr">size</span>: <span class="number">0</span>,                <span class="comment">// maximum response body size in bytes. 0 to disable</span></span><br><span class="line"><span class="attr">agent</span>: <span class="literal">null</span>,            <span class="comment">// http(s).Agent instance or function that returns an instance (see below)</span></span><br><span class="line"><span class="attr">highWaterMark</span>: <span class="number">16384</span>,   <span class="comment">// the maximum number of bytes to store in the internal buffer before ceasing to read from the underlying resource.</span></span><br><span class="line"><span class="attr">insecureHTTPParser</span>: <span class="literal">false</span><span class="comment">// Use an insecure HTTP parser that accepts invalid HTTP headers when `true`.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Default-Headers"><a href="#Default-Headers" class="headerlink" title="Default Headers"></a>Default Headers</h4><p>If no values are set, the following request headers will be sent automatically:</p><table><thead><tr><th>Header</th><th>Value</th></tr></thead><tbody><tr><td><code>Accept-Encoding</code></td><td><code>gzip, deflate, br</code> (when <code>options.compress === true</code>)</td></tr><tr><td><code>Accept</code></td><td><code>*/*</code></td></tr><tr><td><code>Content-Length</code></td><td><em>(automatically calculated, if possible)</em></td></tr><tr><td><code>Host</code></td><td><em>(host and port information from the target URI)</em></td></tr><tr><td><code>Transfer-Encoding</code></td><td><code>chunked</code> <em>(when <code>req.body</code> is a stream)</em></td></tr><tr><td><code>User-Agent</code></td><td><code>node-fetch</code></td></tr></tbody></table><p>Note: when <code>body</code> is a <code>Stream</code>, <code>Content-Length</code> is not set automatically.</p><h4 id="Custom-Agent"><a href="#Custom-Agent" class="headerlink" title="Custom Agent"></a>Custom Agent</h4><p>The <code>agent</code> option allows you to specify networking related options which are out of the scope of Fetch, including and not limited to the following:</p><ul><li>Support self-signed certificate</li><li>Use only IPv4 or IPv6</li><li>Custom DNS Lookup</li></ul><p>See <a href="https://nodejs.org/api/http.html#http_new_agent_options"><code>http.Agent</code></a> for more information.</p><p>If no agent is specified, the default agent provided by Node.js is used. Note that <a href="https://github.com/nodejs/node/blob/4267b92604ad78584244488e7f7508a690cb80d0/lib/_http_agent.js#L564">this changed in Node.js 19</a> to have <code>keepalive</code> true by default. If you wish to enable <code>keepalive</code> in an earlier version of Node.js, you can override the agent as per the following code sample. </p><p>In addition, the <code>agent</code> option accepts a function that returns <code>http</code>(s)<code>.Agent</code> instance given current <a href="https://nodejs.org/api/url.html">URL</a>, this is useful during a redirection chain across HTTP and HTTPS protocol.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;node:http&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> https <span class="keyword">from</span> <span class="string">&#x27;node:https&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> httpAgent = <span class="keyword">new</span> http.<span class="title class_">Agent</span>(&#123;</span><br><span class="line"><span class="attr">keepAlive</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> httpsAgent = <span class="keyword">new</span> https.<span class="title class_">Agent</span>(&#123;</span><br><span class="line"><span class="attr">keepAlive</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> options = &#123;</span><br><span class="line"><span class="attr">agent</span>: <span class="keyword">function</span>(<span class="params">_parsedURL</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (_parsedURL.<span class="property">protocol</span> == <span class="string">&#x27;http:&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> httpAgent;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> httpsAgent;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><a id="custom-highWaterMark"></a></p><h4 id="Custom-highWaterMark"><a href="#Custom-highWaterMark" class="headerlink" title="Custom highWaterMark"></a>Custom highWaterMark</h4><p>Stream on Node.js have a smaller internal buffer size (16kB, aka <code>highWaterMark</code>) from client-side browsers (&gt;1MB, not consistent across browsers). Because of that, when you are writing an isomorphic app and using <code>res.clone()</code>, it will hang with large response in Node.</p><p>The recommended way to fix this problem is to resolve cloned response in parallel:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://example.com&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> r1 = response.<span class="title function_">clone</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> results = <span class="keyword">await</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>([response.<span class="title function_">json</span>(), r1.<span class="title function_">text</span>()]);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(results[<span class="number">0</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(results[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>If for some reason you don’t like the solution above, since <code>3.x</code> you are able to modify the <code>highWaterMark</code> option:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://example.com&#x27;</span>, &#123;</span><br><span class="line"><span class="comment">// About 1MB</span></span><br><span class="line"><span class="attr">highWaterMark</span>: <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = <span class="keyword">await</span> res.<span class="title function_">clone</span>().<span class="title function_">arrayBuffer</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(result);</span><br></pre></td></tr></table></figure><h4 id="Insecure-HTTP-Parser"><a href="#Insecure-HTTP-Parser" class="headerlink" title="Insecure HTTP Parser"></a>Insecure HTTP Parser</h4><p>Passed through to the <code>insecureHTTPParser</code> option on http(s).request. See <a href="https://nodejs.org/api/http.html#http_http_request_url_options_callback"><code>http.request</code></a> for more information.</p><h4 id="Manual-Redirect"><a href="#Manual-Redirect" class="headerlink" title="Manual Redirect"></a>Manual Redirect</h4><p>The <code>redirect: &#39;manual&#39;</code> option for node-fetch is different from the browser &amp; specification, which<br>results in an <a href="https://fetch.spec.whatwg.org/#concept-filtered-response-opaque-redirect">opaque-redirect filtered response</a>.<br>node-fetch gives you the typical <a href="https://fetch.spec.whatwg.org/#concept-filtered-response-basic">basic filtered response</a> instead.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://httpbin.org/status/301&#x27;</span>, &#123; <span class="attr">redirect</span>: <span class="string">&#x27;manual&#x27;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (response.<span class="property">status</span> === <span class="number">301</span> || response.<span class="property">status</span> === <span class="number">302</span>) &#123;</span><br><span class="line"><span class="keyword">const</span> locationURL = <span class="keyword">new</span> <span class="title function_">URL</span>(response.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;location&#x27;</span>), response.<span class="property">url</span>);</span><br><span class="line"><span class="keyword">const</span> response2 = <span class="keyword">await</span> <span class="title function_">fetch</span>(locationURL, &#123; <span class="attr">redirect</span>: <span class="string">&#x27;manual&#x27;</span> &#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">dir</span>(response2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a id="class-request"></a></p><h3 id="Class-Request"><a href="#Class-Request" class="headerlink" title="Class: Request"></a>Class: Request</h3><p>An HTTP(S) request containing information about URL, method, headers, and the body. This class implements the <a href="#iface-body">Body</a> interface.</p><p>Due to the nature of Node.js, the following properties are not implemented at this moment:</p><ul><li><code>type</code></li><li><code>destination</code></li><li><code>mode</code></li><li><code>credentials</code></li><li><code>cache</code></li><li><code>integrity</code></li><li><code>keepalive</code></li></ul><p>The following node-fetch extension properties are provided:</p><ul><li><code>follow</code></li><li><code>compress</code></li><li><code>counter</code></li><li><code>agent</code></li><li><code>highWaterMark</code></li></ul><p>See <a href="#fetch-options">options</a> for exact meaning of these extensions.</p><h4 id="new-Request-input-options"><a href="#new-Request-input-options" class="headerlink" title="new Request(input[, options])"></a>new Request(input[, options])</h4><p><small><em>(spec-compliant)</em></small></p><ul><li><code>input</code> A string representing a URL, or another <code>Request</code> (which will be cloned)</li><li><code>options</code> <a href="#fetch-options">Options</a> for the HTTP(S) request</li></ul><p>Constructs a new <code>Request</code> object. The constructor is identical to that in the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Request/Request">browser</a>.</p><p>In most cases, directly <code>fetch(url, options)</code> is simpler than creating a <code>Request</code> object.</p><p><a id="class-response"></a></p><h3 id="Class-Response"><a href="#Class-Response" class="headerlink" title="Class: Response"></a>Class: Response</h3><p>An HTTP(S) response. This class implements the <a href="#iface-body">Body</a> interface.</p><p>The following properties are not implemented in node-fetch at this moment:</p><ul><li><code>trailer</code></li></ul><h4 id="new-Response-body-options"><a href="#new-Response-body-options" class="headerlink" title="new Response([body[, options]])"></a>new Response([body[, options]])</h4><p><small><em>(spec-compliant)</em></small></p><ul><li><code>body</code> A <code>String</code> or <a href="https://nodejs.org/api/stream.html#stream_readable_streams"><code>Readable</code> stream</a></li><li><code>options</code> A <a href="https://fetch.spec.whatwg.org/#responseinit"><code>ResponseInit</code></a> options dictionary</li></ul><p>Constructs a new <code>Response</code> object. The constructor is identical to that in the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Response/Response">browser</a>.</p><p>Because Node.js does not implement service workers (for which this class was designed), one rarely has to construct a <code>Response</code> directly.</p><h4 id="response-ok"><a href="#response-ok" class="headerlink" title="response.ok"></a>response.ok</h4><p><small><em>(spec-compliant)</em></small></p><p>Convenience property representing if the request ended normally. Will evaluate to true if the response status was greater than or equal to 200 but smaller than 300.</p><h4 id="response-redirected"><a href="#response-redirected" class="headerlink" title="response.redirected"></a>response.redirected</h4><p><small><em>(spec-compliant)</em></small></p><p>Convenience property representing if the request has been redirected at least once. Will evaluate to true if the internal redirect counter is greater than 0.</p><h4 id="response-type"><a href="#response-type" class="headerlink" title="response.type"></a>response.type</h4><p><small><em>(deviation from spec)</em></small></p><p>Convenience property representing the response’s type. node-fetch only supports <code>&#39;default&#39;</code> and <code>&#39;error&#39;</code> and does not make use of <a href="https://fetch.spec.whatwg.org/#concept-filtered-response">filtered responses</a>.</p><p><a id="class-headers"></a></p><h3 id="Class-Headers"><a href="#Class-Headers" class="headerlink" title="Class: Headers"></a>Class: Headers</h3><p>This class allows manipulating and iterating over a set of HTTP headers. All methods specified in the <a href="https://fetch.spec.whatwg.org/">Fetch Standard</a> are implemented.</p><h4 id="new-Headers-init"><a href="#new-Headers-init" class="headerlink" title="new Headers([init])"></a>new Headers([init])</h4><p><small><em>(spec-compliant)</em></small></p><ul><li><code>init</code> Optional argument to pre-fill the <code>Headers</code> object</li></ul><p>Construct a new <code>Headers</code> object. <code>init</code> can be either <code>null</code>, a <code>Headers</code> object, an key-value map object or any iterable object.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Example adapted from https://fetch.spec.whatwg.org/#example-headers-class</span></span><br><span class="line"><span class="keyword">import</span> &#123;<span class="title class_">Headers</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> meta = &#123;</span><br><span class="line"><span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/xml&#x27;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> headers = <span class="keyword">new</span> <span class="title class_">Headers</span>(meta);</span><br><span class="line"></span><br><span class="line"><span class="comment">// The above is equivalent to</span></span><br><span class="line"><span class="keyword">const</span> meta = [[<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/xml&#x27;</span>]];</span><br><span class="line"><span class="keyword">const</span> headers = <span class="keyword">new</span> <span class="title class_">Headers</span>(meta);</span><br><span class="line"></span><br><span class="line"><span class="comment">// You can in fact use any iterable objects, like a Map or even another Headers</span></span><br><span class="line"><span class="keyword">const</span> meta = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">meta.<span class="title function_">set</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/xml&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> headers = <span class="keyword">new</span> <span class="title class_">Headers</span>(meta);</span><br><span class="line"><span class="keyword">const</span> copyOfHeaders = <span class="keyword">new</span> <span class="title class_">Headers</span>(headers);</span><br></pre></td></tr></table></figure><p><a id="iface-body"></a></p><h3 id="Interface-Body"><a href="#Interface-Body" class="headerlink" title="Interface: Body"></a>Interface: Body</h3><p><code>Body</code> is an abstract interface with methods that are applicable to both <code>Request</code> and <code>Response</code> classes.</p><h4 id="body-body"><a href="#body-body" class="headerlink" title="body.body"></a>body.body</h4><p><small><em>(deviation from spec)</em></small></p><ul><li>Node.js <a href="https://nodejs.org/api/stream.html#stream_readable_streams"><code>Readable</code> stream</a></li></ul><p>Data are encapsulated in the <code>Body</code> object. Note that while the <a href="https://fetch.spec.whatwg.org/">Fetch Standard</a> requires the property to always be a WHATWG <code>ReadableStream</code>, in node-fetch it is a Node.js <a href="https://nodejs.org/api/stream.html#stream_readable_streams"><code>Readable</code> stream</a>.</p><h4 id="body-bodyUsed"><a href="#body-bodyUsed" class="headerlink" title="body.bodyUsed"></a>body.bodyUsed</h4><p><small><em>(spec-compliant)</em></small></p><ul><li><code>Boolean</code></li></ul><p>A boolean property for if this body has been consumed. Per the specs, a consumed body cannot be used again.</p><h4 id="body-arrayBuffer"><a href="#body-arrayBuffer" class="headerlink" title="body.arrayBuffer()"></a>body.arrayBuffer()</h4><h4 id="body-formData"><a href="#body-formData" class="headerlink" title="body.formData()"></a>body.formData()</h4><h4 id="body-blob"><a href="#body-blob" class="headerlink" title="body.blob()"></a>body.blob()</h4><h4 id="body-json"><a href="#body-json" class="headerlink" title="body.json()"></a>body.json()</h4><h4 id="body-text"><a href="#body-text" class="headerlink" title="body.text()"></a>body.text()</h4><p><code>fetch</code> comes with methods to parse <code>multipart/form-data</code> payloads as well as<br><code>x-www-form-urlencoded</code> bodies using <code>.formData()</code> this comes from the idea that<br>Service Worker can intercept such messages before it’s sent to the server to<br>alter them. This is useful for anybody building a server so you can use it to<br>parse &amp; consume payloads.</p><details><summary>Code example</summary><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;node:http&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Response</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node-fetch&#x27;</span></span><br><span class="line"></span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">async</span> <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> formData = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Response</span>(req, &#123;</span><br><span class="line">    <span class="attr">headers</span>: req.<span class="property">headers</span> <span class="comment">// Pass along the boundary value</span></span><br><span class="line">  &#125;).<span class="title function_">formData</span>()</span><br><span class="line">  <span class="keyword">const</span> allFields = [...formData]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> file = formData.<span class="title function_">get</span>(<span class="string">&#x27;uploaded-files&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> arrayBuffer = <span class="keyword">await</span> file.<span class="title function_">arrayBuffer</span>()</span><br><span class="line">  <span class="keyword">const</span> text = <span class="keyword">await</span> file.<span class="title function_">text</span>()</span><br><span class="line">  <span class="keyword">const</span> whatwgReadableStream = file.<span class="title function_">stream</span>()</span><br><span class="line"></span><br><span class="line">  <span class="comment">// other was to consume the request could be to do:</span></span><br><span class="line">  <span class="keyword">const</span> json = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Response</span>(req).<span class="title function_">json</span>()</span><br><span class="line">  <span class="keyword">const</span> text = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Response</span>(req).<span class="title function_">text</span>()</span><br><span class="line">  <span class="keyword">const</span> arrayBuffer = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Response</span>(req).<span class="title function_">arrayBuffer</span>()</span><br><span class="line">  <span class="keyword">const</span> blob = <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Response</span>(req, &#123;</span><br><span class="line">    <span class="attr">headers</span>: req.<span class="property">headers</span> <span class="comment">// So that `type` inherits `Content-Type`</span></span><br><span class="line">  &#125;.<span class="title function_">blob</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></details><p><a id="class-fetcherror"></a></p><h3 id="Class-FetchError"><a href="#Class-FetchError" class="headerlink" title="Class: FetchError"></a>Class: FetchError</h3><p><small><em>(node-fetch extension)</em></small></p><p>An operational error in the fetching process. See <a href="https://github.com/node-fetch/node-fetch/blob/master/docs/ERROR-HANDLING.md">ERROR-HANDLING.md</a> for more info.</p><p><a id="class-aborterror"></a></p><h3 id="Class-AbortError"><a href="#Class-AbortError" class="headerlink" title="Class: AbortError"></a>Class: AbortError</h3><p><small><em>(node-fetch extension)</em></small></p><p>An Error thrown when the request is aborted in response to an <code>AbortSignal</code>‘s <code>abort</code> event. It has a <code>name</code> property of <code>AbortError</code>. See <a href="https://github.com/node-fetch/node-fetch/blob/master/docs/ERROR-HANDLING.md">ERROR-HANDLING.MD</a> for more info.</p><h2 id="TypeScript"><a href="#TypeScript" class="headerlink" title="TypeScript"></a>TypeScript</h2><p><strong>Since <code>3.x</code> types are bundled with <code>node-fetch</code>, so you don’t need to install any additional packages.</strong></p><p>For older versions please use the type definitions from <a href="https://github.com/DefinitelyTyped/DefinitelyTyped">DefinitelyTyped</a>:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev @types/node-fetch@2.x</span><br></pre></td></tr></table></figure><h2 id="Acknowledgement"><a href="#Acknowledgement" class="headerlink" title="Acknowledgement"></a>Acknowledgement</h2><p>Thanks to <a href="https://github.com/github/fetch">github&#x2F;fetch</a> for providing a solid implementation reference.</p><h2 id="Team"><a href="#Team" class="headerlink" title="Team"></a>Team</h2><table><thead><tr><th><a href="https://github.com/bitinn"><img src="https://github.com/bitinn.png?size=100" alt="David Frank" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></th><th><a href="https://github.com/jimmywarting"><img src="https://github.com/jimmywarting.png?size=100" alt="Jimmy Wärting" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></th><th><a href="https://github.com/xxczaki"><img src="https://github.com/xxczaki.png?size=100" alt="Antoni Kepinski" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></th><th><a href="https://github.com/Richienb"><img src="https://github.com/Richienb.png?size=100" alt="Richie Bendall" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></th><th><a href="https://github.com/gr2m"><img src="https://github.com/gr2m.png?size=100" alt="Gregor Martynus" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></th></tr></thead><tbody><tr><td><a href="https://bitinn.net/">David Frank</a></td><td><a href="https://jimmy.warting.se/">Jimmy Wärting</a></td><td><a href="https://kepinski.ch/">Antoni Kepinski</a></td><td><a href="https://www.richie-bendall.ml/">Richie Bendall</a></td><td><a href="https://twitter.com/gr2m">Gregor Martynus</a></td></tr></tbody></table><h6 id="Former"><a href="#Former" class="headerlink" title="Former"></a>Former</h6><ul><li><a href="https://github.com/timothygu">Timothy Gu</a></li><li><a href="https://github.com/jkantr">Jared Kantrowitz</a></li></ul><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="LICENSE.md">MIT</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;div align=&quot;center&quot;&gt;
    &lt;img src=&quot;docs/media/Banner.svg&quot; alt=&quot;Node Fetch&quot; loading=&quot;lazy&quot; onerror=&#39;this.onerror=null;this.src=&quot;/daydoc/img/4</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/web-streams-polyfill/README/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/06/%E7%8E%8B%E9%98%81/test/node_modules/web-streams-polyfill/README/</id>
    <published>2024-01-06T06:44:19.000Z</published>
    <updated>2024-01-06T06:44:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web-streams-polyfill"><a href="#web-streams-polyfill" class="headerlink" title="web-streams-polyfill"></a>web-streams-polyfill</h1><p>Web Streams, based on the WHATWG spec reference implementation.  </p><p><a href="https://travis-ci.com/MattiasBuelens/web-streams-polyfill"><img src="https://api.travis-ci.com/MattiasBuelens/web-streams-polyfill.svg?branch=master" alt="build status" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://www.npmjs.com/package/web-streams-polyfill"><img src="https://img.shields.io/npm/v/web-streams-polyfill.svg" alt="npm version" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://github.com/MattiasBuelens/web-streams-polyfill/blob/master/LICENSE"><img src="https://img.shields.io/npm/l/web-streams-polyfill.svg" alt="license" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://gitter.im/web-streams-polyfill/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge"><img src="https://badges.gitter.im/web-streams-polyfill/Lobby.svg" alt="Join the chat at https://gitter.im/web-streams-polyfill/Lobby" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></p><h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><ul><li><a href="https://streams.spec.whatwg.org/">Official spec</a></li><li><a href="https://github.com/whatwg/streams">Reference implementation</a></li></ul><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>This library comes in multiple variants:</p><ul><li><code>web-streams-polyfill</code>: a polyfill that replaces the native stream implementations.<br>Recommended for use in web apps supporting older browsers through a <code>&lt;script&gt;</code> tag.</li><li><code>web-streams-polyfill/es6</code>: a polyfill targeting ES2015+ environments.<br>Recommended for use in web apps supporting modern browsers through a <code>&lt;script&gt;</code> tag.</li><li><code>web-streams-polyfill/es2018</code>: a polyfill targeting ES2018+ environments.</li><li><code>web-streams-polyfill/ponyfill</code>: a <a href="https://github.com/sindresorhus/ponyfill">ponyfill</a> that provides<br>the stream implementations without replacing any globals.<br>Recommended for use in legacy Node applications, or in web libraries supporting older browsers.</li><li><code>web-streams-polyfill/ponyfill/es6</code>: a ponyfill targeting ES2015+ environments.<br>Recommended for use in Node 6+ applications, or in web libraries supporting modern browsers.</li><li><code>web-streams-polyfill/ponyfill/es2018</code>: a ponyfill targeting ES2018+ environments.<br>Recommended for use in Node 10+ applications.</li></ul><p>Each variant also includes TypeScript type definitions, compatible with the DOM type definitions for streams included in TypeScript.</p><p>Usage as a polyfill:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- option 1: hosted by unpkg CDN --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/web-streams-polyfill/dist/polyfill.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- option 2: self hosted --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;/path/to/web-streams-polyfill/dist/polyfill.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> readable = <span class="keyword">new</span> <span class="title class_">ReadableStream</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Usage as a Node module:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> streams = <span class="built_in">require</span>(<span class="string">&quot;web-streams-polyfill/ponyfill&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> readable = <span class="keyword">new</span> streams.<span class="title class_">ReadableStream</span>();</span><br></pre></td></tr></table></figure><p>Usage as a ES2015 module:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ReadableStream</span> &#125; <span class="keyword">from</span> <span class="string">&quot;web-streams-polyfill/ponyfill&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> readable = <span class="keyword">new</span> <span class="title class_">ReadableStream</span>();</span><br></pre></td></tr></table></figure><h2 id="Compatibility"><a href="#Compatibility" class="headerlink" title="Compatibility"></a>Compatibility</h2><p>The <code>polyfill</code> and <code>ponyfill</code> variants work in any ES5-compatible environment that has a global <code>Promise</code>.<br>If you need to support older browsers or Node versions that do not have a native <code>Promise</code> implementation<br>(check the <a href="https://kangax.github.io/compat-table/es6/#test-Promise">support table</a>), you must first include a <code>Promise</code> polyfill<br>(e.g. <a href="https://www.npmjs.com/package/promise-polyfill">promise-polyfill</a>).</p><p>The <code>polyfill/es6</code> and <code>ponyfill/es6</code> variants work in any ES2015-compatible environment.</p><p>The <code>polyfill/es2018</code> and <code>ponyfill/es2018</code> variants work in any ES2018-compatible environment.</p><p><a href="https://streams.spec.whatwg.org/#rs-asynciterator">Async iterable support for <code>ReadableStream</code></a> is available in all variants, but requires an ES2018-compatible environment or a polyfill for <code>Symbol.asyncIterator</code>.</p><p><a href="https://streams.spec.whatwg.org/#ws-default-controller-signal"><code>WritableStreamDefaultController.signal</code></a> is available in all variants, but requires a global <code>AbortController</code> constructor. If necessary, consider using a polyfill such as <a href="https://www.npmjs.com/package/abortcontroller-polyfill">abortcontroller-polyfill</a>.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/read">Reading with a BYOB reader</a> is available in all variants, but requires <code>ArrayBuffer.prototype.transfer()</code> or <code>structuredClone()</code> to exist in order to correctly transfer the given view’s buffer. If not available, then the buffer won’t be transferred during the read.</p><h2 id="Compliance"><a href="#Compliance" class="headerlink" title="Compliance"></a>Compliance</h2><p>The polyfill implements <a href="https://streams.spec.whatwg.org/commit-snapshots/4dc123a6e7f7ba89a8c6a7975b021156f39cab52/">version <code>4dc123a</code> (13 Nov 2023)</a> of the streams specification.</p><p>The polyfill is tested against the same <a href="https://github.com/web-platform-tests/wpt/tree/2a298b616b7c865917d7198a287310881cbfdd8d/streams">web platform tests</a> that are used by browsers to test their native implementations.<br>The polyfill aims to pass all tests, although it allows some exceptions for practical reasons:</p><ul><li>The <code>es2018</code> variant passes all of the tests.</li><li>The <code>es6</code> variant passes the same tests as the <code>es2018</code> variant, except for the <a href="https://github.com/web-platform-tests/wpt/blob/2a298b616b7c865917d7198a287310881cbfdd8d/streams/readable-streams/async-iterator.any.js#L24">test for the prototype of <code>ReadableStream</code>‘s async iterator</a>.<br>Retrieving the correct <code>%AsyncIteratorPrototype%</code> requires using an async generator (<code>async function* () &#123;&#125;</code>), which is invalid syntax before ES2018.<br>Instead, the polyfill <a href="https://github.com/MattiasBuelens/web-streams-polyfill/blob/v2.0.0/src/target/es5/stub/async-iterator-prototype.ts">creates its own version</a> which is functionally equivalent to the real prototype.</li><li>The <code>es5</code> variant passes the same tests as the <code>es6</code> variant, except for various tests about specific characteristics of the constructors, properties and methods.<br>These test failures do not affect the run-time behavior of the polyfill.<br>For example:<ul><li>The <code>name</code> property of down-leveled constructors is incorrect.</li><li>The <code>length</code> property of down-leveled constructors and methods with optional arguments is incorrect.</li><li>Not all properties and methods are correctly marked as non-enumerable.</li><li>Down-leveled class methods are not correctly marked as non-constructable.</li></ul></li></ul><p>The type definitions are compatible with the built-in stream types of TypeScript 3.3.</p><h2 id="Contributors"><a href="#Contributors" class="headerlink" title="Contributors"></a>Contributors</h2><p>Thanks to these people for their work on <a href="https://github.com/creatorrr/web-streams-polyfill">the original polyfill</a>:</p><ul><li>Diwank Singh Tomer (<a href="https://github.com/creatorrr">creatorrr</a>)</li><li>Anders Riutta (<a href="https://github.com/ariutta">ariutta</a>)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web-streams-polyfill&quot;&gt;&lt;a href=&quot;#web-streams-polyfill&quot; class=&quot;headerlink&quot; title=&quot;web-streams-polyfill&quot;&gt;&lt;/a&gt;web-streams-polyfill&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/05/%E7%8E%8B%E9%98%81/test/node_modules/asynckit/README/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/05/%E7%8E%8B%E9%98%81/test/node_modules/asynckit/README/</id>
    <published>2024-01-05T14:24:23.000Z</published>
    <updated>2024-01-05T14:24:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="asynckit"><a href="#asynckit" class="headerlink" title="asynckit "></a>asynckit <a href="https://www.npmjs.com/package/asynckit"><img src="https://img.shields.io/npm/v/asynckit.svg?style=flat" alt="NPM Module" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></h1><p>Minimal async jobs utility library, with streams support.</p><p><a href="https://travis-ci.org/alexindigo/asynckit"><img src="https://img.shields.io/travis/alexindigo/asynckit/v0.4.0.svg?label=browser&style=flat" alt="PhantomJS Build" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://travis-ci.org/alexindigo/asynckit"><img src="https://img.shields.io/travis/alexindigo/asynckit/v0.4.0.svg?label=linux:0.12-6.x&style=flat" alt="Linux Build" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://ci.appveyor.com/project/alexindigo/asynckit"><img src="https://img.shields.io/appveyor/ci/alexindigo/asynckit/v0.4.0.svg?label=windows:0.12-6.x&style=flat" alt="Windows Build" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></p><p><a href="https://coveralls.io/github/alexindigo/asynckit?branch=master"><img src="https://img.shields.io/coveralls/alexindigo/asynckit/v0.4.0.svg?label=code+coverage&style=flat" alt="Coverage Status" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://david-dm.org/alexindigo/asynckit"><img src="https://img.shields.io/david/alexindigo/asynckit/v0.4.0.svg?style=flat" alt="Dependency Status" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a><br><a href="https://www.bithound.io/github/alexindigo/asynckit"><img src="https://www.bithound.io/github/alexindigo/asynckit/badges/score.svg" alt="bitHound Overall Score" loading="lazy" onerror='this.onerror=null;this.src="/daydoc/img/404.jpg"'></a></p><!-- [![Readme](https://img.shields.io/badge/readme-tested-brightgreen.svg?style=flat)](https://www.npmjs.com/package/reamde) --><p>AsyncKit provides harness for <code>parallel</code> and <code>serial</code> iterators over list of items represented by arrays or objects.<br>Optionally it accepts abort function (should be synchronously return by iterator for each item), and terminates left over jobs upon an error event. For specific iteration order built-in (<code>ascending</code> and <code>descending</code>) and custom sort helpers also supported, via <code>asynckit.serialOrdered</code> method.</p><p>It ensures async operations to keep behavior more stable and prevent <code>Maximum call stack size exceeded</code> errors, from sync iterators.</p><table><thead><tr><th align="left">compression</th><th align="right">size</th></tr></thead><tbody><tr><td align="left">asynckit.js</td><td align="right">12.34 kB</td></tr><tr><td align="left">asynckit.min.js</td><td align="right">4.11 kB</td></tr><tr><td align="left">asynckit.min.js.gz</td><td align="right">1.47 kB</td></tr></tbody></table><h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save asynckit</span><br></pre></td></tr></table></figure><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><h3 id="Parallel-Jobs"><a href="#Parallel-Jobs" class="headerlink" title="Parallel Jobs"></a>Parallel Jobs</h3><p>Runs iterator over provided array in parallel. Stores output in the <code>result</code> array,<br>on the matching positions. In unlikely event of an error from one of the jobs,<br>will terminate rest of the active jobs (if abort function is provided)<br>and return error along with salvaged data to the main callback function.</p><h4 id="Input-Array"><a href="#Input-Array" class="headerlink" title="Input Array"></a>Input Array</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> parallel = <span class="built_in">require</span>(<span class="string">&#x27;asynckit&#x27;</span>).<span class="property">parallel</span></span><br><span class="line">  , assert   = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>)</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source         = [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">16</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">8</span>, <span class="number">2</span> ]</span><br><span class="line">  , expectedResult = [ <span class="number">2</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">32</span>, <span class="number">128</span>, <span class="number">64</span>, <span class="number">16</span>, <span class="number">4</span> ]</span><br><span class="line">  , expectedTarget = [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span> ]</span><br><span class="line">  , target         = []</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"><span class="title function_">parallel</span>(source, asyncJob, <span class="keyword">function</span>(<span class="params">err, result</span>)</span><br><span class="line">&#123;</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(result, expectedResult);</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(target, expectedTarget);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// async job accepts one element from the array</span></span><br><span class="line"><span class="comment">// and a callback function</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">asyncJob</span>(<span class="params">item, cb</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// different delays (in ms) per item</span></span><br><span class="line">  <span class="keyword">var</span> delay = item * <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// pretend different jobs take different time to finish</span></span><br><span class="line">  <span class="comment">// and not in consequential order</span></span><br><span class="line">  <span class="keyword">var</span> timeoutId = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    target.<span class="title function_">push</span>(item);</span><br><span class="line">    <span class="title function_">cb</span>(<span class="literal">null</span>, item * <span class="number">2</span>);</span><br><span class="line">  &#125;, delay);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// allow to cancel &quot;leftover&quot; jobs upon error</span></span><br><span class="line">  <span class="comment">// return function, invoking of which will abort this job</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clearTimeout</span>.<span class="title function_">bind</span>(<span class="literal">null</span>, timeoutId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>More examples could be found in <a href="test/test-parallel-array.js">test&#x2F;test-parallel-array.js</a>.</p><h4 id="Input-Object"><a href="#Input-Object" class="headerlink" title="Input Object"></a>Input Object</h4><p>Also it supports named jobs, listed via object.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> parallel = <span class="built_in">require</span>(<span class="string">&#x27;asynckit/parallel&#x27;</span>)</span><br><span class="line">  , assert   = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>)</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source         = &#123; <span class="attr">first</span>: <span class="number">1</span>, <span class="attr">one</span>: <span class="number">1</span>, <span class="attr">four</span>: <span class="number">4</span>, <span class="attr">sixteen</span>: <span class="number">16</span>, <span class="attr">sixtyFour</span>: <span class="number">64</span>, <span class="attr">thirtyTwo</span>: <span class="number">32</span>, <span class="attr">eight</span>: <span class="number">8</span>, <span class="attr">two</span>: <span class="number">2</span> &#125;</span><br><span class="line">  , expectedResult = &#123; <span class="attr">first</span>: <span class="number">2</span>, <span class="attr">one</span>: <span class="number">2</span>, <span class="attr">four</span>: <span class="number">8</span>, <span class="attr">sixteen</span>: <span class="number">32</span>, <span class="attr">sixtyFour</span>: <span class="number">128</span>, <span class="attr">thirtyTwo</span>: <span class="number">64</span>, <span class="attr">eight</span>: <span class="number">16</span>, <span class="attr">two</span>: <span class="number">4</span> &#125;</span><br><span class="line">  , expectedTarget = [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">8</span>, <span class="number">16</span>, <span class="number">32</span>, <span class="number">64</span> ]</span><br><span class="line">  , expectedKeys   = [ <span class="string">&#x27;first&#x27;</span>, <span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;four&#x27;</span>, <span class="string">&#x27;eight&#x27;</span>, <span class="string">&#x27;sixteen&#x27;</span>, <span class="string">&#x27;thirtyTwo&#x27;</span>, <span class="string">&#x27;sixtyFour&#x27;</span> ]</span><br><span class="line">  , target         = []</span><br><span class="line">  , keys           = []</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"><span class="title function_">parallel</span>(source, asyncJob, <span class="keyword">function</span>(<span class="params">err, result</span>)</span><br><span class="line">&#123;</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(result, expectedResult);</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(target, expectedTarget);</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(keys, expectedKeys);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// supports full value, key, callback (shortcut) interface</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">asyncJob</span>(<span class="params">item, key, cb</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// different delays (in ms) per item</span></span><br><span class="line">  <span class="keyword">var</span> delay = item * <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// pretend different jobs take different time to finish</span></span><br><span class="line">  <span class="comment">// and not in consequential order</span></span><br><span class="line">  <span class="keyword">var</span> timeoutId = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    keys.<span class="title function_">push</span>(key);</span><br><span class="line">    target.<span class="title function_">push</span>(item);</span><br><span class="line">    <span class="title function_">cb</span>(<span class="literal">null</span>, item * <span class="number">2</span>);</span><br><span class="line">  &#125;, delay);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// allow to cancel &quot;leftover&quot; jobs upon error</span></span><br><span class="line">  <span class="comment">// return function, invoking of which will abort this job</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">clearTimeout</span>.<span class="title function_">bind</span>(<span class="literal">null</span>, timeoutId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>More examples could be found in <a href="test/test-parallel-object.js">test&#x2F;test-parallel-object.js</a>.</p><h3 id="Serial-Jobs"><a href="#Serial-Jobs" class="headerlink" title="Serial Jobs"></a>Serial Jobs</h3><p>Runs iterator over provided array sequentially. Stores output in the <code>result</code> array,<br>on the matching positions. In unlikely event of an error from one of the jobs,<br>will not proceed to the rest of the items in the list<br>and return error along with salvaged data to the main callback function.</p><h4 id="Input-Array-1"><a href="#Input-Array-1" class="headerlink" title="Input Array"></a>Input Array</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> serial = <span class="built_in">require</span>(<span class="string">&#x27;asynckit/serial&#x27;</span>)</span><br><span class="line">  , assert = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>)</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source         = [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">16</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">8</span>, <span class="number">2</span> ]</span><br><span class="line">  , expectedResult = [ <span class="number">2</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">32</span>, <span class="number">128</span>, <span class="number">64</span>, <span class="number">16</span>, <span class="number">4</span> ]</span><br><span class="line">  , expectedTarget = [ <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> ]</span><br><span class="line">  , target         = []</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"><span class="title function_">serial</span>(source, asyncJob, <span class="keyword">function</span>(<span class="params">err, result</span>)</span><br><span class="line">&#123;</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(result, expectedResult);</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(target, expectedTarget);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// extended interface (item, key, callback)</span></span><br><span class="line"><span class="comment">// also supported for arrays</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">asyncJob</span>(<span class="params">item, key, cb</span>)</span><br><span class="line">&#123;</span><br><span class="line">  target.<span class="title function_">push</span>(key);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// it will be automatically made async</span></span><br><span class="line">  <span class="comment">// even it iterator &quot;returns&quot; in the same event loop</span></span><br><span class="line">  <span class="title function_">cb</span>(<span class="literal">null</span>, item * <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>More examples could be found in <a href="test/test-serial-array.js">test&#x2F;test-serial-array.js</a>.</p><h4 id="Input-Object-1"><a href="#Input-Object-1" class="headerlink" title="Input Object"></a>Input Object</h4><p>Also it supports named jobs, listed via object.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> serial = <span class="built_in">require</span>(<span class="string">&#x27;asynckit&#x27;</span>).<span class="property">serial</span></span><br><span class="line">  , assert = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>)</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source         = [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">16</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">8</span>, <span class="number">2</span> ]</span><br><span class="line">  , expectedResult = [ <span class="number">2</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">32</span>, <span class="number">128</span>, <span class="number">64</span>, <span class="number">16</span>, <span class="number">4</span> ]</span><br><span class="line">  , expectedTarget = [ <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span> ]</span><br><span class="line">  , target         = []</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> source         = &#123; <span class="attr">first</span>: <span class="number">1</span>, <span class="attr">one</span>: <span class="number">1</span>, <span class="attr">four</span>: <span class="number">4</span>, <span class="attr">sixteen</span>: <span class="number">16</span>, <span class="attr">sixtyFour</span>: <span class="number">64</span>, <span class="attr">thirtyTwo</span>: <span class="number">32</span>, <span class="attr">eight</span>: <span class="number">8</span>, <span class="attr">two</span>: <span class="number">2</span> &#125;</span><br><span class="line">  , expectedResult = &#123; <span class="attr">first</span>: <span class="number">2</span>, <span class="attr">one</span>: <span class="number">2</span>, <span class="attr">four</span>: <span class="number">8</span>, <span class="attr">sixteen</span>: <span class="number">32</span>, <span class="attr">sixtyFour</span>: <span class="number">128</span>, <span class="attr">thirtyTwo</span>: <span class="number">64</span>, <span class="attr">eight</span>: <span class="number">16</span>, <span class="attr">two</span>: <span class="number">4</span> &#125;</span><br><span class="line">  , expectedTarget = [ <span class="number">1</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">16</span>, <span class="number">64</span>, <span class="number">32</span>, <span class="number">8</span>, <span class="number">2</span> ]</span><br><span class="line">  , target         = []</span><br><span class="line">  ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">serial</span>(source, asyncJob, <span class="keyword">function</span>(<span class="params">err, result</span>)</span><br><span class="line">&#123;</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(result, expectedResult);</span><br><span class="line">  assert.<span class="title function_">deepEqual</span>(target, expectedTarget);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// shortcut interface (item, callback)</span></span><br><span class="line"><span class="comment">// works for object as well as for the arrays</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">asyncJob</span>(<span class="params">item, cb</span>)</span><br><span class="line">&#123;</span><br><span class="line">  target.<span class="title function_">push</span>(item);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// it will be automatically made async</span></span><br><span class="line">  <span class="comment">// even it iterator &quot;returns&quot; in the same event loop</span></span><br><span class="line">  <span class="title function_">cb</span>(<span class="literal">null</span>, item * <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>More examples could be found in <a href="test/test-serial-object.js">test&#x2F;test-serial-object.js</a>.</p><p><em>Note: Since <em>object</em> is an <em>unordered</em> collection of properties,<br>it may produce unexpected results with sequential iterations.<br>Whenever order of the jobs’ execution is important please use <code>serialOrdered</code> method.</em></p><h3 id="Ordered-Serial-Iterations"><a href="#Ordered-Serial-Iterations" class="headerlink" title="Ordered Serial Iterations"></a>Ordered Serial Iterations</h3><p>TBD</p><p>For example <a href="compare-property">compare-property</a> package.</p><h3 id="Streaming-interface"><a href="#Streaming-interface" class="headerlink" title="Streaming interface"></a>Streaming interface</h3><p>TBD</p><h2 id="Want-to-Know-More"><a href="#Want-to-Know-More" class="headerlink" title="Want to Know More?"></a>Want to Know More?</h2><p>More examples can be found in <a href="test/">test folder</a>.</p><p>Or open an <a href="https://github.com/alexindigo/asynckit/issues">issue</a> with questions and&#x2F;or suggestions.</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>AsyncKit is licensed under the MIT license.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;asynckit&quot;&gt;&lt;a href=&quot;#asynckit&quot; class=&quot;headerlink&quot; title=&quot;asynckit &quot;&gt;&lt;/a&gt;asynckit &lt;a href=&quot;https://www.npmjs.com/package/asynckit&quot;&gt;&lt;im</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/05/%E7%8E%8B%E9%98%81/test/node_modules/axios/SECURITY/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/05/%E7%8E%8B%E9%98%81/test/node_modules/axios/SECURITY/</id>
    <published>2024-01-05T14:24:23.000Z</published>
    <updated>2024-01-05T14:24:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reporting-a-Vulnerability"><a href="#Reporting-a-Vulnerability" class="headerlink" title="Reporting a Vulnerability"></a>Reporting a Vulnerability</h1><p>If you discover a security vulnerability in axios please disclose it via <a href="https://huntr.dev/repos/axios/axios/">our huntr page</a>. Bounty eligibility, CVE assignment, response times and past reports are all there.</p><p>Thank you for improving the security of axios.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Reporting-a-Vulnerability&quot;&gt;&lt;a href=&quot;#Reporting-a-Vulnerability&quot; class=&quot;headerlink&quot; title=&quot;Reporting a Vulnerability&quot;&gt;&lt;/a&gt;Reporting a</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/05/%E7%8E%8B%E9%98%81/test/node_modules/axios/MIGRATION_GUIDE/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/05/%E7%8E%8B%E9%98%81/test/node_modules/axios/MIGRATION_GUIDE/</id>
    <published>2024-01-05T14:24:23.000Z</published>
    <updated>2024-01-05T14:24:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Migration-Guide"><a href="#Migration-Guide" class="headerlink" title="Migration Guide"></a>Migration Guide</h1><h2 id="0-x-x-1-1-0"><a href="#0-x-x-1-1-0" class="headerlink" title="0.x.x -&gt; 1.1.0"></a>0.x.x -&gt; 1.1.0</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Migration-Guide&quot;&gt;&lt;a href=&quot;#Migration-Guide&quot; class=&quot;headerlink&quot; title=&quot;Migration Guide&quot;&gt;&lt;/a&gt;Migration Guide&lt;/h1&gt;&lt;h2 id=&quot;0-x-x-1-1-0&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://www.wqkenqing.ren/daydoc/2024/01/05/%E7%8E%8B%E9%98%81/test/node_modules/combined-stream/Readme/"/>
    <id>http://www.wqkenqing.ren/daydoc/2024/01/05/%E7%8E%8B%E9%98%81/test/node_modules/combined-stream/Readme/</id>
    <published>2024-01-05T14:24:23.000Z</published>
    <updated>2024-01-05T14:24:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="combined-stream"><a href="#combined-stream" class="headerlink" title="combined-stream"></a>combined-stream</h1><p>A stream that emits multiple other streams one after another.</p><p><strong>NB</strong> Currently <code>combined-stream</code> works with streams version 1 only. There is ongoing effort to switch this library to streams version 2. Any help is welcome. :) Meanwhile you can explore other libraries that provide streams2 support with more or less compatibility with <code>combined-stream</code>.</p><ul><li><p><a href="https://www.npmjs.com/package/combined-stream2">combined-stream2</a>: A drop-in streams2-compatible replacement for the combined-stream module.</p></li><li><p><a href="https://www.npmjs.com/package/multistream">multistream</a>: A stream that emits multiple other streams one after another.</p></li></ul><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install combined-stream</span><br></pre></td></tr></table></figure><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p>Here is a simple example that shows how you can use combined-stream to combine<br>two files into one:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">CombinedStream</span> = <span class="built_in">require</span>(<span class="string">&#x27;combined-stream&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> combinedStream = <span class="title class_">CombinedStream</span>.<span class="title function_">create</span>();</span><br><span class="line">combinedStream.<span class="title function_">append</span>(fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;file1.txt&#x27;</span>));</span><br><span class="line">combinedStream.<span class="title function_">append</span>(fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;file2.txt&#x27;</span>));</span><br><span class="line"></span><br><span class="line">combinedStream.<span class="title function_">pipe</span>(fs.<span class="title function_">createWriteStream</span>(<span class="string">&#x27;combined.txt&#x27;</span>));</span><br></pre></td></tr></table></figure><p>While the example above works great, it will pause all source streams until<br>they are needed. If you don’t want that to happen, you can set <code>pauseStreams</code><br>to <code>false</code>:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">CombinedStream</span> = <span class="built_in">require</span>(<span class="string">&#x27;combined-stream&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> combinedStream = <span class="title class_">CombinedStream</span>.<span class="title function_">create</span>(&#123;<span class="attr">pauseStreams</span>: <span class="literal">false</span>&#125;);</span><br><span class="line">combinedStream.<span class="title function_">append</span>(fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;file1.txt&#x27;</span>));</span><br><span class="line">combinedStream.<span class="title function_">append</span>(fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;file2.txt&#x27;</span>));</span><br><span class="line"></span><br><span class="line">combinedStream.<span class="title function_">pipe</span>(fs.<span class="title function_">createWriteStream</span>(<span class="string">&#x27;combined.txt&#x27;</span>));</span><br></pre></td></tr></table></figure><p>However, what if you don’t have all the source streams yet, or you don’t want<br>to allocate the resources (file descriptors, memory, etc.) for them right away?<br>Well, in that case you can simply provide a callback that supplies the stream<br>by calling a <code>next()</code> function:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">CombinedStream</span> = <span class="built_in">require</span>(<span class="string">&#x27;combined-stream&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> combinedStream = <span class="title class_">CombinedStream</span>.<span class="title function_">create</span>();</span><br><span class="line">combinedStream.<span class="title function_">append</span>(<span class="keyword">function</span>(<span class="params">next</span>) &#123;</span><br><span class="line">  <span class="title function_">next</span>(fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;file1.txt&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line">combinedStream.<span class="title function_">append</span>(<span class="keyword">function</span>(<span class="params">next</span>) &#123;</span><br><span class="line">  <span class="title function_">next</span>(fs.<span class="title function_">createReadStream</span>(<span class="string">&#x27;file2.txt&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">combinedStream.<span class="title function_">pipe</span>(fs.<span class="title function_">createWriteStream</span>(<span class="string">&#x27;combined.txt&#x27;</span>));</span><br></pre></td></tr></table></figure><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="CombinedStream-create-options"><a href="#CombinedStream-create-options" class="headerlink" title="CombinedStream.create([options])"></a>CombinedStream.create([options])</h3><p>Returns a new combined stream object. Available options are:</p><ul><li><code>maxDataSize</code></li><li><code>pauseStreams</code></li></ul><p>The effect of those options is described below.</p><h3 id="combinedStream-pauseStreams-true"><a href="#combinedStream-pauseStreams-true" class="headerlink" title="combinedStream.pauseStreams &#x3D; true"></a>combinedStream.pauseStreams &#x3D; <code>true</code></h3><p>Whether to apply back pressure to the underlaying streams. If set to <code>false</code>,<br>the underlaying streams will never be paused. If set to <code>true</code>, the<br>underlaying streams will be paused right after being appended, as well as when<br><code>delayedStream.pipe()</code> wants to throttle.</p><h3 id="combinedStream-maxDataSize-2-1024-1024"><a href="#combinedStream-maxDataSize-2-1024-1024" class="headerlink" title="combinedStream.maxDataSize &#x3D; 2 * 1024 * 1024"></a>combinedStream.maxDataSize &#x3D; <code>2 * 1024 * 1024</code></h3><p>The maximum amount of bytes (or characters) to buffer for all source streams.<br>If this value is exceeded, <code>combinedStream</code> emits an <code>&#39;error&#39;</code> event.</p><h3 id="combinedStream-dataSize-0"><a href="#combinedStream-dataSize-0" class="headerlink" title="combinedStream.dataSize &#x3D; 0"></a>combinedStream.dataSize &#x3D; <code>0</code></h3><p>The amount of bytes (or characters) currently buffered by <code>combinedStream</code>.</p><h3 id="combinedStream-append-stream"><a href="#combinedStream-append-stream" class="headerlink" title="combinedStream.append(stream)"></a>combinedStream.append(stream)</h3><p>Appends the given <code>stream</code> to the combinedStream object. If <code>pauseStreams</code> is<br>set to &#96;true, this stream will also be paused right away.</p><p><code>streams</code> can also be a function that takes one parameter called <code>next</code>. <code>next</code><br>is a function that must be invoked in order to provide the <code>next</code> stream, see<br>example above.</p><p>Regardless of how the <code>stream</code> is appended, combined-stream always attaches an<br><code>&#39;error&#39;</code> listener to it, so you don’t have to do that manually.</p><p>Special case: <code>stream</code> can also be a String or Buffer.</p><h3 id="combinedStream-write-data"><a href="#combinedStream-write-data" class="headerlink" title="combinedStream.write(data)"></a>combinedStream.write(data)</h3><p>You should not call this, <code>combinedStream</code> takes care of piping the appended<br>streams into itself for you.</p><h3 id="combinedStream-resume"><a href="#combinedStream-resume" class="headerlink" title="combinedStream.resume()"></a>combinedStream.resume()</h3><p>Causes <code>combinedStream</code> to start drain the streams it manages. The function is<br>idempotent, and also emits a <code>&#39;resume&#39;</code> event each time which usually goes to<br>the stream that is currently being drained.</p><h3 id="combinedStream-pause"><a href="#combinedStream-pause" class="headerlink" title="combinedStream.pause();"></a>combinedStream.pause();</h3><p>If <code>combinedStream.pauseStreams</code> is set to <code>false</code>, this does nothing.<br>Otherwise a <code>&#39;pause&#39;</code> event is emitted, this goes to the stream that is<br>currently being drained, so you can use it to apply back pressure.</p><h3 id="combinedStream-end"><a href="#combinedStream-end" class="headerlink" title="combinedStream.end();"></a>combinedStream.end();</h3><p>Sets <code>combinedStream.writable</code> to false, emits an <code>&#39;end&#39;</code> event, and removes<br>all streams from the queue.</p><h3 id="combinedStream-destroy"><a href="#combinedStream-destroy" class="headerlink" title="combinedStream.destroy();"></a>combinedStream.destroy();</h3><p>Same as <code>combinedStream.end()</code>, except it emits a <code>&#39;close&#39;</code> event instead of<br><code>&#39;end&#39;</code>.</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>combined-stream is licensed under the MIT license.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;combined-stream&quot;&gt;&lt;a href=&quot;#combined-stream&quot; class=&quot;headerlink&quot; title=&quot;combined-stream&quot;&gt;&lt;/a&gt;combined-stream&lt;/h1&gt;&lt;p&gt;A stream that emit</summary>
      
    
    
    
    
  </entry>
  
</feed>

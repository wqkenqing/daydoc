<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>王阁/技术/大数据/flink/2023/Flink Connector</title>
      <link href="/daydoc/2023/03/02/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink%20Connector/"/>
      <url>/daydoc/2023/03/02/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink%20Connector/</url>
      
        <content type="html"><![CDATA[<p>这是主要是对常见的connector 进行一个梳理，日常使用时可以开箱即用</p> <a id="more"></a><h1 id="Flink-Connector"><a href="#Flink-Connector" class="headerlink" title="Flink Connector"></a>Flink Connector</h1><p> 主要分为</p><ol><li>预定义的 source 和 sink</li><li>Bundled Connectors</li><li>cdc Connector</li><li>自定义connector </li></ol><h2 id="整理的connector"><a href="#整理的connector" class="headerlink" title="整理的connector"></a>整理的connector</h2><blockquote><p>这里主要针对组件进行整理，具体的connector类型会作标记，有些是内置的，有些是自定义的，有些是三方的。</p></blockquote><h3 id="Kafka-Connector"><a href="#Kafka-Connector" class="headerlink" title="Kafka Connector"></a>Kafka Connector</h3><p><strong>Source</strong></p><p><strong>kafka-connector(Bundled)</strong></p><p><strong><code>USE</code></strong></p><p>*<em>Kafka Consumer *</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Properties properties = <span class="hljs-keyword">new</span> Properties();<br>properties.setProperty(<span class="hljs-string">"bootstrap.servers"</span>, <span class="hljs-string">"localhost:9092"</span>);<br>properties.setProperty(<span class="hljs-string">"group.id"</span>, <span class="hljs-string">"test"</span>);<br>DataStream&lt;String&gt; stream = env<br>    .addSource(<span class="hljs-keyword">new</span> FlinkKafkaConsumer&lt;&gt;(<span class="hljs-string">"topic"</span>, <span class="hljs-keyword">new</span> SimpleStringSchema(), properties));<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>FlinkKafkaConsumer&lt;String&gt; myConsumer = <span class="hljs-keyword">new</span> FlinkKafkaConsumer&lt;&gt;(...);<br>myConsumer.setStartFromEarliest();     <span class="hljs-comment">// 尽可能从最早的记录开始</span><br>myConsumer.setStartFromLatest();       <span class="hljs-comment">// 从最新的记录开始</span><br>myConsumer.setStartFromTimestamp(...); <span class="hljs-comment">// 从指定的时间开始（毫秒）</span><br>myConsumer.setStartFromGroupOffsets(); <span class="hljs-comment">// 默认的方法</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">Map&lt;KafkaTopicPartition, Long&gt; specificStartOffsets = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>specificStartOffsets.put(<span class="hljs-keyword">new</span> KafkaTopicPartition(<span class="hljs-string">"myTopic"</span>, <span class="hljs-number">0</span>), <span class="hljs-number">23L</span>);<br>specificStartOffsets.put(<span class="hljs-keyword">new</span> KafkaTopicPartition(<span class="hljs-string">"myTopic"</span>, <span class="hljs-number">1</span>), <span class="hljs-number">31L</span>);<br>specificStartOffsets.put(<span class="hljs-keyword">new</span> KafkaTopicPartition(<span class="hljs-string">"myTopic"</span>, <span class="hljs-number">2</span>), <span class="hljs-number">43L</span>);<br><br>myConsumer.setStartFromSpecificOffsets(specificStartOffsets);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">final</span> StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();<br><br>Properties properties = <span class="hljs-keyword">new</span> Properties();<br>properties.setProperty(<span class="hljs-string">"bootstrap.servers"</span>, <span class="hljs-string">"localhost:9092"</span>);<br>properties.setProperty(<span class="hljs-string">"group.id"</span>, <span class="hljs-string">"test"</span>);<br><br>FlinkKafkaConsumer&lt;String&gt; myConsumer = <span class="hljs-keyword">new</span> FlinkKafkaConsumer&lt;&gt;(<br>    java.util.regex.Pattern.compile(<span class="hljs-string">"test-topic-[0-9]"</span>),<br>    <span class="hljs-keyword">new</span> SimpleStringSchema(),<br>    properties);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">Properties properties = <span class="hljs-keyword">new</span> Properties();<br>properties.setProperty(<span class="hljs-string">"bootstrap.servers"</span>, <span class="hljs-string">"localhost:9092"</span>);<br>properties.setProperty(<span class="hljs-string">"group.id"</span>, <span class="hljs-string">"test"</span>);<br><br>FlinkKafkaConsumer&lt;String&gt; myConsumer =<br>    <span class="hljs-keyword">new</span> FlinkKafkaConsumer&lt;&gt;(<span class="hljs-string">"topic"</span>, <span class="hljs-keyword">new</span> SimpleStringSchema(), properties);<br>myConsumer.assignTimestampsAndWatermarks(<br>    WatermarkStrategy<br>        .forBoundedOutOfOrderness(Duration.ofSeconds(<span class="hljs-number">20</span>)));<br><br>DataStream&lt;String&gt; stream = env.addSource(myConsumer);<br></code></pre></td></tr></table></figure><p><strong>Kafka Sink</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Properties properties = <span class="hljs-keyword">new</span> Properties(); properties.setProperty(“bootstrap.servers”, “localhost:<span class="hljs-number">9092</span>”);<br><br>FlinkKafkaProducer myProducer = <span class="hljs-keyword">new</span> FlinkKafkaProducer( “my-topic”, <span class="hljs-comment">// 目标 topic new SimpleStringSchema(), // 序列化 schema properties, // producer 配置 FlinkKafkaProducer.Semantic.EXACTLY_ONCE); // 容错</span><br><br>stream.addSink(myProducer);<br></code></pre></td></tr></table></figure><p><img src="http://img.wqkenqing.ren/typora_img/CleanShot%202023-03-02%20at%2014.40.29@2x.png" srcset="/daydoc/img/loading.gif" lazyload alt="CleanShot 2023-03-02 at 14.40.29@2x"></p><h3 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><p><strong>ElasticsearchSource(Custom Source)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> sunrise.demo.source;<br><br><span class="hljs-keyword">import</span> org.apache.flink.configuration.Configuration;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.functions.source.RichSourceFunction;<br><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.search.SearchRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.search.SearchResponse;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RequestOptions;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.RestHighLevelClient;<br><span class="hljs-keyword">import</span> org.elasticsearch.index.query.QueryBuilders;<br><span class="hljs-keyword">import</span> org.elasticsearch.search.SearchHit;<br><span class="hljs-keyword">import</span> org.elasticsearch.search.builder.SearchSourceBuilder;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> kuiqwang</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@emai</span> wqkenqingto@163.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@time</span> 2023/2/22</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@desc</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ElasticsearchSource</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">RichSourceFunction</span>&lt;<span class="hljs-title">String</span>&gt; </span>&#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String index;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> String query;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> interval;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">boolean</span> running;<br>    <span class="hljs-keyword">private</span> RestHighLevelClient client;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">ElasticsearchSource</span><span class="hljs-params">(String index, String query, <span class="hljs-keyword">int</span> interval)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.index = index;<br>        <span class="hljs-keyword">this</span>.query = query;<br>        <span class="hljs-keyword">this</span>.interval = interval;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">open</span><span class="hljs-params">(Configuration parameters)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-keyword">super</span>.open(parameters);<br>        client = <span class="hljs-keyword">new</span> RestHighLevelClient(RestClient.builder(<span class="hljs-keyword">new</span> HttpHost(<span class="hljs-string">"calculation02"</span>, <span class="hljs-number">9200</span>, <span class="hljs-string">"http"</span>)));<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">(SourceContext&lt;String&gt; ctx)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        running = <span class="hljs-keyword">true</span>;<br>        <span class="hljs-keyword">while</span> (running) &#123;<br>            SearchRequest searchRequest = <span class="hljs-keyword">new</span> SearchRequest(index);<br>            SearchSourceBuilder searchSourceBuilder = <span class="hljs-keyword">new</span> SearchSourceBuilder();<br><span class="hljs-comment">//            searchSourceBuilder.query(QueryBuilders.matchQuery("message", query));</span><br>            searchSourceBuilder.query(QueryBuilders.matchAllQuery());<br>            searchRequest.source(searchSourceBuilder);<br><br>            SearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);<br><br>            <span class="hljs-keyword">for</span> (SearchHit hit : searchResponse.getHits().getHits()) &#123;<br>                ctx.collect(hit.getSourceAsString());<br>            &#125;<br><br>            Thread.sleep(interval);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">cancel</span><span class="hljs-params">()</span> </span>&#123;<br>        running = <span class="hljs-keyword">false</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            client.close();<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            <span class="hljs-comment">// Ignore exception</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Elasticsearch Sink (Bundled)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.flink.api.common.functions.RuntimeContext;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.datastream.DataStream;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.connectors.elasticsearch.ElasticsearchSinkFunction;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.connectors.elasticsearch.RequestIndexer;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.connectors.elasticsearch6.ElasticsearchSink;<br><br><span class="hljs-keyword">import</span> org.apache.http.HttpHost;<br><span class="hljs-keyword">import</span> org.elasticsearch.action.index.IndexRequest;<br><span class="hljs-keyword">import</span> org.elasticsearch.client.Requests;<br><br><span class="hljs-keyword">import</span> java.util.ArrayList;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br>DataStream&lt;String&gt; input = ...;<br><br>List&lt;HttpHost&gt; httpHosts = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>httpHosts.add(<span class="hljs-keyword">new</span> HttpHost(<span class="hljs-string">"127.0.0.1"</span>, <span class="hljs-number">9200</span>, <span class="hljs-string">"http"</span>));<br>httpHosts.add(<span class="hljs-keyword">new</span> HttpHost(<span class="hljs-string">"10.2.3.1"</span>, <span class="hljs-number">9200</span>, <span class="hljs-string">"http"</span>));<br><br><span class="hljs-comment">// 使用 ElasticsearchSink.Builder 创建 ElasticsearchSink</span><br>ElasticsearchSink.Builder&lt;String&gt; esSinkBuilder = <span class="hljs-keyword">new</span> ElasticsearchSink.Builder&lt;&gt;(<br>    httpHosts,<br>    <span class="hljs-keyword">new</span> ElasticsearchSinkFunction&lt;String&gt;() &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> IndexRequest <span class="hljs-title">createIndexRequest</span><span class="hljs-params">(String element)</span> </span>&#123;<br>            Map&lt;String, String&gt; json = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>            json.put(<span class="hljs-string">"data"</span>, element);<br>        <br>            <span class="hljs-keyword">return</span> Requests.indexRequest()<br>                    .index(<span class="hljs-string">"my-index"</span>)<br>                    .type(<span class="hljs-string">"my-type"</span>)<br>                    .source(json);<br>        &#125;<br>        <br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">process</span><span class="hljs-params">(String element, RuntimeContext ctx, RequestIndexer indexer)</span> </span>&#123;<br>            indexer.add(createIndexRequest(element));<br>        &#125;<br>    &#125;<br>);<br><br><span class="hljs-comment">// 批量请求的配置；下面的设置使 sink 在接收每个元素之后立即提交，否则这些元素将被缓存起来</span><br>esSinkBuilder.setBulkFlushMaxActions(<span class="hljs-number">1</span>);<br><br><span class="hljs-comment">// 为内部创建的 REST 客户端提供一个自定义配置信息的 RestClientFactory</span><br>esSinkBuilder.setRestClientFactory(<br>  restClientBuilder -&gt; &#123;<br>    restClientBuilder.setDefaultHeaders(...);<br>    restClientBuilder.setMaxRetryTimeoutMillis(...);<br>    restClientBuilder.setPathPrefix(...);<br>    restClientBuilder.setHttpClientConfigCallback(...);<br>  &#125;<br>);<br><br><span class="hljs-comment">// 最后，构建并添加 sink 到作业管道中</span><br>input.addSink(esSinkBuilder.build());<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//要使用具有容错特性的 Elasticsearch Sinks，需要在执行环境中启用作业拓扑的 checkpoint：</span><br><span class="hljs-keyword">final</span> StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();<br>env.enableCheckpointing(<span class="hljs-number">5000</span>); <span class="hljs-comment">// 每 5000 毫秒执行一次 checkpoint</span><br></code></pre></td></tr></table></figure><p><strong>处理失败的 Elasticsearch 请求</strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java">DataStream&lt;String&gt; input = ...;<br><br>input.addSink(<span class="hljs-keyword">new</span> ElasticsearchSink&lt;&gt;(<br>    config, transportAddresses,<br>    <span class="hljs-keyword">new</span> ElasticsearchSinkFunction&lt;String&gt;() &#123;...&#125;,<br>    <span class="hljs-keyword">new</span> ActionRequestFailureHandler() &#123;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">onFailure</span><span class="hljs-params">(ActionRequest action,</span></span><br><span class="hljs-function"><span class="hljs-params">                Throwable failure,</span></span><br><span class="hljs-function"><span class="hljs-params">                <span class="hljs-keyword">int</span> restStatusCode,</span></span><br><span class="hljs-function"><span class="hljs-params">                RequestIndexer indexer)</span> throw Throwable </span>&#123;<br><br>            <span class="hljs-keyword">if</span> (ExceptionUtils.findThrowable(failure, EsRejectedExecutionException<span class="hljs-class">.<span class="hljs-keyword">class</span>).<span class="hljs-title">isPresent</span>()) </span>&#123;<br>                <span class="hljs-comment">// 队列已满；重新添加文档进行索引</span><br>                indexer.add(action);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ExceptionUtils.findThrowable(failure, ElasticsearchParseException<span class="hljs-class">.<span class="hljs-keyword">class</span>).<span class="hljs-title">isPresent</span>()) </span>&#123;<br>                <span class="hljs-comment">// 文档格式错误；简单地删除请求避免 sink 失败</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">// 对于所有其他失败的请求，失败的 sink</span><br>                <span class="hljs-comment">// 这里的失败只是简单的重新抛出，但用户也可以选择抛出自定义异常</span><br>                <span class="hljs-keyword">throw</span> failure;<br>            &#125;<br>        &#125;<br>&#125;));<br></code></pre></td></tr></table></figure><p><img src="http://img.wqkenqing.ren/typora_img/CleanShot%202023-03-02%20at%2014.44.23@2x.png" srcset="/daydoc/img/loading.gif" lazyload alt="CleanShot 2023-03-02 at 14.44.23@2x"></p><h3 id="hive"><a href="#hive" class="headerlink" title="hive"></a>hive</h3><p><strong>hiveSource (custom source)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> sunrise.demo.source;<span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> kuiqwang</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@emai</span> wqkenqingto@163.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@time</span> 2022/11/15</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@desc</span> </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">import</span> org.apache.flink.api.java.tuple.Tuple2;<br><span class="hljs-keyword">import</span> org.apache.flink.configuration.Configuration;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.api.functions.source.RichSourceFunction;<br><br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.DriverManager;<br><span class="hljs-keyword">import</span> java.sql.PreparedStatement;<br><span class="hljs-keyword">import</span> java.sql.ResultSet;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HiveSource</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">RichSourceFunction</span>&lt;<span class="hljs-title">Tuple2</span>&lt;<span class="hljs-title">String</span>, <span class="hljs-title">String</span>&gt;&gt; </span>&#123;<br><br><br>    <span class="hljs-keyword">private</span> Connection connection = <span class="hljs-keyword">null</span>;<br>    <span class="hljs-keyword">private</span> PreparedStatement ps = <span class="hljs-keyword">null</span>;<br>     String con;<br>     String user;<br>     String pass;<br>     String sql;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">HiveSource</span><span class="hljs-params">(String con, String user, String pass, String sql )</span></span>&#123;<br>        <span class="hljs-keyword">this</span>.user=user;<br>        <span class="hljs-keyword">this</span>.pass=pass;<br>        <span class="hljs-keyword">this</span>.con=con;<br>        <span class="hljs-keyword">this</span>.sql=sql;<br>    &#125;<br>    <span class="hljs-comment">//该方法主要用于打开数据库连接，下面的ConfigKeys类是获取配置的类</span><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">open</span><span class="hljs-params">(Configuration parameters)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        <span class="hljs-keyword">super</span>.open(parameters);<br>        Class.forName(<span class="hljs-string">"org.apache.hive.jdbc.HiveDriver"</span>);<span class="hljs-comment">//加载数据库驱动</span><br><span class="hljs-comment">//        connection = DriverManager.getConnection("jdbc:mysql://106.54.170.224:10328", "root", "Bmsoft2020datateam");//获取连接</span><br><br>        connection = DriverManager.getConnection(con, user, pass);<span class="hljs-comment">//获取连接</span><br>        ps = connection.prepareStatement(sql);<br>    &#125;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">run</span><span class="hljs-params">(SourceContext&lt;Tuple2&lt;String, String&gt;&gt; sourceContext)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;<br>        ResultSet resultSet = ps.executeQuery();<br>        <span class="hljs-keyword">while</span> (resultSet.next()) &#123;<br>            Tuple2&lt;String, String&gt; tuple = <span class="hljs-keyword">new</span> Tuple2&lt;String, String&gt;();<br>            tuple.setFields(resultSet.getString(<span class="hljs-number">1</span>), resultSet.getString(<span class="hljs-number">2</span>));<br>            sourceContext.collect(tuple);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">cancel</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">super</span>.close();<br>            <span class="hljs-keyword">if</span> (connection != <span class="hljs-keyword">null</span>) &#123;<br>                connection.close();<br>            &#125;<br>            <span class="hljs-keyword">if</span> (ps != <span class="hljs-keyword">null</span>) &#123;<br>                ps.close();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>hive sink (custom sink)</strong></p><p>//暂略</p><h3 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h3><p>github上的一个开源的connector;</p><p><a href="https://github.com/apache/flink-connector-hbase" target="_blank" rel="noopener"><strong>flink-connector-hbase</strong></a></p><p><strong>hbase source</strong></p><p>略</p><p><strong>hbase sink</strong></p><p><strong>Redis</strong></p><p><strong>flink-connector-redis</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> sunrise.demo.stream.mapper;<br><br><span class="hljs-keyword">import</span> org.apache.flink.streaming.connectors.redis.common.mapper.RedisCommand;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.connectors.redis.common.mapper.RedisCommandDescription;<br><span class="hljs-keyword">import</span> org.apache.flink.streaming.connectors.redis.common.mapper.RedisMapper;<br><span class="hljs-keyword">import</span> sunrise.demo.pojo.VideoEvent;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> kuiqwang</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@emai</span> wqkenqingto@163.com</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@time</span> 2023/2/21</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@desc</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RedisSinkMapper</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">RedisMapper</span>&lt;<span class="hljs-title">VideoEvent</span>&gt; </span>&#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> RedisCommandDescription <span class="hljs-title">getCommandDescription</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> RedisCommandDescription(RedisCommand.HSET,<span class="hljs-string">"video-sink"</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getKeyFromData</span><span class="hljs-params">(VideoEvent videoEvent)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> videoEvent.getCamera();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getValueFromData</span><span class="hljs-params">(VideoEvent videoEvent)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> String.valueOf(videoEvent.getSpeed());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;dependency&gt;<br>    &lt;groupId&gt;org.apache.flink&lt;/groupId&gt;<br>    &lt;artifactId&gt;flink-connector-rabbitmq&lt;/artifactId&gt;<br>    &lt;version&gt;1.18-SNAPSHOT&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><p>Source</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">final</span> StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();<br><span class="hljs-comment">// checkpointing is required for exactly-once or at-least-once guarantees</span><br>env.enableCheckpointing(...);<br><br><span class="hljs-keyword">final</span> RMQConnectionConfig connectionConfig = <span class="hljs-keyword">new</span> RMQConnectionConfig.Builder()<br>    .setHost(<span class="hljs-string">"localhost"</span>)<br>    .setPort(<span class="hljs-number">5000</span>)<br>    ...<br>    .build();<br>    <br><span class="hljs-keyword">final</span> DataStream&lt;<span class="hljs-keyword">String</span>&gt; stream = env<br>    .addSource(<span class="hljs-keyword">new</span> RMQSource&lt;<span class="hljs-keyword">String</span>&gt;(<br>        connectionConfig,            <span class="hljs-comment">// config for the RabbitMQ connection</span><br>        <span class="hljs-string">"queueName"</span>,                 <span class="hljs-comment">// name of the RabbitMQ queue to consume</span><br>        <span class="hljs-literal">true</span>,                        <span class="hljs-comment">// use correlation ids; can be false if only at-least-once is required</span><br>        <span class="hljs-keyword">new</span> SimpleStringSchema()))   <span class="hljs-comment">// deserialization schema to turn messages into Java objects</span><br>    .setParallelism(<span class="hljs-number">1</span>);              <span class="hljs-comment">// non-parallel source is only required for exactly-once</span><br></code></pre></td></tr></table></figure><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">final RMQConnectionConfig connectionConfig = new RMQConnectionConfig.Builder<span class="hljs-params">()</span><br>    <span class="hljs-string">.setPrefetchCount</span><span class="hljs-params">(30_000)</span><br>    <span class="hljs-string">...</span><br>    <span class="hljs-string">.build</span><span class="hljs-params">()</span>;<br></code></pre></td></tr></table></figure><p>RabbitMQ Sink</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">final RMQConnectionConfig connectionConfig = new RMQConnectionConfig.Builder<span class="hljs-params">()</span><br>    <span class="hljs-string">.setPrefetchCount</span><span class="hljs-params">(30_000)</span><br>    <span class="hljs-string">...</span><br>    <span class="hljs-string">.build</span><span class="hljs-params">()</span>;<br></code></pre></td></tr></table></figure><h3 id="JDBC"><a href="#JDBC" class="headerlink" title="JDBC"></a>JDBC</h3><blockquote><p>主要还是用的是Custom Source自己封装，不过官网也有相关connector。具体实现按需来。</p></blockquote><h2 id="Table-Connector"><a href="#Table-Connector" class="headerlink" title="Table Connector"></a>Table Connector</h2><blockquote><p>虽然connector的来源包可能是一样的，但使用代码可能不一样，所以区别记录一下。</p></blockquote><h3 id="Formats"><a href="#Formats" class="headerlink" title="Formats"></a>Formats</h3><p>这里的format 指连接器的数据格式，可能有</p><ol><li>csv</li><li>json</li><li>avro</li><li>cal cdc </li><li>apache parquet</li><li>apache orc</li><li>Raw</li></ol><p>在connector中有一个format参数，具体按数据内容格式指定就好</p><p>如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> att_business (<br>  <span class="hljs-keyword">id</span> <span class="hljs-keyword">String</span>,<br>  project_id <span class="hljs-keyword">String</span>,<br>  project_code <span class="hljs-keyword">String</span>) <span class="hljs-keyword">WITH</span> (<br> <span class="hljs-string">'connector'</span> = <span class="hljs-string">'filesystem'</span>,<br> <span class="hljs-string">'path'</span> = <span class="hljs-string">'/Users/kuiqwang/Desktop/att_business.csv'</span>,<br> <span class="hljs-string">'format'</span> = <span class="hljs-string">'csv'</span>)<br></code></pre></td></tr></table></figure><h3 id="Kafka-Connector-1"><a href="#Kafka-Connector-1" class="headerlink" title="Kafka Connector"></a>Kafka Connector</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> KafkaTable (<br>  <span class="hljs-string">`deviceStatus`</span> <span class="hljs-keyword">String</span>,<br>  <span class="hljs-string">`describe`</span> <span class="hljs-keyword">String</span>,<br>  <span class="hljs-string">`postionNo`</span> <span class="hljs-keyword">STRING</span>,<br>  <span class="hljs-string">`creatTime`</span> <span class="hljs-built_in">TIMESTAMP</span>(<span class="hljs-number">3</span>) METADATA <span class="hljs-keyword">FROM</span> <span class="hljs-string">'timestamp'</span><br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'kafka'</span>,<br>  <span class="hljs-string">'topic'</span> = <span class="hljs-string">'jllsd-flume-collect-from-yaobo-1'</span>,<br>  <span class="hljs-string">'properties.bootstrap.servers'</span> = <span class="hljs-string">'kafka01:9092'</span>,<br>  <span class="hljs-string">'properties.group.id'</span> = <span class="hljs-string">'testGroup'</span>,<br>  <span class="hljs-string">'scan.startup.mode'</span> = <span class="hljs-string">'earliest-offset'</span>,<br>  <span class="hljs-string">'json.ignore-parse-errors'</span> = <span class="hljs-string">'true'</span>,<br>  <span class="hljs-string">'format'</span> = <span class="hljs-string">'json'</span><br>)<br></code></pre></td></tr></table></figure><p><strong>消息键和消息体格式</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> KafkaTable (<br>  <span class="hljs-string">`ts`</span> <span class="hljs-built_in">TIMESTAMP</span>(<span class="hljs-number">3</span>) METADATA <span class="hljs-keyword">FROM</span> <span class="hljs-string">'timestamp'</span>,<br>  <span class="hljs-string">`user_id`</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-string">`item_id`</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-string">`behavior`</span> <span class="hljs-keyword">STRING</span><br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'kafka'</span>,<br>  ...<br><br>  <span class="hljs-string">'key.format'</span> = <span class="hljs-string">'json'</span>,<br>  <span class="hljs-string">'key.json.ignore-parse-errors'</span> = <span class="hljs-string">'true'</span>,<br>  <span class="hljs-string">'key.fields'</span> = <span class="hljs-string">'user_id;item_id'</span>,<br><br>  <span class="hljs-string">'value.format'</span> = <span class="hljs-string">'json'</span>,<br>  <span class="hljs-string">'value.json.fail-on-missing-field'</span> = <span class="hljs-string">'false'</span>,<br>  <span class="hljs-string">'value.fields-include'</span> = <span class="hljs-string">'ALL'</span><br>)<br></code></pre></td></tr></table></figure><p><strong>重名的格式字段</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> KafkaTable (<br>  <span class="hljs-string">`k_version`</span> <span class="hljs-built_in">INT</span>,<br>  <span class="hljs-string">`k_user_id`</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-string">`k_item_id`</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-string">`version`</span> <span class="hljs-built_in">INT</span>,<br>  <span class="hljs-string">`behavior`</span> <span class="hljs-keyword">STRING</span><br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'kafka'</span>,<br>  ...<br><br>  <span class="hljs-string">'key.format'</span> = <span class="hljs-string">'json'</span>,<br>  <span class="hljs-string">'key.fields-prefix'</span> = <span class="hljs-string">'k_'</span>,<br>  <span class="hljs-string">'key.fields'</span> = <span class="hljs-string">'k_version;k_user_id;k_item_id'</span>,<br><br>  <span class="hljs-string">'value.format'</span> = <span class="hljs-string">'json'</span>,<br>  <span class="hljs-string">'value.fields-include'</span> = <span class="hljs-string">'EXCEPT_KEY'</span><br>)<br></code></pre></td></tr></table></figure><p>要启用加密和认证相关的安全配置，只需将安全配置加上 “properties.” 前缀配置在 Kafka 表上即可。下面的代码片段展示了如何配置 Kafka 表以使用 PLAIN 作为 SASL 机制并提供 JAAS 配置：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> KafkaTable (<br>  <span class="hljs-string">`user_id`</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-string">`item_id`</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-string">`behavior`</span> <span class="hljs-keyword">STRING</span>,<br>  <span class="hljs-string">`ts`</span> <span class="hljs-built_in">TIMESTAMP</span>(<span class="hljs-number">3</span>) METADATA <span class="hljs-keyword">FROM</span> <span class="hljs-string">'timestamp'</span><br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'kafka'</span>,<br>  ...<br>  <span class="hljs-string">'properties.security.protocol'</span> = <span class="hljs-string">'SASL_PLAINTEXT'</span>,<br>  <span class="hljs-string">'properties.sasl.mechanism'</span> = <span class="hljs-string">'PLAIN'</span>,<br>  <span class="hljs-string">'properties.sasl.jaas.config'</span> = <span class="hljs-string">'org.apache.kafka.common.security.plain.PlainLoginModule required username=\"username\" password=\"password\";'</span><br>)<br></code></pre></td></tr></table></figure><p>另一个更复杂的例子，使用 SASL_SSL 作为安全协议并使用 SCRAM-SHA-256 作为 SASL 机制：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> KafkaTable (<br>  <span class="hljs-string">`user_id`</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-string">`item_id`</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-string">`behavior`</span> <span class="hljs-keyword">STRING</span>,<br>  <span class="hljs-string">`ts`</span> <span class="hljs-built_in">TIMESTAMP</span>(<span class="hljs-number">3</span>) METADATA <span class="hljs-keyword">FROM</span> <span class="hljs-string">'timestamp'</span><br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'kafka'</span>,<br>  ...<br>  <span class="hljs-string">'properties.security.protocol'</span> = <span class="hljs-string">'SASL_SSL'</span>,<br>  <span class="hljs-comment">/* SSL 配置 */</span><br>  <span class="hljs-comment">/* 配置服务端提供的 truststore (CA 证书) 的路径 */</span><br>  <span class="hljs-string">'properties.ssl.truststore.location'</span> = <span class="hljs-string">'/path/to/kafka.client.truststore.jks'</span>,<br>  <span class="hljs-string">'properties.ssl.truststore.password'</span> = <span class="hljs-string">'test1234'</span>,<br>  <span class="hljs-comment">/* 如果要求客户端认证，则需要配置 keystore (私钥) 的路径 */</span><br>  <span class="hljs-string">'properties.ssl.keystore.location'</span> = <span class="hljs-string">'/path/to/kafka.client.keystore.jks'</span>,<br>  <span class="hljs-string">'properties.ssl.keystore.password'</span> = <span class="hljs-string">'test1234'</span>,<br>  <span class="hljs-comment">/* SASL 配置 */</span><br>  <span class="hljs-comment">/* 将 SASL 机制配置为 as SCRAM-SHA-256 */</span><br>  <span class="hljs-string">'properties.sasl.mechanism'</span> = <span class="hljs-string">'SCRAM-SHA-256'</span>,<br>  <span class="hljs-comment">/* 配置 JAAS */</span><br>  <span class="hljs-string">'properties.sasl.jaas.config'</span> = <span class="hljs-string">'org.apache.kafka.common.security.scram.ScramLoginModule required username=\"username\" password=\"password\";'</span><br>)<br></code></pre></td></tr></table></figure><p><strong>Upsert Kafka SQL</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> pageviews_per_region (<br>  user_region <span class="hljs-keyword">STRING</span>,<br>  pv <span class="hljs-built_in">BIGINT</span>,<br>  uv <span class="hljs-built_in">BIGINT</span>,<br>  PRIMARY <span class="hljs-keyword">KEY</span> (user_region) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">ENFORCED</span><br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'upsert-kafka'</span>,<br>  <span class="hljs-string">'topic'</span> = <span class="hljs-string">'pageviews_per_region'</span>,<br>  <span class="hljs-string">'properties.bootstrap.servers'</span> = <span class="hljs-string">'...'</span>,<br>  <span class="hljs-string">'key.format'</span> = <span class="hljs-string">'avro'</span>,<br>  <span class="hljs-string">'value.format'</span> = <span class="hljs-string">'avro'</span><br>);<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> pageviews (<br>  user_id <span class="hljs-built_in">BIGINT</span>,<br>  page_id <span class="hljs-built_in">BIGINT</span>,<br>  viewtime <span class="hljs-built_in">TIMESTAMP</span>,<br>  user_region <span class="hljs-keyword">STRING</span>,<br>  WATERMARK <span class="hljs-keyword">FOR</span> viewtime <span class="hljs-keyword">AS</span> viewtime - <span class="hljs-built_in">INTERVAL</span> <span class="hljs-string">'2'</span> <span class="hljs-keyword">SECOND</span><br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'kafka'</span>,<br>  <span class="hljs-string">'topic'</span> = <span class="hljs-string">'pageviews'</span>,<br>  <span class="hljs-string">'properties.bootstrap.servers'</span> = <span class="hljs-string">'...'</span>,<br>  <span class="hljs-string">'format'</span> = <span class="hljs-string">'json'</span><br>);<br><br><span class="hljs-comment">-- 计算 pv、uv 并插入到 upsert-kafka sink</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> pageviews_per_region<br><span class="hljs-keyword">SELECT</span><br>  user_region,<br>  <span class="hljs-keyword">COUNT</span>(*),<br>  <span class="hljs-keyword">COUNT</span>(<span class="hljs-keyword">DISTINCT</span> user_id)<br><span class="hljs-keyword">FROM</span> pageviews<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> user_region;<br></code></pre></td></tr></table></figure><h3 id="JDBC-1"><a href="#JDBC-1" class="headerlink" title="JDBC"></a>JDBC</h3><blockquote><p>常见的关系型数据库的应用</p></blockquote><p><img src="http://img.wqkenqing.ren/typora_img/CleanShot%202023-03-02%20at%2016.50.21@2x.png" srcset="/daydoc/img/loading.gif" lazyload alt="CleanShot 2023-03-02 at 16.50.21@2x"></p><p><strong>mysql</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 在 Flink SQL 中注册一张 MySQL 表 'users'</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> MyUserTable (<br>  <span class="hljs-keyword">id</span> <span class="hljs-built_in">BIGINT</span>,<br>  <span class="hljs-keyword">name</span> <span class="hljs-keyword">STRING</span>,<br>  age <span class="hljs-built_in">INT</span>,<br>  <span class="hljs-keyword">status</span> <span class="hljs-built_in">BOOLEAN</span>,<br>  PRIMARY <span class="hljs-keyword">KEY</span> (<span class="hljs-keyword">id</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">ENFORCED</span><br>) <span class="hljs-keyword">WITH</span> (<br>   <span class="hljs-string">'connector'</span> = <span class="hljs-string">'jdbc'</span>,<br>   <span class="hljs-string">'url'</span> = <span class="hljs-string">'jdbc:mysql://localhost:3306/mydatabase'</span>,<br>   <span class="hljs-string">'table-name'</span> = <span class="hljs-string">'users'</span><br>);<br><br><span class="hljs-comment">-- 从另一张表 "T" 将数据写入到 JDBC 表中</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> MyUserTable<br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, age, <span class="hljs-keyword">status</span> <span class="hljs-keyword">FROM</span> T;<br><br><span class="hljs-comment">-- 查看 JDBC 表中的数据</span><br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">id</span>, <span class="hljs-keyword">name</span>, age, <span class="hljs-keyword">status</span> <span class="hljs-keyword">FROM</span> MyUserTable;<br><br><span class="hljs-comment">-- JDBC 表在时态表关联中作为维表</span><br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> myTopic<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> MyUserTable <span class="hljs-keyword">FOR</span> SYSTEM_TIME <span class="hljs-keyword">AS</span> <span class="hljs-keyword">OF</span> myTopic.proctime<br><span class="hljs-keyword">ON</span> myTopic.key = MyUserTable.id;<br></code></pre></td></tr></table></figure><h3 id="Elasticsearch-1"><a href="#Elasticsearch-1" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><blockquote><p>官网的connector 只能作为sink的存在。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> myUserTable (<br>  user_id <span class="hljs-keyword">STRING</span>,<br>  user_name <span class="hljs-keyword">STRING</span><br>  uv <span class="hljs-built_in">BIGINT</span>,<br>  pv <span class="hljs-built_in">BIGINT</span>,<br>  PRIMARY <span class="hljs-keyword">KEY</span> (user_id) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">ENFORCED</span><br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'elasticsearch-7'</span>,<br>  <span class="hljs-string">'hosts'</span> = <span class="hljs-string">'http://calculation02:9200'</span>,<br>  <span class="hljs-string">'index'</span> = <span class="hljs-string">'sxsddsj-file-system'</span><br>);<br></code></pre></td></tr></table></figure><h3 id="Hbase"><a href="#Hbase" class="headerlink" title="Hbase"></a>Hbase</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 在 Flink SQL 中注册 HBase 表 "mytable"</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hTable (<br> rowkey <span class="hljs-built_in">INT</span>,<br> family1 <span class="hljs-keyword">ROW</span>&lt;q1 <span class="hljs-built_in">INT</span>&gt;,<br> family2 <span class="hljs-keyword">ROW</span>&lt;q2 <span class="hljs-keyword">STRING</span>, q3 <span class="hljs-built_in">BIGINT</span>&gt;,<br> family3 <span class="hljs-keyword">ROW</span>&lt;q4 <span class="hljs-keyword">DOUBLE</span>, q5 <span class="hljs-built_in">BOOLEAN</span>, q6 <span class="hljs-keyword">STRING</span>&gt;,<br> PRIMARY <span class="hljs-keyword">KEY</span> (rowkey) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">ENFORCED</span><br>) <span class="hljs-keyword">WITH</span> (<br> <span class="hljs-string">'connector'</span> = <span class="hljs-string">'hbase-1.4'</span>,<br> <span class="hljs-string">'table-name'</span> = <span class="hljs-string">'mytable'</span>,<br> <span class="hljs-string">'zookeeper.quorum'</span> = <span class="hljs-string">'localhost:2181'</span><br>);<br><br><span class="hljs-comment">-- 用 ROW(...) 构造函数构造列簇，并往 HBase 表写数据。</span><br><span class="hljs-comment">-- 假设 "T" 的表结构是 [rowkey, f1q1, f2q2, f2q3, f3q4, f3q5, f3q6]</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> hTable<br><span class="hljs-keyword">SELECT</span> rowkey, <span class="hljs-keyword">ROW</span>(f1q1), <span class="hljs-keyword">ROW</span>(f2q2, f2q3), <span class="hljs-keyword">ROW</span>(f3q4, f3q5, f3q6) <span class="hljs-keyword">FROM</span> T;<br><br><span class="hljs-comment">-- 从 HBase 表扫描数据</span><br><span class="hljs-keyword">SELECT</span> rowkey, family1, family3.q4, family3.q6 <span class="hljs-keyword">FROM</span> hTable;<br><br><span class="hljs-comment">-- temporal join HBase 表，将 HBase 表作为维表</span><br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> myTopic<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> hTable <span class="hljs-keyword">FOR</span> SYSTEM_TIME <span class="hljs-keyword">AS</span> <span class="hljs-keyword">OF</span> myTopic.proctime<br><span class="hljs-keyword">ON</span> myTopic.key = hTable.rowkey;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-comment">-- 在 Flink SQL 中注册 HBase 表 "mytable"</span><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hTable (<br> rowkey <span class="hljs-built_in">INT</span>,<br> info <span class="hljs-keyword">ROW</span>&lt;remark <span class="hljs-keyword">String</span>&gt;,<br> info <span class="hljs-keyword">ROW</span>&lt;<span class="hljs-keyword">name</span> STRINGT&gt;,<br> PRIMARY <span class="hljs-keyword">KEY</span> (rowkey) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">ENFORCED</span><br>) <span class="hljs-keyword">WITH</span> (<br> <span class="hljs-string">'connector'</span> = <span class="hljs-string">'hbase-2.12'</span>,<br> <span class="hljs-string">'table-name'</span> = <span class="hljs-string">'cs_user1'</span>,<br> <span class="hljs-string">'zookeeper.quorum'</span> = <span class="hljs-string">'kafka01:2181'</span><br>);<br><br><span class="hljs-comment">-- 用 ROW(...) 构造函数构造列簇，并往 HBase 表写数据。</span><br><span class="hljs-comment">-- 假设 "T" 的表结构是 [rowkey, f1q1, f2q2, f2q3, f3q4, f3q5, f3q6]</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> hTable<br><span class="hljs-keyword">SELECT</span> rowkey, <span class="hljs-keyword">ROW</span>(f1q1), <span class="hljs-keyword">ROW</span>(f2q2, f2q3), <span class="hljs-keyword">ROW</span>(f3q4, f3q5, f3q6) <span class="hljs-keyword">FROM</span> T;<br><br><span class="hljs-comment">-- 从 HBase 表扫描数据</span><br><span class="hljs-keyword">SELECT</span> rowkey, family1, family3.q4, family3.q6 <span class="hljs-keyword">FROM</span> hTable;<br><br><span class="hljs-comment">-- temporal join HBase 表，将 HBase 表作为维表</span><br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> myTopic<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> hTable <span class="hljs-keyword">FOR</span> SYSTEM_TIME <span class="hljs-keyword">AS</span> <span class="hljs-keyword">OF</span> myTopic.proctime<br><span class="hljs-keyword">ON</span> myTopic.key = hTable.rowkey;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> hTable (<br> rowkey <span class="hljs-keyword">String</span>,<br>  info <span class="hljs-keyword">ROW</span>&lt;<span class="hljs-keyword">name</span> <span class="hljs-keyword">String</span>&gt;,<br> PRIMARY <span class="hljs-keyword">KEY</span> (rowkey) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">ENFORCED</span><br>) <span class="hljs-keyword">WITH</span> (<br> <span class="hljs-string">'connector'</span> = <span class="hljs-string">'hbase-2.2'</span>,<br> <span class="hljs-string">'table-name'</span> = <span class="hljs-string">'cs_user1'</span>,<br> <span class="hljs-string">'zookeeper.quorum'</span> = <span class="hljs-string">'kafka01:2181'</span><br>)<br></code></pre></td></tr></table></figure><h3 id="FileSystem-SQL-Connector"><a href="#FileSystem-SQL-Connector" class="headerlink" title="FileSystem SQL Connector"></a>FileSystem SQL Connector</h3><blockquote><p>常规文件上文提到过，单独列出来主要是官网提供了一些如文件夹监听的功能</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> MyUserTable (<br>  column_name1 <span class="hljs-built_in">INT</span>,<br>  column_name2 <span class="hljs-keyword">STRING</span>,<br>  ...<br>  part_name1 <span class="hljs-built_in">INT</span>,<br>  part_name2 <span class="hljs-keyword">STRING</span><br>) PARTITIONED <span class="hljs-keyword">BY</span> (part_name1, part_name2) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'filesystem'</span>,           <span class="hljs-comment">-- required: specify the connector</span><br>  <span class="hljs-string">'path'</span> = <span class="hljs-string">'file:///path/to/whatever'</span>,  <span class="hljs-comment">-- required: path to a directory</span><br>  <span class="hljs-string">'format'</span> = <span class="hljs-string">'...'</span>,                     <span class="hljs-comment">-- required: file system connector requires to specify a format,</span><br>                                        <span class="hljs-comment">-- Please refer to Table Formats</span><br>                                        <span class="hljs-comment">-- section for more details</span><br>  <span class="hljs-string">'partition.default-name'</span> = <span class="hljs-string">'...'</span>,     <span class="hljs-comment">-- optional: default partition name in case the dynamic partition</span><br>                                        <span class="hljs-comment">-- column value is null/empty string</span><br><br>  <span class="hljs-comment">-- optional: the option to enable shuffle data by dynamic partition fields in sink phase, this can greatly</span><br>  <span class="hljs-comment">-- reduce the number of file for filesystem sink but may lead data skew, the default value is false.</span><br>  <span class="hljs-string">'sink.shuffle-by-partition.enable'</span> = <span class="hljs-string">'...'</span>,<br>  ...<br>)<br></code></pre></td></tr></table></figure><h3 id="Directory-watching"><a href="#Directory-watching" class="headerlink" title="Directory watching"></a>Directory watching</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> MyUserTableWithFilepath (<br>  column_name1 <span class="hljs-built_in">INT</span>,<br>  column_name2 <span class="hljs-keyword">STRING</span>,<br>  <span class="hljs-string">`file.path`</span> <span class="hljs-keyword">STRING</span> <span class="hljs-keyword">NOT</span> <span class="hljs-literal">NULL</span> METADATA<br>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span> = <span class="hljs-string">'filesystem'</span>,<br>  <span class="hljs-string">'path'</span> = <span class="hljs-string">'file:///path/to/whatever'</span>,<br>  <span class="hljs-string">'format'</span> = <span class="hljs-string">'json'</span><br>)<br></code></pre></td></tr></table></figure><h3 id="Streaming-Sink"><a href="#Streaming-Sink" class="headerlink" title="Streaming Sink"></a>Streaming Sink</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> kafka_table (<br>  user_id <span class="hljs-keyword">STRING</span>,<br>  order_amount <span class="hljs-keyword">DOUBLE</span>,<br>  log_ts <span class="hljs-built_in">TIMESTAMP</span>(<span class="hljs-number">3</span>),<br>  WATERMARK <span class="hljs-keyword">FOR</span> log_ts <span class="hljs-keyword">AS</span> log_ts - <span class="hljs-built_in">INTERVAL</span> <span class="hljs-string">'5'</span> <span class="hljs-keyword">SECOND</span><br>) <span class="hljs-keyword">WITH</span> (...);<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> fs_table (<br>  user_id <span class="hljs-keyword">STRING</span>,<br>  order_amount <span class="hljs-keyword">DOUBLE</span>,<br>  dt <span class="hljs-keyword">STRING</span>,<br>  <span class="hljs-string">`hour`</span> <span class="hljs-keyword">STRING</span><br>) PARTITIONED <span class="hljs-keyword">BY</span> (dt, <span class="hljs-string">`hour`</span>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span>=<span class="hljs-string">'filesystem'</span>,<br>  <span class="hljs-string">'path'</span>=<span class="hljs-string">'...'</span>,<br>  <span class="hljs-string">'format'</span>=<span class="hljs-string">'parquet'</span>,<br>  <span class="hljs-string">'sink.partition-commit.delay'</span>=<span class="hljs-string">'1 h'</span>,<br>  <span class="hljs-string">'sink.partition-commit.policy.kind'</span>=<span class="hljs-string">'success-file'</span><br>);<br><br><span class="hljs-comment">-- streaming sql, insert into file system table</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> fs_table <br><span class="hljs-keyword">SELECT</span> <br>    user_id, <br>    order_amount, <br>    <span class="hljs-keyword">DATE_FORMAT</span>(log_ts, <span class="hljs-string">'yyyy-MM-dd'</span>),<br>    <span class="hljs-keyword">DATE_FORMAT</span>(log_ts, <span class="hljs-string">'HH'</span>) <br><span class="hljs-keyword">FROM</span> kafka_table;<br><br><span class="hljs-comment">-- batch sql, select with partition pruning</span><br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> fs_table <span class="hljs-keyword">WHERE</span> dt=<span class="hljs-string">'2020-05-20'</span> <span class="hljs-keyword">and</span> <span class="hljs-string">`hour`</span>=<span class="hljs-string">'12'</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> kafka_table (<br>  user_id <span class="hljs-keyword">STRING</span>,<br>  order_amount <span class="hljs-keyword">DOUBLE</span>,<br>  ts <span class="hljs-built_in">BIGINT</span>, <span class="hljs-comment">-- time in epoch milliseconds</span><br>  ts_ltz <span class="hljs-keyword">AS</span> TO_TIMESTAMP_LTZ(ts, <span class="hljs-number">3</span>),<br>  WATERMARK <span class="hljs-keyword">FOR</span> ts_ltz <span class="hljs-keyword">AS</span> ts_ltz - <span class="hljs-built_in">INTERVAL</span> <span class="hljs-string">'5'</span> <span class="hljs-keyword">SECOND</span> <span class="hljs-comment">-- Define watermark on TIMESTAMP_LTZ column</span><br>) <span class="hljs-keyword">WITH</span> (...);<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> fs_table (<br>  user_id <span class="hljs-keyword">STRING</span>,<br>  order_amount <span class="hljs-keyword">DOUBLE</span>,<br>  dt <span class="hljs-keyword">STRING</span>,<br>  <span class="hljs-string">`hour`</span> <span class="hljs-keyword">STRING</span><br>) PARTITIONED <span class="hljs-keyword">BY</span> (dt, <span class="hljs-string">`hour`</span>) <span class="hljs-keyword">WITH</span> (<br>  <span class="hljs-string">'connector'</span>=<span class="hljs-string">'filesystem'</span>,<br>  <span class="hljs-string">'path'</span>=<span class="hljs-string">'...'</span>,<br>  <span class="hljs-string">'format'</span>=<span class="hljs-string">'parquet'</span>,<br>  <span class="hljs-string">'partition.time-extractor.timestamp-pattern'</span>=<span class="hljs-string">'$dt $hour:00:00'</span>,<br>  <span class="hljs-string">'sink.partition-commit.delay'</span>=<span class="hljs-string">'1 h'</span>,<br>  <span class="hljs-string">'sink.partition-commit.trigger'</span>=<span class="hljs-string">'partition-time'</span>,<br>  <span class="hljs-string">'sink.partition-commit.watermark-time-zone'</span>=<span class="hljs-string">'Asia/Shanghai'</span>, <span class="hljs-comment">-- Assume user configured time zone is 'Asia/Shanghai'</span><br>  <span class="hljs-string">'sink.partition-commit.policy.kind'</span>=<span class="hljs-string">'success-file'</span><br>);<br><br><span class="hljs-comment">-- streaming sql, insert into file system table</span><br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> fs_table <br><span class="hljs-keyword">SELECT</span> <br>    user_id, <br>    order_amount, <br>    <span class="hljs-keyword">DATE_FORMAT</span>(ts_ltz, <span class="hljs-string">'yyyy-MM-dd'</span>),<br>    <span class="hljs-keyword">DATE_FORMAT</span>(ts_ltz, <span class="hljs-string">'HH'</span>) <br><span class="hljs-keyword">FROM</span> kafka_table;<br><br><span class="hljs-comment">-- batch sql, select with partition pruning</span><br><span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> fs_table <span class="hljs-keyword">WHERE</span> dt=<span class="hljs-string">'2020-05-20'</span> <span class="hljs-keyword">and</span> <span class="hljs-string">`hour`</span>=<span class="hljs-string">'12'</span>;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/flink/2023/FlinkTable&amp;SQL</title>
      <link href="/daydoc/2023/03/01/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/FlinkTable&amp;SQL/"/>
      <url>/daydoc/2023/03/01/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/FlinkTable&amp;SQL/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/flink/2023/容错机制</title>
      <link href="/daydoc/2023/03/01/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/"/>
      <url>/daydoc/2023/03/01/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/%E5%AE%B9%E9%94%99%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Flink状态编程</title>
      <link href="/daydoc/2023/03/01/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink%20%E7%8A%B6%E6%80%81%E7%BC%96%E7%A8%8B/"/>
      <url>/daydoc/2023/03/01/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink%20%E7%8A%B6%E6%80%81%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="58a2f880f8f46864151525cf21874c7e8dac609418797a4e41c79eb1ddfe41c6"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> flink、状态、编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flink 多流转换</title>
      <link href="/daydoc/2023/03/01/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/"/>
      <url>/daydoc/2023/03/01/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink%E5%A4%9A%E6%B5%81%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="915ba968bd7ce34ed02793191622dc1aa3af97d6c33f66fe14f8c76ff23f72b1"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> flink、stream、转换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink_Time_Window</title>
      <link href="/daydoc/2023/02/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink_Time_Window/"/>
      <url>/daydoc/2023/02/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink_Time_Window/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="df472913deb3b1898f798ffd07044d2f9ddbdbb2ea150661f725e6d4765100fe"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> flink、time、window </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink_Process_Function</title>
      <link href="/daydoc/2023/02/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink_Process_Function/"/>
      <url>/daydoc/2023/02/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink_Process_Function/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="b7d1de8ddb6b878c64a686189f23b108802fd5e495a0b14535a263b07b309f98"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> flink、transform、process </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flink_transform</title>
      <link href="/daydoc/2023/02/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/flink_transform/"/>
      <url>/daydoc/2023/02/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/flink_transform/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="57c17b877e053e009ad22ded8d7da0b67176fa57277228bba7d62004509b75ed"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> flink、transform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flink Source</title>
      <link href="/daydoc/2023/02/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/FlinkSource/"/>
      <url>/daydoc/2023/02/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/FlinkSource/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="1b25cf7fe00c5152eb2ce2fa91ff6e5b01b3cb565007646c23692a1706c9da11"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Flink、source </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/项目/古诗词竞赛/建设思路</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B/%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B/%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="古诗词竞赛"><a href="#古诗词竞赛" class="headerlink" title="古诗词竞赛"></a>古诗词竞赛</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">一个趣味小游戏，以诗词竞赛为主题，引入竞赛机制。<br></code></pre></td></tr></table></figure><h2 id="一、技术架构"><a href="#一、技术架构" class="headerlink" title="一、技术架构"></a>一、技术架构</h2><p>图示：</p><p><img src="http://img.wqkenqing.ren/typora_img/CleanShot%202022-05-12%20at%2010.27.26.png" srcset="/daydoc/img/loading.gif" lazyload alt="CleanShot 2022-05-12 at 10.27.26"></p><p>涉及技术栈:</p><ol><li>java</li><li>spring全家桶</li><li>elasticsearch</li><li>mybaits-plus</li><li>flink</li><li>web</li><li>jsoup</li><li>kafka</li></ol><p>以上主要是一期</p><p>二期会主要围绕小端等来进行开发</p><p>本应用采用了三层结构：采集层、治理层、应用层。</p><p>为此服务体系也采用微服务架构</p><h2 id="二、实现思路"><a href="#二、实现思路" class="headerlink" title="二、实现思路"></a>二、实现思路</h2><h3 id="2-1-采集层"><a href="#2-1-采集层" class="headerlink" title="2.1 采集层"></a>2.1 采集层</h3><p>通过爬虫服务，抓取相应的诗词数据，并放入暂存层中</p><h3 id="2-2-清洗转换层"><a href="#2-2-清洗转换层" class="headerlink" title="2.2 清洗转换层"></a>2.2 清洗转换层</h3><p>将暂存层中的数据，清洗后、分发至相应的数据库中</p><h3 id="2-3-应用层"><a href="#2-3-应用层" class="headerlink" title="2.3 应用层"></a>2.3 应用层</h3><p>基于抓取的数据进行设计开发web页面</p><h2 id="三、开发记录"><a href="#三、开发记录" class="headerlink" title="三、开发记录"></a>三、开发记录</h2><p>解析步骤<br>1.获取到总页数<br>2.获取a列表<br>3.抓取页面内容<br>    1. class zhuti yuanjiao 获取名称<br>    2. class jjzz 获取年代与作者名<br>    3. class shicineirong 获取诗词内容</p><h3 id="生成全局唯一id"><a href="#生成全局唯一id" class="headerlink" title="生成全局唯一id"></a>生成全局唯一id</h3><ol><li>数据库自增长序列或字段生成id</li><li>UUID</li><li>Redis生成ID</li><li>zookeeper生成ID</li><li>Twitter的snowflake算法</li></ol><h3 id="诗歌全局唯一id生成策略"><a href="#诗歌全局唯一id生成策略" class="headerlink" title="诗歌全局唯一id生成策略"></a>诗歌全局唯一id生成策略</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/运维/运维操作</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E6%93%8D%E4%BD%9C/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E8%BF%90%E7%BB%B4%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="Q-更换ubuntu安装源"><a href="#Q-更换ubuntu安装源" class="headerlink" title="Q: 更换ubuntu安装源"></a>Q: 更换ubuntu安装源</h2><p>cp /source/apt/source.plist /source/apt/source.list.bak</p><p>vim /source/apt/source.plist</p><p>添加国内源.</p><p>Q: mac 查看目前哪些进程占用哪些端口</p><p>lsof -nP  | grep TCP | grep LISTEN</p><p>lsof -i :TCP</p><p><img src="http://img.wqkenqing.ren/759a2c6c1c06fc81b9c400060913e93b.png" srcset="/daydoc/img/loading.gif" lazyload alt="查看mac pid进程的端口"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>es记录</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%AF%BE%E7%A8%8B%E8%AE%B0%E5%BD%95/es%E4%B8%93%E9%A1%B9/es%E8%AE%B0%E5%BD%95/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%AF%BE%E7%A8%8B%E8%AE%B0%E5%BD%95/es%E4%B8%93%E9%A1%B9/es%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="4f346c4e0d3747f8dc7de3520691b836f05b35f0457a79f255f6bf1c8f61bacf"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kibana的使用</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ELK/kibana%E4%BD%BF%E7%94%A8/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ELK/kibana%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="bd2785300221abcf235c324183afb09add42f452a1ee3b2e171261e7f1173aa8">f29c680708acd02cbb1b6cceaba06192340f836ccd91dcf28d1dcba7f8ec3c39bd022249ea9b9cf7faabfc9e8c827c268d1ef0e39e3b2079d8de8b88af433cbb8307c4c9bd524b46ced908e465380cf0c54342d10f65c837ce489ec4b91a17ab00a34d7a074308e3c59ad172f1b11517c1f7978786f013890069df0cdd639258599cc6d5e25e51e0e947343206fb1a1442c8526093d2377979497b685000bd2474f2978d5423f99a7d73d2fbbf619ddf7520e859c00bd2201c92004532c2e5677f462998ad8a8eb47aada844d2a47b6d9de29f07a58560bb8497934f64b9fe9eb6e3f7be7d08e39f973a7746c053324bba308fe6cd2bc3de6d86cb31e68d37933be4ea2aa8cc19092605aff6c1f1da9a63165e3eada0f8ce1a782acc001f7227e031910f9e677ba170750af1a23b363d266a6cf9c55e43e21725376c5ef45aa7fdab9663e928da30c0d12d3866857635fd79c1e52639b0c4a0e06019bf9dbb91299504494025ae10abf15a0e757b2737c4bd3664fbd9083aed3d592669f9ff94f3da5ef51ec8ae9b2144c9a0a3ffcf753005c62dcf344ff8a01d74e03ce3e1546e4fd3af96e88994ec1ac08dd33e64c9dab4aaf029124afa034cc0176f5930bdfe91d5fc3e75e09a8076a8f9b44558d20088f9ba76d936b5b2ec299d28aeade834a727a396bbbfb7e045c20655fb1757fa3a69916b2580fae03a6be9fc54769b074b189e402af7daa5f4f961b3b668c3ddb51a05cd099d407379efa1bee523d834ad744784a0659f80d04ca036761140acd023a2bdabfc7022fb3b513d0c7bf475448db6cf7971ed4c289185ea7a2b6387558cb1e8e21ac49a2798e912373adb84fa01b09689993150d2130a016f8295274d819fc089bf0e0ccbd723f10d2792dc2ab4b56aeb993c731ae07f096aa5c40f38536c0bf79202390800b2dcdccadba5a5535859dd4f2fd8e3d6ed413825892d42a702a929cc83669aa655192230b2</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> kibana </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/docker/Dockerfile基础&amp;编写</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/docker/Dockerfile%E5%9F%BA%E7%A1%80&amp;%E7%BC%96%E5%86%99/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/docker/Dockerfile%E5%9F%BA%E7%A1%80&amp;%E7%BC%96%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h1 id="Dockerfile基础"><a href="#Dockerfile基础" class="headerlink" title="Dockerfile基础"></a>Dockerfile基础</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">Dockerfile</span>用于指定docker <span class="hljs-keyword">build </span>指令时执行时的动作与资源划分等,如指定分配内存大小,cpu个数等.从而构成相应的镜像<br></code></pre></td></tr></table></figure><h2 id="详细指令"><a href="#详细指令" class="headerlink" title="详细指令"></a>详细指令</h2><p><img src="http://img.wqkenqing.ren/5aaf3a25b3434c7b1ec0cd5b41b2be1a.png" srcset="/daydoc/img/loading.gif" lazyload alt="docker详细指令"></p><p>如上图即docker主要的指令与作用</p><p>Dockerfile由多条指令组成,每条指令在编译镜像时执行相应的程序完成某些功能,指令+参数组成，以逗号分隔，#作为注释起始符，虽说指令不区分大小写，但是一般指令使用大些，参数使用小写.</p><h3 id="指令：FROM"><a href="#指令：FROM" class="headerlink" title="指令：FROM"></a>指令：FROM</h3><p>功能描述：设置基础镜像<br>语法：FROM &lt; image&gt;[:&lt; tag&gt; | @&lt; digest&gt;]<br>提示：镜像都是从一个基础镜像（操作系统或其他镜像）生成，可以在一个Dockerfile中添加多条FROM指令，一次生成多个镜像<br>注意：如果忽略tag选项，会使用latest镜像</p><h3 id="指令：MAINTAINER"><a href="#指令：MAINTAINER" class="headerlink" title="指令：MAINTAINER"></a>指令：MAINTAINER</h3><p>功能描述：设置镜像作者<br>语法：MAINTAINER &lt; name&gt;</p><h3 id="指令：RUN"><a href="#指令：RUN" class="headerlink" title="指令：RUN"></a>指令：RUN</h3><p>功能描述：<br>语法：RUN &lt; command&gt;<br>          RUN [“executable”,”param1”,”param2”]<br>提示：RUN指令会生成容器，在容器中执行脚本，容器使用当前镜像，脚本指令完成后，Docker Daemon会将该容器提交为一个中间镜像，供后面的指令使用<br>补充：RUN指令第一种方式为shell方式，使用/bin/sh -c &lt; command&gt;运行脚本，可以在其中使用\将脚本分为多行<br>          RUN指令第二种方式为exec方式，镜像中没有/bin/sh或者要使用其他shell时使用该方式，其不会调用shell命令<br>例子：RUN source $HOME/.bashrc;<br>          echo $HOME</p><pre><code class="hljs">RUN [“/bin/bash”,”-c”,”echo hello”]RUN [“sh”,”-c”,”echo”,”$HOME”] 使用第二种方式调用shell读取环境变量</code></pre><h3 id="指令：CMD"><a href="#指令：CMD" class="headerlink" title="指令：CMD"></a>指令：CMD</h3><p>功能描述：设置容器的启动命令<br>语法：CMD [“executable”,”param1”,”param2”]<br>          CMD [“param1”,”param2”]<br>          CMD &lt; command&gt;<br>提示：CMD第一种、第三种方式和RUN类似，第二种方式为ENTRYPOINT参数方式，为entrypoint提供参数列表<br>注意：<strong>Dockerfile中只能有一条CMD命令，如果写了多条则最后一条生效</strong></p><h3 id="指令：LABEL"><a href="#指令：LABEL" class="headerlink" title="指令：LABEL"></a>指令：LABEL</h3><p>功能描述：设置镜像的标签<br>延伸：镜像标签可以通过docker inspect查看<br>格式：LABEL &lt; key&gt;=&lt; value&gt; &lt; key&gt;=&lt; value&gt; …<br>提示：不同标签之间通过空格隔开<br>注意：每条指令都会生成一个镜像层，Docker中镜像最多只能有127层，如果超出Docker Daemon就会报错，如LABEL ..=.. &lt;假装这里有个换行&gt; LABEL ..=..合在一起用空格分隔就可以减少镜像层数量，同样，可以使用连接符\将脚本分为多行镜像会继承基础镜像中的标签，如果存在同名标签则会覆盖</p><h3 id="指令：EXPOSE"><a href="#指令：EXPOSE" class="headerlink" title="指令：EXPOSE"></a>指令：EXPOSE</h3><p>功能描述：设置镜像暴露端口，记录容器启动时监听哪些端口<br>语法：EXPOSE &lt; port&gt; &lt; port&gt; …<br>延伸：镜像暴露端口可以通过docker inspect查看<br>提示：容器启动时，Docker Daemon会扫描镜像中暴露的端口，如果加入-P参数，Docker Daemon会把镜像中所有暴露端口导出，并为每个暴露端口分配一个随机的主机端口（暴露端口是容器监听端口，主机端口为外部访问容器的端口）<br>注意：EXPOSE只设置暴露端口并不导出端口，只有启动容器时使用-P/-p才导出端口，这个时候才能通过外部访问容器提供的服务</p><h3 id="指令：ENV"><a href="#指令：ENV" class="headerlink" title="指令：ENV"></a>指令：ENV</h3><p>功能描述：设置镜像中的环境变量<br>语法：ENV &lt; key&gt;=&lt; value&gt;…|&lt; key&gt; &lt; value&gt;<br>注意：环境变量在整个编译周期都有效，第一种方式可设置多个环境变量，第二种方式只设置一个环境变量<br>提示：通过${变量名}或者 $变量名使用变量，使用方式${变量名}时可以用${变量名:-default} ${变量名:+cover}设定默认值或者覆盖值 ENV设置的变量值在整个编译过程中总是保持不变的</p><h3 id="指令：ADD"><a href="#指令：ADD" class="headerlink" title="指令：ADD"></a>指令：ADD</h3><p>功能描述：复制文件到镜像中<br>语法：ADD &lt; src&gt;… &lt; dest&gt;|[“&lt; src&gt;”,… “&lt; dest&gt;”]<br>注意：当路径中有空格时，需要使用第二种方式<br>          当src为文件或目录时，Docker Daemon会从编译目录寻找这些文件或目录，而dest为镜像中的绝对路径或者相对于WORKDIR的路径<br>提示：src为目录时，复制目录中所有内容，包括文件系统的元数据，但不包括目录本身<br>          src为压缩文件，并且压缩方式为gzip,bzip2或xz时，指令会将其解压为目录<br>          如果src为文件，则复制文件和元数据<br>          如果dest不存在，指令会自动创建dest和缺失的上级目录</p><h3 id="指令：COPY"><a href="#指令：COPY" class="headerlink" title="指令：COPY"></a>指令：COPY</h3><p>功能描述：复制文件到镜像中<br>语法：COPY &lt; src&gt;… &lt; dest&gt;|[“&lt; src&gt;”,… “&lt; dest&gt;”]<br>提示：指令逻辑和ADD十分相似，同样Docker Daemon会从编译目录寻找文件或目录，dest为镜像中的绝对路径或者相对于WORKDIR的路径</p><h3 id="指令：ENTRYPOINT"><a href="#指令：ENTRYPOINT" class="headerlink" title="指令：ENTRYPOINT"></a>指令：ENTRYPOINT</h3><p>功能描述：设置容器的入口程序<br>语法：ENTRYPOINT [“executable”,”param1”,”param2”]<br>          ENTRYPOINT command param1 param2（shell方式）<br>提示：入口程序是容器启动时执行的程序，docker run中最后的命令将作为参数传递给入口程序<br>          入口程序有两种格式：exec、shell，其中shell使用/bin/sh -c运行入口程序，此时入口程序不能接收信号量<br>          当Dockerfile有多条ENTRYPOINT时只有最后的ENTRYPOINT指令生效<br>          如果使用脚本作为入口程序，需要保证脚本的最后一个程序能够接收信号量，可以在脚本最后使用exec或gosu启动传入脚本的命令<br>注意：通过shell方式启动入口程序时，会忽略CMD指令和docker run中的参数<br>          为了保证容器能够接受docker stop发送的信号量，需要通过exec启动程序；如果没有加入exec命令，则在启动容器时容器会出现两个进程，并且使用docker stop命令容器无法正常退出（无法接受SIGTERM信号），超时后docker stop发送SIGKILL，强制停止容器<br>例子：FROM ubuntu &lt;换行&gt; ENTRYPOINT exec top -b</p><h3 id="指令：VOLUME"><a href="#指令：VOLUME" class="headerlink" title="指令：VOLUME"></a>指令：VOLUME</h3><p>功能描述：设置容器的挂载点<br>语法：VOLUME [“/data”]<br>          VOLUME /data1 /data2<br>提示：启动容器时，Docker Daemon会新建挂载点，并用镜像中的数据初始化挂载点，可以将主机目录或数据卷容器挂载到这些挂载点</p><h3 id="指令：USER"><a href="#指令：USER" class="headerlink" title="指令：USER"></a>指令：USER</h3><p>功能描述：设置RUN CMD ENTRYPOINT的用户名或UID<br>语法：USER &lt; name&gt;</p><h3 id="指令：WORKDIR"><a href="#指令：WORKDIR" class="headerlink" title="指令：WORKDIR"></a>指令：WORKDIR</h3><p>功能描述：设置RUN CMD ENTRYPOINT ADD COPY指令的工作目录<br>语法：WORKDIR &lt; Path&gt;<br>提示：如果工作目录不存在，则Docker Daemon会自动创建<br>          Dockerfile中多个地方都可以调用WORKDIR，如果后面跟的是相对位置，则会跟在上条WORKDIR指定路径后（如WORKDIR /A   WORKDIR B   WORKDIR C，最终路径为/A/B/C</p><h3 id="指令：ARG"><a href="#指令：ARG" class="headerlink" title="指令：ARG"></a>指令：ARG</h3><p>功能描述：设置编译变量<br>语法：ARG &lt; name&gt;[=&lt; defaultValue&gt;]<br>注意：ARG从定义它的地方开始生效而不是调用的地方，在ARG之前调用编译变量总为空，在编译镜像时，可以通过docker build –build-arg &lt; var&gt;=&lt; value&gt;设置变量，如果var没有通过ARG定义则Daemon会报错<br>          可以使用ENV或ARG设置RUN使用的变量，如果同名则ENV定义的值会覆盖ARG定义的值，与ENV不同，ARG的变量值在编译过程中是可变的，会对比使用编译缓存造成影响（ARG值不同则编译过程也不同）<br>例子：ARG CONT_IMAG_VER &lt;换行&gt; RUN echo $CONT_IMG_VER<br>          ARG CONT_IMAG_VER &lt;换行&gt; RUN echo hello<br>          当编译时给ARG变量赋值hello，则两个Dockerfile可以使用相同的中间镜像，如果不为hello，则不能使用同一个中间镜像</p><h3 id="CMD-ENTRYPOINT和RUN的区别"><a href="#CMD-ENTRYPOINT和RUN的区别" class="headerlink" title="CMD ENTRYPOINT和RUN的区别"></a>CMD ENTRYPOINT和RUN的区别</h3><p>RUN指令是设置编译镜像时执行的脚本和程序，镜像编译完成后，RUN指令的生命周期结束<br>容器启动时，可以通过CMD和ENTRYPOINT设置启动项，其中CMD叫做容器默认启动命令，如果在docker run命令末尾添加command，则会替换镜像中CMD设置的启动程序；ENRTYPOINT叫做入口程序，不能被docker run命令末尾的command替换，而是将command当作字符串，传递给ENTRYPOINT作为参数</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/es/共享数据集合</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE%E9%9B%86%E5%90%88/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>redis address: 192.168.10.101<br>port :5601</p><p>LYDSJ_DATA_BASE_TYPE</p><p><img src="http://img.wqkenqing.ren/ce745f99167b91191debfc65fad693b4.png" srcset="/daydoc/img/loading.gif" lazyload alt="基础映射类型"></p><p>LYDSJ_DATA_SOURCE</p><p><img src="http://img.wqkenqing.ren/215be461e444100be5552e288a00caba.png" srcset="/daydoc/img/loading.gif" lazyload alt="共享数据源"></p><p>LYDSJ_DATA_TYPE</p><p><img src="http://img.wqkenqing.ren/f6e0b3711855e7f65380444470913900.png" srcset="/daydoc/img/loading.gif" lazyload alt="数据类型"></p><p>LYDSJ_GATHER_DATA_SOURCE_MAP</p><p>LYDSJ_GATHER_DATA_TYPE_MAP</p><p>所以这里要确定一下<br>这里的类目后续需不需要与可视化中心的类目统一</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/yarn/YarnState</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/yarn/YarnState/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/yarn/YarnState/</url>
      
        <content type="html"><![CDATA[<h1 id="yarn相关参数提取"><a href="#yarn相关参数提取" class="headerlink" title="yarn相关参数提取"></a>yarn相关参数提取</h1><h2 id="rest-web-api"><a href="#rest-web-api" class="headerlink" title="rest web api"></a>rest web api</h2><p><a href="http://namenode:8088/ws/v1/cluster/apps" target="_blank" rel="noopener">http://namenode:8088/ws/v1/cluster/apps</a></p><p>获得json对象</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>  <span class="hljs-attr">"apps"</span>:&#123;<br>    <span class="hljs-attr">"app"</span>:[<br>      &#123;<br>        <span class="hljs-attr">"applicationType"</span>:<span class="hljs-string">"MAPREDUCE"</span>,<br>        <span class="hljs-attr">"finalStatus"</span>:<span class="hljs-string">"SUCCEEDED"</span>,<br>        <span class="hljs-attr">"trackingUrl"</span>:<span class="hljs-string">"http:\/\/namenode:8088\/proxy\/application_1558964977321_0007\/"</span>,<br>        <span class="hljs-attr">"runningContainers"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"clusterId"</span>:<span class="hljs-number">1558964977321</span>,<br>        <span class="hljs-attr">"vcoreSeconds"</span>:<span class="hljs-number">349</span>,<br>        <span class="hljs-attr">"preemptedResourceVCores"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"numAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"allocatedMB"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"id"</span>:<span class="hljs-string">"application_1558964977321_0007"</span>,<br>        <span class="hljs-attr">"state"</span>:<span class="hljs-string">"FINISHED"</span>,<br>        <span class="hljs-attr">"amHostHttpAddress"</span>:<span class="hljs-string">"datanode2:8042"</span>,<br>        <span class="hljs-attr">"memorySeconds"</span>:<span class="hljs-number">538321</span>,<br>        <span class="hljs-attr">"preemptedResourceMB"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"applicationTags"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"startedTime"</span>:<span class="hljs-number">1561963496299</span>,<br>        <span class="hljs-attr">"trackingUI"</span>:<span class="hljs-string">"History"</span>,<br>        <span class="hljs-attr">"numNonAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"amContainerLogs"</span>:<span class="hljs-string">"http:\/\/datanode2:8042\/node\/containerlogs\/container_1558964977321_0007_01_000001\/hadoop"</span>,<br>        <span class="hljs-attr">"allocatedVCores"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"diagnostics"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"name"</span>:<span class="hljs-string">"componet_code-jar-with-dependencies.jar"</span>,<br>        <span class="hljs-attr">"progress"</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">"finishedTime"</span>:<span class="hljs-number">1561963577074</span>,<br>        <span class="hljs-attr">"user"</span>:<span class="hljs-string">"hadoop"</span>,<br>        <span class="hljs-attr">"queue"</span>:<span class="hljs-string">"default"</span>,<br>        <span class="hljs-attr">"elapsedTime"</span>:<span class="hljs-number">80775</span><br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">"applicationType"</span>:<span class="hljs-string">"MAPREDUCE"</span>,<br>        <span class="hljs-attr">"finalStatus"</span>:<span class="hljs-string">"FAILED"</span>,<br>        <span class="hljs-attr">"trackingUrl"</span>:<span class="hljs-string">"http:\/\/namenode:8088\/proxy\/application_1558964977321_0006\/"</span>,<br>        <span class="hljs-attr">"runningContainers"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"clusterId"</span>:<span class="hljs-number">1558964977321</span>,<br>        <span class="hljs-attr">"vcoreSeconds"</span>:<span class="hljs-number">197</span>,<br>        <span class="hljs-attr">"preemptedResourceVCores"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"numAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"allocatedMB"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"id"</span>:<span class="hljs-string">"application_1558964977321_0006"</span>,<br>        <span class="hljs-attr">"state"</span>:<span class="hljs-string">"FINISHED"</span>,<br>        <span class="hljs-attr">"amHostHttpAddress"</span>:<span class="hljs-string">"datanode1:8042"</span>,<br>        <span class="hljs-attr">"memorySeconds"</span>:<span class="hljs-number">261004</span>,<br>        <span class="hljs-attr">"preemptedResourceMB"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"applicationTags"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"startedTime"</span>:<span class="hljs-number">1559543218059</span>,<br>        <span class="hljs-attr">"trackingUI"</span>:<span class="hljs-string">"History"</span>,<br>        <span class="hljs-attr">"numNonAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"amContainerLogs"</span>:<span class="hljs-string">"http:\/\/datanode1:8042\/node\/containerlogs\/container_1558964977321_0006_01_000001\/hadoop"</span>,<br>        <span class="hljs-attr">"allocatedVCores"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"diagnostics"</span>:<span class="hljs-string">"Task failed task_1558964977321_0006_m_000000\nJob failed as tasks failed. failedMaps:1 failedReduces:0\n"</span>,<br>        <span class="hljs-attr">"name"</span>:<span class="hljs-string">"N\/A"</span>,<br>        <span class="hljs-attr">"progress"</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">"finishedTime"</span>:<span class="hljs-number">1559543260162</span>,<br>        <span class="hljs-attr">"user"</span>:<span class="hljs-string">"hadoop"</span>,<br>        <span class="hljs-attr">"queue"</span>:<span class="hljs-string">"default"</span>,<br>        <span class="hljs-attr">"elapsedTime"</span>:<span class="hljs-number">42103</span><br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">"applicationType"</span>:<span class="hljs-string">"MAPREDUCE"</span>,<br>        <span class="hljs-attr">"finalStatus"</span>:<span class="hljs-string">"FAILED"</span>,<br>        <span class="hljs-attr">"trackingUrl"</span>:<span class="hljs-string">"http:\/\/namenode:8088\/proxy\/application_1558964977321_0005\/"</span>,<br>        <span class="hljs-attr">"runningContainers"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"clusterId"</span>:<span class="hljs-number">1558964977321</span>,<br>        <span class="hljs-attr">"vcoreSeconds"</span>:<span class="hljs-number">181</span>,<br>        <span class="hljs-attr">"preemptedResourceVCores"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"numAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"allocatedMB"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"id"</span>:<span class="hljs-string">"application_1558964977321_0005"</span>,<br>        <span class="hljs-attr">"state"</span>:<span class="hljs-string">"FINISHED"</span>,<br>        <span class="hljs-attr">"amHostHttpAddress"</span>:<span class="hljs-string">"datanode1:8042"</span>,<br>        <span class="hljs-attr">"memorySeconds"</span>:<span class="hljs-number">239683</span>,<br>        <span class="hljs-attr">"preemptedResourceMB"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"applicationTags"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"startedTime"</span>:<span class="hljs-number">1559543157210</span>,<br>        <span class="hljs-attr">"trackingUI"</span>:<span class="hljs-string">"History"</span>,<br>        <span class="hljs-attr">"numNonAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"amContainerLogs"</span>:<span class="hljs-string">"http:\/\/datanode1:8042\/node\/containerlogs\/container_1558964977321_0005_01_000001\/hadoop"</span>,<br>        <span class="hljs-attr">"allocatedVCores"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"diagnostics"</span>:<span class="hljs-string">"Task failed task_1558964977321_0005_m_000004\nJob failed as tasks failed. failedMaps:1 failedReduces:0\n"</span>,<br>        <span class="hljs-attr">"name"</span>:<span class="hljs-string">"N\/A"</span>,<br>        <span class="hljs-attr">"progress"</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">"finishedTime"</span>:<span class="hljs-number">1559543203631</span>,<br>        <span class="hljs-attr">"user"</span>:<span class="hljs-string">"hadoop"</span>,<br>        <span class="hljs-attr">"queue"</span>:<span class="hljs-string">"default"</span>,<br>        <span class="hljs-attr">"elapsedTime"</span>:<span class="hljs-number">46421</span><br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">"applicationType"</span>:<span class="hljs-string">"MAPREDUCE"</span>,<br>        <span class="hljs-attr">"finalStatus"</span>:<span class="hljs-string">"FAILED"</span>,<br>        <span class="hljs-attr">"trackingUrl"</span>:<span class="hljs-string">"http:\/\/namenode:8088\/proxy\/application_1558964977321_0004\/"</span>,<br>        <span class="hljs-attr">"runningContainers"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"clusterId"</span>:<span class="hljs-number">1558964977321</span>,<br>        <span class="hljs-attr">"vcoreSeconds"</span>:<span class="hljs-number">206</span>,<br>        <span class="hljs-attr">"preemptedResourceVCores"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"numAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"allocatedMB"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"id"</span>:<span class="hljs-string">"application_1558964977321_0004"</span>,<br>        <span class="hljs-attr">"state"</span>:<span class="hljs-string">"FINISHED"</span>,<br>        <span class="hljs-attr">"amHostHttpAddress"</span>:<span class="hljs-string">"datanode2:8042"</span>,<br>        <span class="hljs-attr">"memorySeconds"</span>:<span class="hljs-number">269329</span>,<br>        <span class="hljs-attr">"preemptedResourceMB"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"applicationTags"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"startedTime"</span>:<span class="hljs-number">1559543112981</span>,<br>        <span class="hljs-attr">"trackingUI"</span>:<span class="hljs-string">"History"</span>,<br>        <span class="hljs-attr">"numNonAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"amContainerLogs"</span>:<span class="hljs-string">"http:\/\/datanode2:8042\/node\/containerlogs\/container_1558964977321_0004_01_000001\/hadoop"</span>,<br>        <span class="hljs-attr">"allocatedVCores"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"diagnostics"</span>:<span class="hljs-string">"Task failed task_1558964977321_0004_m_000000\nJob failed as tasks failed. failedMaps:1 failedReduces:0\n"</span>,<br>        <span class="hljs-attr">"name"</span>:<span class="hljs-string">"N\/A"</span>,<br>        <span class="hljs-attr">"progress"</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">"finishedTime"</span>:<span class="hljs-number">1559543159096</span>,<br>        <span class="hljs-attr">"user"</span>:<span class="hljs-string">"hadoop"</span>,<br>        <span class="hljs-attr">"queue"</span>:<span class="hljs-string">"default"</span>,<br>        <span class="hljs-attr">"elapsedTime"</span>:<span class="hljs-number">46115</span><br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">"applicationType"</span>:<span class="hljs-string">"MAPREDUCE"</span>,<br>        <span class="hljs-attr">"finalStatus"</span>:<span class="hljs-string">"FAILED"</span>,<br>        <span class="hljs-attr">"trackingUrl"</span>:<span class="hljs-string">"http:\/\/namenode:8088\/proxy\/application_1558964977321_0003\/"</span>,<br>        <span class="hljs-attr">"runningContainers"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"clusterId"</span>:<span class="hljs-number">1558964977321</span>,<br>        <span class="hljs-attr">"vcoreSeconds"</span>:<span class="hljs-number">172</span>,<br>        <span class="hljs-attr">"preemptedResourceVCores"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"numAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"allocatedMB"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"id"</span>:<span class="hljs-string">"application_1558964977321_0003"</span>,<br>        <span class="hljs-attr">"state"</span>:<span class="hljs-string">"FINISHED"</span>,<br>        <span class="hljs-attr">"amHostHttpAddress"</span>:<span class="hljs-string">"datanode1:8042"</span>,<br>        <span class="hljs-attr">"memorySeconds"</span>:<span class="hljs-number">227366</span>,<br>        <span class="hljs-attr">"preemptedResourceMB"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"applicationTags"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"startedTime"</span>:<span class="hljs-number">1559543073374</span>,<br>        <span class="hljs-attr">"trackingUI"</span>:<span class="hljs-string">"History"</span>,<br>        <span class="hljs-attr">"numNonAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"amContainerLogs"</span>:<span class="hljs-string">"http:\/\/datanode1:8042\/node\/containerlogs\/container_1558964977321_0003_01_000001\/hadoop"</span>,<br>        <span class="hljs-attr">"allocatedVCores"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"diagnostics"</span>:<span class="hljs-string">"Task failed task_1558964977321_0003_m_000004\nJob failed as tasks failed. failedMaps:1 failedReduces:0\n"</span>,<br>        <span class="hljs-attr">"name"</span>:<span class="hljs-string">"N\/A"</span>,<br>        <span class="hljs-attr">"progress"</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">"finishedTime"</span>:<span class="hljs-number">1559543111009</span>,<br>        <span class="hljs-attr">"user"</span>:<span class="hljs-string">"hadoop"</span>,<br>        <span class="hljs-attr">"queue"</span>:<span class="hljs-string">"default"</span>,<br>        <span class="hljs-attr">"elapsedTime"</span>:<span class="hljs-number">37635</span><br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">"applicationType"</span>:<span class="hljs-string">"MAPREDUCE"</span>,<br>        <span class="hljs-attr">"finalStatus"</span>:<span class="hljs-string">"FAILED"</span>,<br>        <span class="hljs-attr">"trackingUrl"</span>:<span class="hljs-string">"http:\/\/namenode:8088\/proxy\/application_1558964977321_0002\/"</span>,<br>        <span class="hljs-attr">"runningContainers"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"clusterId"</span>:<span class="hljs-number">1558964977321</span>,<br>        <span class="hljs-attr">"vcoreSeconds"</span>:<span class="hljs-number">206</span>,<br>        <span class="hljs-attr">"preemptedResourceVCores"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"numAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"allocatedMB"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"id"</span>:<span class="hljs-string">"application_1558964977321_0002"</span>,<br>        <span class="hljs-attr">"state"</span>:<span class="hljs-string">"FINISHED"</span>,<br>        <span class="hljs-attr">"amHostHttpAddress"</span>:<span class="hljs-string">"datanode2:8042"</span>,<br>        <span class="hljs-attr">"memorySeconds"</span>:<span class="hljs-number">267663</span>,<br>        <span class="hljs-attr">"preemptedResourceMB"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"applicationTags"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"startedTime"</span>:<span class="hljs-number">1559543001391</span>,<br>        <span class="hljs-attr">"trackingUI"</span>:<span class="hljs-string">"History"</span>,<br>        <span class="hljs-attr">"numNonAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"amContainerLogs"</span>:<span class="hljs-string">"http:\/\/datanode2:8042\/node\/containerlogs\/container_1558964977321_0002_01_000001\/hadoop"</span>,<br>        <span class="hljs-attr">"allocatedVCores"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"diagnostics"</span>:<span class="hljs-string">"Task failed task_1558964977321_0002_m_000004\nJob failed as tasks failed. failedMaps:1 failedReduces:0\n"</span>,<br>        <span class="hljs-attr">"name"</span>:<span class="hljs-string">"N\/A"</span>,<br>        <span class="hljs-attr">"progress"</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">"finishedTime"</span>:<span class="hljs-number">1559543043050</span>,<br>        <span class="hljs-attr">"user"</span>:<span class="hljs-string">"hadoop"</span>,<br>        <span class="hljs-attr">"queue"</span>:<span class="hljs-string">"default"</span>,<br>        <span class="hljs-attr">"elapsedTime"</span>:<span class="hljs-number">41659</span><br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">"applicationType"</span>:<span class="hljs-string">"MAPREDUCE"</span>,<br>        <span class="hljs-attr">"finalStatus"</span>:<span class="hljs-string">"SUCCEEDED"</span>,<br>        <span class="hljs-attr">"trackingUrl"</span>:<span class="hljs-string">"http:\/\/namenode:8088\/proxy\/application_1558964977321_0001\/"</span>,<br>        <span class="hljs-attr">"runningContainers"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"clusterId"</span>:<span class="hljs-number">1558964977321</span>,<br>        <span class="hljs-attr">"vcoreSeconds"</span>:<span class="hljs-number">411</span>,<br>        <span class="hljs-attr">"preemptedResourceVCores"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"numAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"allocatedMB"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"id"</span>:<span class="hljs-string">"application_1558964977321_0001"</span>,<br>        <span class="hljs-attr">"state"</span>:<span class="hljs-string">"FINISHED"</span>,<br>        <span class="hljs-attr">"amHostHttpAddress"</span>:<span class="hljs-string">"datanode1:8042"</span>,<br>        <span class="hljs-attr">"memorySeconds"</span>:<span class="hljs-number">619025</span>,<br>        <span class="hljs-attr">"preemptedResourceMB"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"applicationTags"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"startedTime"</span>:<span class="hljs-number">1559197897433</span>,<br>        <span class="hljs-attr">"trackingUI"</span>:<span class="hljs-string">"History"</span>,<br>        <span class="hljs-attr">"numNonAMContainerPreempted"</span>:<span class="hljs-number">0</span>,<br>        <span class="hljs-attr">"amContainerLogs"</span>:<span class="hljs-string">"http:\/\/datanode1:8042\/node\/containerlogs\/container_1558964977321_0001_01_000001\/hadoop"</span>,<br>        <span class="hljs-attr">"allocatedVCores"</span>:<span class="hljs-number">-1</span>,<br>        <span class="hljs-attr">"diagnostics"</span>:<span class="hljs-string">""</span>,<br>        <span class="hljs-attr">"name"</span>:<span class="hljs-string">"componet_code-jar-with-dependencies.jar"</span>,<br>        <span class="hljs-attr">"progress"</span>:<span class="hljs-number">100</span>,<br>        <span class="hljs-attr">"finishedTime"</span>:<span class="hljs-number">1559197986948</span>,<br>        <span class="hljs-attr">"user"</span>:<span class="hljs-string">"hadoop"</span>,<br>        <span class="hljs-attr">"queue"</span>:<span class="hljs-string">"default"</span>,<br>        <span class="hljs-attr">"elapsedTime"</span>:<span class="hljs-number">89515</span><br>      &#125;<br>    ]<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>对json对象分解后获得如下字段备用</p><table><thead><tr><th align="left">字段名</th><th align="center">含义</th></tr></thead><tbody><tr><td align="left">applicationType</td><td align="center">计算任务类型(mr spark)</td></tr><tr><td align="left">finalStatus</td><td align="center">最终状态</td></tr><tr><td align="left">runningContainers</td><td align="center">正在运行的容器</td></tr></tbody></table><p><img src="http://img.wqkenqing.ren/r7lvxr.png" srcset="/daydoc/img/loading.gif" lazyload alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/专题/数据建模/数据指标体系</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E4%B8%93%E9%A2%98/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/%E6%95%B0%E6%8D%AE%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E4%B8%93%E9%A2%98/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/%E6%95%B0%E6%8D%AE%E6%8C%87%E6%A0%87%E4%BD%93%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<figure class="highlight fix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fix"><span class="hljs-attr">指标</span>=<span class="hljs-string">数据+业务场景，能够指导业务制定下一步行动方案。</span><br></code></pre></td></tr></table></figure><p><strong>一个好的指标的应该能够解决以下5W的问题：</strong></p><h2 id="1、-初识指标与指标体系"><a href="#1、-初识指标与指标体系" class="headerlink" title="1、 初识指标与指标体系"></a>1、 初识指标与指标体系</h2><h3 id="1-1、使用场景（who、when、where"><a href="#1-1、使用场景（who、when、where" class="headerlink" title="1.1、使用场景（who、when、where)"></a>1.1、使用场景（who、when、where)</h3><p>解决指标的维度问题，通过定义维度可以明确指标所能支持的分析场景，例如【体脂率】可以支持性别、年龄段、地区等维度，那对应的可以支持对不同性别、年龄段、地区人群的分析。</p><p><img src="http://img.wqkenqing.ren/typora_img/d78ca97898e7389cfc605a08ab9a29e4.jpeg" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><h4 id="1-1-2、指标定义（what"><a href="#1-1-2、指标定义（what" class="headerlink" title="1.1.2、指标定义（what)"></a>1.1.2、指标定义（what)</h4><p>解决指标的计算口径问题，大多数情况下需要解决的是同名不同义、同义不同名的问题，如下图的销售额、上架数量两个指标所示。</p><h4 id="1-1-3、指标用途（why）"><a href="#1-1-3、指标用途（why）" class="headerlink" title="1.1.3、指标用途（why）"></a><strong>1.1.3、指标用途（why）</strong></h4><p>解决指标的逻辑问题，明确指标与指标之间的逻辑关系，如：销售利润=销售额-采购成本-头程税费-退税差额，毛利润=销售利润-呆滞计提-资金占用利息。</p><h3 id="1-2-指标体系"><a href="#1-2-指标体系" class="headerlink" title="1.2 指标体系"></a>1.2 指标体系</h3><h4 id="1-2-1、海盗指标法（AARRR"><a href="#1-2-1、海盗指标法（AARRR" class="headerlink" title="1.2.1、海盗指标法（AARRR)"></a>1.2.1、海盗指标法（AARRR)</h4><p><img src="http://img.wqkenqing.ren/typora_img/41ab4c78a27cf0f143973503178ba10a.jpeg" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><ol><li>Acquisition (获取)</li><li>Activation （激活）</li><li>Retention (留存)</li><li>Revenue  （收入）</li><li>Referral (推荐)</li></ol><p><img src="http://img.wqkenqing.ren/typora_img/8a6b93260f5efad8fa90c6013175369d.jpeg" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><p>这个模型对于流量→收入转化的指标建设有相当的指导意义，适用于大部分的互联网公司。但对于传统电商这类关注供应链、管理成本的企业来说，这套指标体系并不能覆盖所有的场景，因此我们主要采用的是第一关键指标法作为指标体系建设的理论基础。</p><h4 id="1-2-2、第一关键指标法"><a href="#1-2-2、第一关键指标法" class="headerlink" title="1.2.2、第一关键指标法"></a>1.2.2、第一关键指标法</h4><p>核心思想:在任意一个时间点，肯定只有一个最关键的指标,但随着业务的发展关注重点会有变化。</p><p><img src="http://img.wqkenqing.ren/typora_img/73c45235ef43a13578bccc1c41c764b4.jpeg" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><h4 id="1-2-3-指标体系搭建过程"><a href="#1-2-3-指标体系搭建过程" class="headerlink" title="1.2.3 指标体系搭建过程"></a>1.2.3 指标体系搭建过程</h4><h4 id="1-2-3-1-确定第一关键指标"><a href="#1-2-3-1-确定第一关键指标" class="headerlink" title="1.2.3.1. 确定第一关键指标"></a>1.2.3.1. 确定第一关键指标</h4><p><img src="http://img.wqkenqing.ren/typora_img/fcc3aa8d6aca9f55c9606a4130bb913e.jpeg" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><h4 id="1-2-3-2-划分模块"><a href="#1-2-3-2-划分模块" class="headerlink" title="1.2.3.2. 划分模块"></a>1.2.3.2. 划分模块</h4><p>​    <img src="http://img.wqkenqing.ren/typora_img/1e5a5f0b67f63d57e1522f050577d958.jpeg" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><h4 id="1-2-3-3-梳理指标逻辑关系"><a href="#1-2-3-3-梳理指标逻辑关系" class="headerlink" title="1. 2.3.3. 梳理指标逻辑关系"></a>1. 2.3.3. 梳理指标逻辑关系</h4><p>确定各个模块的核心关注指标之后，我们从第一关键指标开始，从上往下梳理指标之间的逻辑关系。</p><p><img src="http://img.wqkenqing.ren/typora_img/27c2b0aebbbc94160c43ed45616a1bde.jpeg" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><p>原文地址</p><p><a href="https://blog.csdn.net/rlnLo2pNEfx9c/article/details/117376482" target="_blank" rel="noopener">指标</a></p><h2 id="2、指标体系构建方法-四个模型"><a href="#2、指标体系构建方法-四个模型" class="headerlink" title="2、指标体系构建方法-四个模型"></a>2、指标体系构建方法-四个模型</h2><h3 id="2-1-构建数据指标体系的方法概括"><a href="#2-1-构建数据指标体系的方法概括" class="headerlink" title="2.1 构建数据指标体系的方法概括"></a>2.1 构建数据指标体系的方法概括</h3><p>数据指标体系建设的方法可以总结为三个步骤</p><ol><li>明确业务目标</li><li>理清用户生命周期及行为路径</li><li>指标分层治理</li></ol><p>以上三个步骤涉及了</p><ol><li>OSM(Object,Strategy,Measure)</li><li>AARRR(Acquisition,Activation,Retention,Revenue,Referral)</li><li>UJM(User, Journey, Map)</li><li>MECE (Mutually Exclusive, Collectively Exhaustive)</li></ol><p>四个模型</p><p><img src="http://img.wqkenqing.ren/typora_img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5piv54eV546L5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16.png" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><p><strong>1.OSM模型-明确业务目标，数据赋能业务</strong></p><p>OSM模型是 Object, Strategy, Measure的缩写。</p><p>数据服务于业务才能赋能业务，数据脱离业务，那么数据就会失去其价值。</p><p>我们在建立数据指标体系之前，一定要清晰的了解业务目标，也就是模型中的O,Object。换句话说，业务的目标也就是业务的核心KPI，了解业务的核心KPI能够帮助我们快速理清指标体系的方向。</p><p>了解业务目标方向之后，就需要制定相应的行动策略，也就是模型中的S,Strategy。行动策略的制定可以根据产品生命周期或者用户行为路径进行拆解，也就是把业务的核心KPI拆解到产品生命周期(AARRR)或者用户行为路径(UJM)当中，在整条链路当中分析可以提升核心KPI的点。</p><p>就需要我们制定较细的评估指标，也就是模型中的M,Measure。评估指标的制定是将产品链路或者行为路径中的各个核心KPI进行下钻细分，这里用到的方法就是麦肯锡著名的MECE模型，需保证每个细分指标是完全独立且相互穷尽的。</p><p>总结一下OSM模型的内容及其与AARRR,UJM,MECE模型之间的关系，OSM模型是指标体系建设的指导思想，理解业务KPI是OSM模型的核心；制定行动策略是实现业务KPI的手段，而AARRR和UJM模型是实现策略制定的方法论；制定细分指标是评估业务策略优劣的方法，而MECE模型制定细分指标的方法论。</p><p><img src="http://img.wqkenqing.ren/typora_img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5piv54eV546L5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16-20220428135830696-20220428140228425.png" srcset="/daydoc/img/loading.gif" lazyload alt=""></p><h4 id="2-AARRR模型和UJM模型–理清用户生命周期以及行为路径"><a href="#2-AARRR模型和UJM模型–理清用户生命周期以及行为路径" class="headerlink" title="2. AARRR模型和UJM模型–理清用户生命周期以及行为路径"></a><strong>2. AARRR模型和UJM模型–理清用户生命周期以及行为路径</strong></h4><p>AARRR和UJM模型都是路径模型，二者原理相似</p><p>不过AARRR是从产品角度出发，简而言之就是 拉新，促活，留存，付费，推广。</p><p>UJM是从用户角度出发，描述了用户进入产品的整个路径流程，即注册，登陆，加购，购买，复购链路流程。</p><p><img src="http://img.wqkenqing.ren/typora_img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5piv54eV546L5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16-20220428140235721.png" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><p><strong>3.MECE模型–指标体系分级治理</strong></p><p>指标体系分级治理</p><p><img src="http://img.wqkenqing.ren/typora_img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5piv54eV546L5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16-20220428140457796.png" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><p>示例：以GMV为例，用三个步骤，四个模型教会你搭建指标体系的方法 </p><p><img src="http://img.wqkenqing.ren/typora_img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5piv54eV546L5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16-20220428140643364.png" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><p><img src="http://img.wqkenqing.ren/typora_img/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA5piv54eV546L5ZGA,size_20,color_FFFFFF,t_70,g_se,x_16.jpeg" srcset="/daydoc/img/loading.gif" lazyload alt="img"></p><p>Q：指标分级治理拆这么细有什么用？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mapreduce组件总结</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/mapreduce%E7%BB%84%E4%BB%B6%E6%80%BB%E7%BB%93/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/mapreduce%E7%BB%84%E4%BB%B6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="mapreduce组件总结"><a href="#mapreduce组件总结" class="headerlink" title="mapreduce组件总结"></a>mapreduce组件总结</h1><a id="more"></a><p>相关组件大致有</p><ol><li>Inputformat</li><li>Inputsplit</li><li>ReadRecorder</li><li>mapper</li><li>Combiner</li><li>Partioner</li><li>Reduce</li><li>GroupComparator</li><li>Reduce</li></ol><h1 id="shuffle"><a href="#shuffle" class="headerlink" title="shuffle"></a>shuffle</h1><p><img src="http://img.wqkenqing.ren/2019-03-19-15-39-59.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-03-19-15-39-59"><br><img src="http://img.wqkenqing.ren/2019-03-19-16-46-06.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-03-19-16-46-06"></p><figure class="highlight golo"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs golo">shuffle 被称为mapreduce的核心,一个真正让奇迹发生的地方.但它到底是什么呢?简练的讲,它就是 <span class="hljs-keyword">map</span> out 到 <span class="hljs-keyword">reduce</span> <span class="hljs-keyword">in</span> 这段过程中对数据的处理过程.<br></code></pre></td></tr></table></figure><p>shuffle过程中主要发生的操作有,Partion,Sort,spill,merge,copy,sort,merge.(还有可能有combine操作)</p><p>具体流程是<br>map out后,Collector 对out后的数据进行处理. 数据将会写入到内存缓冲区,该内存缓冲区的数据达到80%后,会开启一个溢写线程,在磁盘本地创建一个文件.如果reduce设置了多个分区,写入buffer区的数据,会被打上一个分区标记.通过sortAndSpill()方法进行指对数据按分区号,key排序.最后溢出的文件是分区的,按key有序的文件.若buffer区中的20%一直未被填满,buffer写入进程不会断.但若达到100%,Buffer写入进程则会阻塞.并在buffer区中的数据全部spill完后才会再开启. (buffer区的内存默认是100M),spill过程中,若设置过combiner.则会对数据先进行combiner逻辑处理,再将处理后的数据写出</p><p>spill完成后则会对本地的spill后的文件进行Merge.即把多个spill后的文件进行合并,并排序.最后会行成一个有序文件</p><p>当1个Map Task 完成后,reduce 就会开启copy进程(默认是5个线程).这个过程中会通过http请求去各taskTracker(nodemanager),拉取相应的spill&amp;merge后的文件.<br>当copy完成后,则又会对数据进行merge.这个过程中同样有个类似map shuffle 中的buffer 溢写的阶段. 这个过程同样会触发combiner组件.这里的merge数据源有三种</p><ol><li>memory to memory</li><li>memory to disk</li><li>disk   to disk<br>默认1是不开启的.</li></ol><p>copy phase 完成后,是reduceTask 中的 sort phase<br>即对merge 中的文件继续进行sort and group .</p><p>当sort phase 完成.则开启reduce phase .到此shuffle正式完成.</p><p>##二次排序</p><pre><code class="hljs"></code></pre><p>mapreduce 常见的辅助排序</p><ol><li>partitioner</li><li>key的比较Comparator</li><li>分组函数Grouping Comparator</li></ol><h2 id="join"><a href="#join" class="headerlink" title="join"></a>join</h2><p>map join ,semi join ,reduce join</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> bigdata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kafka</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/kafka/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/kafka/</url>
      
        <content type="html"><![CDATA[<p>kafka-topics.sh –create –zookeeper localhost:2181 –replication-factor 1 –partitions 1 –topic sparkstreaming<br>kafka-topics.sh –create –zookeeper localhost:2181 –replication-factor 1 –partitions 1 –topic flumetest</p><a id="more"></a><p>kafka-console-producer.sh –broker-list localhost:9092 –topic flumetest :创建生产者</p><p>kafka-console-consumer.sh –bootstrap-server namenode:9092  –topic  flume-ng</p><h1 id="Kafka相关小结"><a href="#Kafka相关小结" class="headerlink" title="Kafka相关小结"></a>Kafka相关小结</h1><h2 id="kafka-相关指令"><a href="#kafka-相关指令" class="headerlink" title="kafka 相关指令"></a>kafka 相关指令</h2><p>kafka-server-start.sh config/server.properties &amp; 启动<br>kafka-topics.sh –create –zookeeper localhost:2181 –replication-factor 1 –partitions 1 –topic topic_name  :创建topic<br>kafka-console-producer.sh –broker-list localhost:9092 –topic topic_name :创建生产者</p><p>kafka-console-consumer.sh –bootstrap-server localhost:9092 –topic topic_name :创建消费者</p><p>kafka-console-producer.sh –broker-list namenode:9092 –topic sparkstreaming</p><p>删除group</p><p>kafka-consumer-groups –bootstrap-server 192.168.10.100:9092,192.168.10.101:9092,192.168.10.102:9092  —group traffic_history —delete</p><h2 id="kafka-java-api"><a href="#kafka-java-api" class="headerlink" title="kafka java api"></a>kafka java api</h2><p>kafka 虽然搭建较为简单,但想要对针它编程体验还是有些问题.初步使用下来明显感觉对版本的强约束性.以我线上版本</p><p><img src="http://img.wqkenqing.ren/2019-03-12-11-02-43.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-03-12-11-02-43">为例,我java项目对应的版本则是</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>&lt;dependency&gt;<br>            &lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;<br>            &lt;artifactId&gt;kafka_2.10&lt;/artifactId&gt;<br>            &lt;version&gt;0.8.1&lt;/version&gt;<br>        &lt;/dependency&gt;<br>        &lt;dependency&gt;<br>            &lt;groupId&gt;org.apache.kafka&lt;/groupId&gt;<br>            &lt;artifactId&gt;kafka-clients&lt;/artifactId&gt;<br>            &lt;version&gt;0.8.2.1&lt;/version&gt;<br>        &lt;/dependency&gt;<br></code></pre></td></tr></table></figure><p>以上版本搭配经由我亲测通过</p>]]></content>
      
      
      
        <tags>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据分享</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E5%88%86%E4%BA%AB/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="开头语"><a href="#开头语" class="headerlink" title="开头语"></a>开头语</h2><p><code>工欲善其事，必先利其器</code></p><a id="more"></a><p>本次分享,是我在公司的第一次分享,我考虑后,将本次分享的主要内容分为了三大部块.先是针对相关基础组件分类介绍.再介绍下通过对这些组件进行组织配搭的大数据基础环境架构.再结合我的一些经历,为大家介绍下相关的应用与产品落地.</p><h2 id="技术栈简介"><a href="#技术栈简介" class="headerlink" title="技术栈简介"></a>技术栈简介</h2><ul><li>数据采集</li><li>数据存储</li><li>数据治理(清洗&amp;处理)</li><li>数据应用</li><li>产品落地</li></ul><p>我又根据不同组件的特性将他们分</p><ul><li>采集类</li><li>存储类</li><li>计算处理类</li><li>传输类</li><li>管理类 </li><li>其它类</li></ul><p>下面开始具体介绍</p><h2 id="采集类"><a href="#采集类" class="headerlink" title="采集类"></a>采集类</h2><p>数据源:</p><ul><li>日志</li><li>业务数据</li><li>公网数据(爬虫)</li><li>文本数据</li><li>出行数据(gps,手机定位等)</li></ul><p><img src="http://img.wqkenqing.ren/2019-04-15-10-36-53.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-15-10-36-53"></p><ul><li>sqoop flume crawler datax kettle  elk</li></ul><ol><li>Flume(水槽) 是 Cloudera 提供的一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统。Flume基于流式架构，灵活简单,可拓展</li><li>Sqoop是一个在结构化数据和Hadoop之间进行批量数据迁移的工具，结构化数据可以是Mysql、Oracle等RDBMS。Sqoop底层用MapReduce程序实现抽取、转换、加载，MapReduce天生的特性保证了并行化和高容错率，而且相比Kettle等传统ETL工具，任务跑在Hadoop集群上，减少了ETL服务器资源的使用情况。在特定场景下，抽取过程会有很大的性能提升。</li><li>crawler , jsoup ,httpclient, nutch 等.</li><li>elk  集中式日志系统 ELK 协议栈详解<br><img src="http://img.wqkenqing.ren/2019-04-15-10-11-16.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-15-10-11-16"></li></ol><hr><h2 id="存储类"><a href="#存储类" class="headerlink" title="存储类"></a>存储类</h2><ul><li>hdfs</li><li>hbase</li><li>hive</li><li>mongdb</li><li>redis</li><li>RDBMS</li></ul><h3 id="hdfs"><a href="#hdfs" class="headerlink" title="hdfs"></a>hdfs</h3><pre><code class="hljs">* 分布式文件存储系统* 提供了高可靠性、高扩展性和高吞吐率的数据存储服务* hdfs典型结构：物理结构+逻辑结构* 文件线性切割成Block：偏移量（offset）* Block分散存储在集群节点中* 单一文件Block大小一致，文件与文件可以不一致* Block可以设置副本数，副本分散在不同的节点中* 副本数不要超过节点数量* 文件上传可以设置Block大小和副本数* 已上传的文件Block副本数可以调整，大小不变* 只支持一次写入多次读取，同一时刻只有一个写入者* 只能追加，不能修改</code></pre><p><img src="http://img.wqkenqing.ren/2019-04-15-11-12-40.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-15-11-12-40"></p><h3 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h3><p>Base是一个构建在HDFS上的分布式列存储系统；<br>Base是基于Google BigTable模型开发的，典型的key/value系统；<br>Base是Apache Hadoop生态系统中的重要一员，主要用于海量结构化数据存储；</p><p>大：一个表可以有数十亿行，上百万列；无模式：每行都有一个可排序的主键和任意多的列，列可以根据需要动态的增加，同一张表中不同的行可以有截然不同的列；面向列：面向列（族）的存储和权限控制，列（族）独立检索；稀疏：空（null）列并不占用存储空间，表可以设计的非常稀疏；数据多版本：每个单元中的数据可以有多个版本，默认情况下版本号自动分配，是单元格插入时的时间戳；数据类型单一：Hbase中的数据都是字符串，没有类型</p><h4 id="openTSDB"><a href="#openTSDB" class="headerlink" title="openTSDB"></a>openTSDB</h4><p>基于Hbase的分布式的，可伸缩的时间序列数据库。<br>主要用途，就是做监控系统；譬如收集大规模集群（包括网络设备、操作系统、应用程序）的监控数据并进行存储，查询。<br><img src="http://img.wqkenqing.ren/2019-04-15-11-27-46.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-15-11-27-46"></p><h4 id="solr-amp-Phoenix"><a href="#solr-amp-Phoenix" class="headerlink" title="solr &amp; Phoenix"></a>solr &amp; Phoenix</h4><p>二级索引</p><h3 id="hive"><a href="#hive" class="headerlink" title="hive"></a>hive</h3><p>ive 是一个基于 Hadoop 文件系统之上的数据仓库架构。它可以将结构化的数据文件映射为一张数据库表，并提供简单的 sql 查询功能。还可以将 sql 语句转换为 MapReduce 任务运行。<br>底部计算引擎还可以用用Tez, spark等.<br><img src="http://img.wqkenqing.ren/2019-04-15-11-36-43.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-15-11-36-43"></p><h5 id="Impala"><a href="#Impala" class="headerlink" title="Impala"></a>Impala</h5><p>Impala是Cloudera公司推出，提供对HDFS、Hbase数据的高性能、低延迟的交互式SQL查询功能。</p><ul><li>基于Hive使用内存计算，兼顾数据仓库、具有实时、批处理、多并发等优点</li><li>对内存依赖大,稳定性不如hive</li></ul><p>相比hive数据仓库,impala针对的量级相关少些,但会有效率的提升.但一般来讲,数据仓库一类需求对时间上的要要求一般不会太高,所以常规方式一般就符合大多数需求.</p><h2 id="计算处理类"><a href="#计算处理类" class="headerlink" title="计算处理类"></a>计算处理类</h2><ul><li>mapreduce</li><li>mapreduce on oozie ,on tez </li><li>spark </li><li>flink</li></ul><h3 id="mapreduce"><a href="#mapreduce" class="headerlink" title="mapreduce"></a>mapreduce</h3><p>Mapreduce是一个计算框架，既然是做计算的框架，那么表现形式就是有个输入（input），mapreduce操作这个输（input），通过本身定义好的计算模型，得到一个输出（output），这个输出就是我们所需要的结果。我们要学习的就是这个计算模型的运行规则。在运行一个mapreduce计算任务时候，任务过程被分为两个阶段：map阶段和reduce阶段，每个阶段都是用键值对（key/value）作为输入（input）和输出（output）。而程序员要做的就是定义好这两个阶段的函数：map函数和reduce函数。</p><p>分布式计算；<br>移动计算而不移动数据。<br><img src="http://img.wqkenqing.ren/2019-04-15-11-59-56.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-15-11-59-56"></p><h3 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h3><p>相比一二代计算引擎,在兼并了一二代的特色之外,还引放了流计算这一能力,还丰富了计算函数.<br>其中比较有代表性的主要就是spark&amp;storm.<br>也就是说这代计算引擎兼具无边界数据与有边界数据同样的处理能力.同时还具有DAG特性.<br>这里主要介绍spark</p><p>spark主要组成有以下</p><ul><li>spark-core</li><li>spark-streaming</li><li>spark-sql</li><li>spark-mlib</li><li>spark-graphX。</li></ul><p>spark-core是一个提供内存计算的框架,其他的四大框架都是基于spark core上进行计算的,所以没有spark core,其他的框架是浮云.<br>spark-core的主要内容就是对RDD的操作<br>RDD的创建 -&gt;RDD的转换 -&gt;RDD的缓存 -&gt;RDD的行动 -&gt;RDD的输出</p><p>spark-streaming中使用离散化流（discretized stream）作为抽象的表示，叫做DStream。它是随时间推移而收集数据的序列，每个时间段收集到的数据在DStream内部以一个RDD的形式存在。DStream支持从kafka，flume,hdfs,s3等获取输入。DStream也支持两种操作，即转化操作和输出操作</p><p>spark-sql<br>Spark SQL 提供了查询结构化数据及计算结果等信息的接口.<br>查询结果以 Datasets and DataFrames 形式返回</p><p>…</p><h3 id="flink-blink"><a href="#flink-blink" class="headerlink" title="flink/blink"></a>flink/blink</h3><p>略</p><h2 id="传输类"><a href="#传输类" class="headerlink" title="传输类"></a>传输类</h2><h3 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h3><p>Kafka是分布式发布-订阅消息系统,一个分布式的，可划分的，冗余备份的持久性的日志服务。它主要用于处理活跃的流式数据。日常中常与spark-streaming结合实用,为其提供无边界数据</p><p><img src="http://img.wqkenqing.ren/2019-04-16-15-06-25.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-16-15-06-25"></p><h2 id="管理类-Hue-cloudera-manager"><a href="#管理类-Hue-cloudera-manager" class="headerlink" title="管理类 Hue cloudera-manager"></a>管理类 Hue cloudera-manager</h2><p>ue与cm 都是由cloudera提供,后面cloudera将hue开源给了apache.如果基础集群环境是采用的是开源自主搭建,可考虑引入hue.另一些大数据服务公司,有集成打包自己的一些大数据产品,如cdh等.但这些服务收费,涉及到成本问题.所以如何选用,需要相关斟酌.</p><h2 id="其它类-zookeeper-yarn等"><a href="#其它类-zookeeper-yarn等" class="headerlink" title="其它类 zookeeper ,yarn等"></a>其它类 zookeeper ,yarn等</h2><p>zookeeper在集中基础环境中主要作为配置分享中心,与kafka,hbase等组件集成.yarn则作为资源管理组件,可以与mapreduce ,spark等集成</p><h2 id="各类组件架构"><a href="#各类组件架构" class="headerlink" title="各类组件架构"></a>各类组件架构</h2><p>以上,已经大致介绍了各类工具,基本了解了相应的特性和使用场景,而根据它们的特性,进行合理的配备,架构,从而实现一个功能全面,稳定的大数据环境.</p><p>于我个人经历与平时了解来讲,一般的架构主要如下<br><img src="http://img.wqkenqing.ren/2019-04-17-09-23-07.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-17-09-23-07"><br>另:<br><img src="http://img.wqkenqing.ren/2019-04-16-10-42-08.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-16-10-42-08"></p><p>总得来说,各类组件供选型一般来讲都不是单一的.所以,我们的大数据环境各部份组件都是插销式可插拔的.所以不同公司可能不一而同,具体看自身需求和实际情况.比如上图中的storm流式计算模块,就可以替换成spark-streaming等.</p><p>通过对上图的架构的拆解,再组合,可能还会有以下组织架构.</p><p>数据仓库<br>可以理解为上图中间部份.作为一个数据集市的存在,算作数据中心的一部份.</p><ul><li>ODS：是数据仓库第一层数据，直接从原始数据过来的，经过简单地处理，比喻：字段体重的数据为175cm等数据。</li><li>DW*：这个是数据仓库的第二层数据，DWD和DWS很多情况下是并列存在的，这一层储存经过处理后的标准数据，比喻订单、用户、页面点击流量等数据。</li><li>ADS：这个是数据仓库的最后一层数据，为应用层数据，直接可以给业务人员使用。<br><img src="http://img.wqkenqing.ren/2019-04-16-11-01-33.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-16-11-01-33"></li></ul><p>星型模型</p><p>星型模型中有两个重要的概念：事实表和维度表。<br>事实表：一些主键ID的集合，没有存放任何实际的内容<br>维度表：存放详细的数据信息，有唯一的主键ID。如上面的关键词表、用户表等等。<br><img src="http://img.wqkenqing.ren/2019-04-16-11-04-52.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-16-11-04-52"></p><p> 数据中心:<br>概念相对更大一些,可能即作为具体平台产品集合,也可能是一个团队行政划分.总得来说,是如</p><ul><li>大数据基础平台</li><li>数据仓库</li><li>DMP平台</li><li>相关应用平台如推荐系统,报表系统,可视化平台等.</li></ul><p>数据中台:<br>这个是由阿里于15年率先提出.主导思想是大中台,小前台.这块暂无特别明确的解释说法,但现在也有不少公司效仿.我个人从它的主导思想”大中台,小前台”的理解是,这个可能是体量更大,壁垒更少的一个数据集成体.比如阿里系的旗下公司,数据流都会归集到中台,同时阿里系下的公司也能获得不仅自己公司数据中心归集的数据反馈,还能获得阿里中台整合后流出的反馈数据.</p><h2 id="应用落地"><a href="#应用落地" class="headerlink" title="应用落地"></a>应用落地</h2><h3 id="公共服务"><a href="#公共服务" class="headerlink" title="公共服务"></a>公共服务</h3><ul><li>交通出行<br><img src="http://img.wqkenqing.ren/2019-04-16-16-15-42.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-16-16-15-42"></li><li>智慧城市</li><li>…</li></ul><h3 id="产品应用"><a href="#产品应用" class="headerlink" title="产品应用"></a>产品应用</h3><ul><li>用户画像</li><li>征信模型</li><li>推荐系统</li><li>精确营销</li><li>前沿科学(无人驾驶,人工智能,AR等)</li></ul><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>以上,就是我今天分享的主要内容.今天的主题是”器”,但对这些工具的讲解浅尝辄止,在实际的开发实战中涉及的情况是更为复杂,需要掌握的内容更多,深度也更深.我这里主要是想抛砖引玉,为大家提供一点自己的理解,若能有所帮助,不胜荣幸.</p><p>另外,工具始终是工具,菜刀再利也要厨子好,才能做好菜.所以如何利用这些工具,与我们的业务结合,实现我们想要的价值,这是我一直在探索的,也愿与各位同仁一同前行.</p><p>附上图中涉及到的技术栈</p><p><img src="http://img.wqkenqing.ren/2019-04-17-09-09-00.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-04-17-09-09-00"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 日常总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clickhosue集群版实录</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E7%BB%84%E4%BB%B6/clickhouse%E9%9B%86%E7%BE%A4%E7%89%88%E5%AE%9E%E5%BD%95/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E7%BB%84%E4%BB%B6/clickhouse%E9%9B%86%E7%BE%A4%E7%89%88%E5%AE%9E%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="6bf41f2f0b9253b23fa3abe0a9d195ce6ec56e16a4c12a0a52709ed536f9c21b">f29c680708acd02cbb1b6cceaba0619209331c91f8b9a83bcf29f00aef115e6b907bc849433922a5198b1819e76959d38de0f3239e78b42b8ff7602f8e3cd6d9b0bc629f718fdef7813e795295d0d872e2dfbcc2990248c75d4dae979b4775bf7dc26c8ba362ec3235ee1eedd11bad961833ace53a548fcb3682ce5ec7318659c95a1658dfb434a7e3a3effb03b79b8101cc698136d366b1b802897ec851efd1f4471b612bf3103ca221231c8ca334a1d6acb23fb8ad88c35ab433516bb90b073e980d5c675b71105b28ae19c5f1c1430ba1a55660a4aef6916ed73637aae13634de589eb2d0b7ce00262951e9ab02099ccbedaf8a81e0b282117392f377a5c7e8aa2835933e90dc41bf602ddfac8a8696bb78604171a9f8c3c7b4f91da61760d73d932dfc7300012bd5d187fa219e01cc645cb0a06cac7057effa80daef41c3df9a2c275f13d44a351dc8418975571ec0e8112c4ba12f26a5c17db9667a6c5ab737b1a574161d05d1ae37ce5e4e5e58960586efc4c53139d88faadba8342327a67e60f2f859e3c72ce8529aa78bad3af17bfae76962cacd5d292c945f021499970c1b8019c02d061f7b380782b054880d215ff9ea212636a6f97a9b89f6a8f7cb553ac58de49dd9de135c8293a2cdd1755fa67f2501a341046bbba962c2b22a95b6e4d30f26f8d53ffa8772ccec168a6f81f98abc18b02573190da2a5c63f3399f27aada48eec528803e3e38d5ae1bd008b689d766a1855e5a579596e7fa8433f9613700bde2069ca63111b469ce7df086bae73952b0ef17a01799af22844ae83029d91c5e1aa9d3f1d7a2fd41cbbeef66a6b1ab2e6685cdaf820df511c59da0fcb0559b6c7b391f5cd1f89ee4df55adcb25ce3dc9254437a293938c541a8e73b0a457764af4407184e7b9aba05a229da47ce706bff764f2ce5d3e1504380fea45c21c212fb29393abc3203513d35ae4dbe0442371519eb45ae7a821f06af1a1a7721baa293a131daf86b84007ac03f907c61f68b31d6b3c946d3badb35497e95bd30a7f33cc1cc914cb8f1f756eb2ffc2ce6491375298926afb77eb35678b9fff59551432c817d2217fcc0fd9b8e88fade2be8671507804ba1039ff983c38e93766f1b5a87d4e62f545279b661fdf60e61cf34b40d342a72c99ce5b476b6cb6353c97927bdcf03d1328b1c372312d7cf418de6ed226bd4a73f42fee4564cc9a23eaa5dde65d9ab98b7b78306d06ffcdb2b62c02ef03fefde0e1efdae6007efa70aebfd15cfc341c38d783c50741f83cd6f882b8be4a3a57fd1f2d25f1846c015b00a7d853cdebac49d916c59b94775f41f067321f3d630310484c1ebd105f4b546df0d956ac243a3d23bde09df574ad612e17e7bae2d7247da76efed6d377eb24a0f44d9060b4a8bfd07a7fb7002b60d5d60d6ed7167bcfb5e584f4ecd18f5a6058aefeee567cd31eac229c0aed9d4a04b850c88d934ef214fdf12374436d16d8d76a7c91ae6d3fd0975532fc966ee022c25fa0a60b64108d120b0f099a039b6c00058fd59034b63cceaf70c9f842712d955cea76004e765f50e808ec25bae87e4c8bdc59221e62459c5ecc5dee9b8af69ac49ae9d5642b4083206182eea9c8e1f8c4d0b1c75a5c4be43b7599a477b5720b68b55548f24119901f55d948991524e1ec594f43ad62aa7eede4b636477066d17f90ba35ef5bd6803f9b0e54914213d836df98530d61e4ef2700e721ae40e3078d51ef18b43df73caf5253a91a5a1285b5522fa880106fe6b517a9421d895ce504597ab23c7e8518b4daffb7cffb2293731e0bd59d46ac18a6cb24dc41963e8aa341332f93ce218341063c74cebdba157e2eeb970732dc9db8906e84a7712ba19e876dd8cfdac06c9f9b5fbc419fae06eacddd54a065ce94ae9b43a621e45d82b2cc50b415e17357d2cc2d60e7a48feee7fbebf0462049cb2d7a713a67578dfbb2e0bdf0c4d28b10600d77ad3e6a068c9c8bca381489dcaac264d9679576e11d6da41f33effd6e9e2fae57a0c376b52514009fbc2bea30905ac378facee5e743222d9e48e9d5ac4cb6960527e3a045ec7813f7201791c1e15b676a9999d888b586969c8963d309a07f026274757154d555eee60a53fe7d51d00cfdf173f6f1989001d399cdf64e2d176c774f4a187c06671455fdad6ef480bb70f38364a488770433d36f65061bff26cee2d93df3f75bb467e8c590f7cb8614ec9bfdaf8404cfba72dd3cb44c3dd16bf10a8e3b3e32c389a26ff27854484550f338e91befc9c68d1758d5bf152cc68fef91bb7d2203bd122e647a8cb07f8585b6ad55d3b0be0dc91ce086575ac1557883e8990831c3ea8560ec3b16c9bcdb2d6188d9acc83499b03677dd645444fd12453bdc77e00d7f690a0a64f5bd1f34be6304ec8b89806daa19d3b770f9f397d2e43450f9618beea5fd8620c00840a4e2988de4e565ee40c351494bd25d6c8fedbb969c0bd7a232c1415ab82bdf02eccca1fc8b5d68d2255b8919e2a31277134555ff9b3006ae1ed4e80abab82fd5d2727799ab90efa88ab33ac4aa28c4e30d6be3ef0d301f9307125e57921fe20429d644241c7d7fc3ab10cd3d5b06ef58bf0647282b1288b956b38d47de99dc55ce69897fc04888ce3f3db29e16a27773671070f7e0d464b2ae5d45f6c29378ad60a21edb8f07e9731a9ee88e268fcf006b22aba9a34212749c253d901949d2fe92803622d402d5bbdd521433c9be125c8db92b5718fe815ff379cc2aa21abb89bb8eb3d52d15396e6eddd75462d26fb7782f5f87d9c68f41588a8ee2be9915087802549ff504e924ca72e047584feb3557c01247bf3858f94326912528c61553d91628a3ef91ce3b894a5058370f9d83bef744ae85d4c17e5c1aeef2dc12717c659d83688eca23fb1f6a2befa38f0eb021d0db7a5cf38213937db4e7f890c80f23b0b3b644ab349a14306f5f3c3d6339b06e0648f6bddc76c7a1c7df2a882f8a5f8e87be09d6abc6b1dc764bef429fc443e3652c3c2a604b10c2a8a900a0b7c1fcccda317840786d75c8a67861184973740d03811e743e8f4e2c37c7c2aedcc3f2b239306b8faf8502d6b52b8f9bb4737a8bef4c17a01c5831a3bf3a60806384f30473e07cfc2870dea0f9fdd98f5f67e5f915d4e26d2304a468d849348c87e3507f8659d92f0647b7dab3dc2c4e1ea1ec0c4fc62e2f9e5a1eece9bee02577a805206896e63c91cb360c6e9f565fd36dc6ffbdce619125eefb51d62fda3956e4c5faa1169933be46ea218ab03134e30148f8db1386defaa39c6e998ec299420323793c7780a4a80689b0e5bcd3d04da6801c776166c915433bb85749713578b21c22bcc542b1eeefc360f749f5063694359d480458f254eff81647aa84bf91362751af37f57d1792370e3993503ccbe1c6441da892cc44ad82f779efa4f7103407f9a6a60679e44af577d38809eaa99bddf3b6e8d0698519c3f1ad52c6d83177702193b3188f0b8cd1bffc3a13f5a85268336f33b73aa5b487de9db9da2ca74a840d7081706e7324786948a3fde1b6c0220a0298de1a54110968e5cdb04e10012aa890e21c2b6e6309349c15c9c9b0dffb35132543846b32b1ca4161e00647a1d866b11a2549557791260207497c7bb6623dbb208c5a8e50ce0594805739a47038a951b06f9e0ffb84dcad1299c25c7de0cd94d10aa1c59ad71582ee3c90087f57c53857f4647690558ea1bbd84f6c37147f0919f3a8d6688cee07f4614b15ebce8a8b5a6da71ccfbaac0377ff48533070918ea129fda05b7eb63f94f83440acee0209e1202e7ef67a14ac98ca17b693140a8dacebf195f54e19d7b42f40d199d4a90230f415fcdb5c3afe0098e260c54c6e905b1809f4be915e57c0816b123d943c2c423f1a78e4907307b7133d832b166124f1336348f46bcdf8b3004026617d002cd09c6b9cdd08f52447ae9ac0482f436b7b47c1e8894c46c1228aac3bc4bf9a166f8bec441f42451cedd187de04325d8dff6c4202e721b40c05966274bb6ec7ee0225e44c9eca3426c68f3016f0d82410e29cf17935988c7e5c16e3375f554aaf8865b2f43150228d9a70dab5998f22bbf03da0fae3c7e66876f3c814c7cedabb72b243dc8be013b2b3ac367e15421572a8e28b73f69fa0a9b33cc4007530e1137c2f143f00aba6b5a521b0f5beffe10811dd9f0283c1abdb825654f1e67a94eb7fad917e7ad3879850b5398b9a24243182c48f55dee8f451cf9a1deb887868d43d8bb9d817c7c3ede652294e37d527c5606584f1be5b57acd829e6a51a650de4c4fd39dfb91be801b7400e0d308b2452629e661de71e2b030ffc6dd0f9e48e25334b2aec4b1fa10cf5974dfb9bfd05c340b5ae59041cecfcf9a28d183cd8641ec76c713cc22c2837b1359bf1381300c2848e9e38f6825fc39cfe7f30a0b25eec8abbbca81c61fd2900964e1ba0b60282c8d18a4190a3e37d54547dbc4066cb1dcea7101faec41dcde9c4c51bcb6667f7dad0ae091f1e40840163c938d9b5b55686593a6</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> clickhouse、数仓 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数仓架构设计图</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E9%93%81%E5%9B%9B%E9%99%A2%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0/%E6%95%B0%E4%BB%93/%E6%95%B0%E4%BB%93%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%9B%BE/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E9%93%81%E5%9B%9B%E9%99%A2%E6%95%B0%E6%8D%AE%E5%B9%B3%E5%8F%B0/%E6%95%B0%E4%BB%93/%E6%95%B0%E4%BB%93%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="bc90340080222d6cbf7bf9bb2b6bf99a5a674ff089bc83b093516303859d1404">f29c680708acd02cbb1b6cceaba061928a1d1376ff6b668541f3e6802bbc156c4461fce1b965c510af4b1604511eb981cf4314464352e3073e5aa009b75c422863962fe95ac5f08c4288306627017cc6315b0c48b6b042036505837b9d43df4edea670296b80e1ef5296df3307e68df2fe2e42c07f3cff42e4262b046539122b43af6dad859d6860c6830f13f55e12777e36e842b414116c8ae21e6a2107ffd5</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据仓库、架构设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CDH基础环境部署</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/CDH%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/CDH%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="e36ae171f30fb6247436bb122f80a624b4ca9359c10c865ba4e6605996fccd3e"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> cdh </tag>
            
            <tag> cm </tag>
            
            <tag> 数据中心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据基础平台建设思路</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="59e59b49b12085591524ab3df51a1a865b59b5b0f97d0feeb279ecf846ebe842">f29c680708acd02cbb1b6cceaba0619272de531e177edd19252cbc56b81bb0d2c16549492d7e0144c672bec04f66355435d5b577d39ea320bd017919ac556c43e966e3d9d5e94a55335dbf0cf3bf5164096a825efe80adbfeb5bf41d9349b81f6e5c56e1c7c1fc67b9371b0bca2745eddd58ab5bea369ba9e352816abbc59f409a0324c9dc65287c3115fcfc31f8c2dcdd2026097bedcfff09ed3c1f4b1ef9b002e4170eaf7cbb47739171dad94f6e9935cee25c5631e3f651d7c752390e87a5d2d3d2112ac36dc88b899f697b8fdc77a7e515594ddbfd68a39f7cae7b16baf63aa03ea111e97551c413794d98b47b72ed1e0a3be79bb0df676fe45f3e3b7b65977a67ce1d0e53027aaed03d40e0f7873654bd22dcbfc0ab54555551e66eb2abe2dbe27a5dc5e18942a1e5c12432d20aa7b7ab505ae521cc9c0f5da5eeca40e14428ca28f9aae2a25ba08a50ef4d824869a53d30e1a89fa4a00c0a35ab54ef7f3e6d9ac22b8be8aa85419db836b07371e6e853ba884a408b725e2cb8dc0e68f49855a456ab1907ca8b94b30b4efcc5586cd5474c8228961a155101aa68b91cc0c4bda1956b7283908f151388c0343e97cb030d5a86776901089748715d4efa181f43e637626582fca53961edcd89ea0ae1bb17341a8bb9812e82381580a8f9b522d1029b7c251187c88bbdc83d5e96968e3dce89311b8443a954c183513206059d222e8ec39188d32f8325dfe8800aeaf5dd6c2f8e108b20910d3fd02d069ffd27258592f66a25fbf1f0377404769acc018865ce37e6c101f41d52a9e0eaf7171dc511f74803a4673416f31a4f8194ecb72351dab35c51c2c752cdbd0f67e055248f68da778b0ae2ef870a3c9a9cfdde3e6722b327cd14414b50a573819836b212b493bdcb8a6f990caba8b0cae76433ae4fc06a20b54145c8a043f2fc1b68bbb544a66d9f32a8b80ef38f7bde0367ae4726a3d4828461304e648dc4ab6d367ed81bbebb03a2c38b129282936e2f90f5b1e1d135d935519fb800b7c45321861744b31bd0dafec70684ca4f25ebc128b8fa6a5042ba5f8767a665814771f9e5d0673f2d06b2db11458589088e2315fd2f4199fb4b629db4e360b86f424e09881edd7b4f2bad23aae5a776d72765f32ae9f568e001993a8fdec764c921491a5686a40098ac4c73fead7bdc707f0b63b715715bc52c8ca1c5e6d364d7024931f527dd4fcd326824f5449a827c4656b03e2888512c4d6a8ad0b087c539f9a0392820e9c222f9c6a343247cf38ad59f31243afe03c0ed0e695966e5390a6418aad6d7cbd450505654322d88a97923ec239081430c926b57a86f3f08865722cf54d695b689b7bf253fb5312ab32a65547d6a4501abf9419be3fb2eb78ffa8b4b1e4c29d208f6e3a1c5cf65bf2acf68c800e1c39fb8d3ab3f9e4a8f0c33b393f4aae1f689ceccfd217a01918bc463622d9f25b01203b4d84176e1b48714dd7885366aed5c9a846f5cfecde4eff9a45ed3aad65b91ced96f3580299478ea2317fd3f093604d0a05d6a35396715eb46d0167a31e21cb7754467bba74f84ad8c4efc93425dbf3c4cde6573aa683411f0002e4817dec0d71905b16e2fdd9be306e0fa57cc93b3b9ccb118fc580c20a11c77b0ce0fd63213169f19f4f9e34d6b40247c54a22d3287a74fbafbd5dfcd3a8e66741fac1ed6e847ad0141b1b8f08839752d22e5c6fb26161ac6327c9a8db8664deeed6b54aa824feb864e0ecc8763fa4bf894b9487d1a18d015c9e02f881d092c1c4e1147343c8e97a164cc51f4e534a30e08d9394c5fc551c66cbee92c3dab37a64590e4c50e5ee56d223739d01340951d1e12f391df995a8d3f24a0a79a5d825822b32cfa5a0a00fa142e990705a30437a6b66bf951ad822902f713aa4d0fa294292cb5ea048d162f9ba494735c70c4e2293fb40f0ab87d6caee3185a373c16e586718784fade4edd33a7495009a6ddfba0153510923c617faee85abe45689f39f19c1b788e8af1cf38591d980f220ef7b991d8a591403cc19f752d7d4f9195c97a6e20d169b7571ef86102050873f3045d1a7367670c9da48bd93d21824ffbd631645882c0e3663e90a8a961f770e459dd8f8dca1eea1b560f0474afeb6aa1debffabc478eebd8b8dbca4508504b53852ac46e0ca5023bb125abb30cc2592e0a4939202dc0784176349c29403907fc4bc0317633dd30fdc6911012635c72099194ea63cd25d348f310c0b37339c3c44e4293bddd80c86e8e4e0e0ea03b741e16efb0ee0e40e1039adc8ea00ea0af6d18b8c238b1010c435cee45600bdd69dc0a39a915ea1dce18b275b124a5277b15cf60947dd37c7a480a35348b24460459148cde6cb08e4351e18ea012545cb2fed8cf7eff10c997fc5781b385d01ea644e014cfd56f077f2ab54682d84670770f761175f32460f9f6e8dc16fa8f54e3829b6b917c66e37db3a693bcc0de6af81f4d091ff07bb7d85cfd639841f9da19498a2ff59a0cc658414ba4c3c8b1a0bcab4c2291a2c64fab05643b186f7db922608592c5ccfc91c7f89ce2db3a97dd2a4e5a64cf1c9ddbd0ed7bb977ad42673ce2627b30fc75b54815ce45a1fe3dac07ed4ce38ba021d50f4c7b4b01d3161a9b229756beca6b6ae34f556486482c4b80a10d6925e2e1624c492cd2e7cf5714c6416fe05504d7a03198625ee818b81faa5010cf11eb30e6dbca89587e3d7bf761a67b92323c71a18bd94602760d0ed9320c4ed12a48077f053991f5697896b1a48e7e7582b44cbed6959d3e08a93621e207a48bd9053d754d3cd55217d162131f735ff0fca1f96f762331fc1ea0043c059d988b7c27835df83cba7b0624a23ffa73c2ce079a59d08b309c4b1fba593dd162366f5595ee79988be721a02129a50a334016451bc9a84763fe3253b4d2bc96b4f3724f1342a953f3ccb86f8724317a279e8bd4f072823069e078805c3c8fbdedf95a94f36f2fa76f9c5cac38bcfa0d9c5eb34ae2c9f7c7f695d6d48e10d0beb40cfc2fcb82c5cdd8db3f397dfc26fa5c3b93d73fd6d85f7608eac5d0e64e03766b7c5fd80631a5939c8fba4ae847d01f5ec36b26be9c73caea801b18291493b851b22f6e9739dbf05538d641383e95a50fd3ecc6acdfe26ef8ee4177fa1ea952ba16c0ef5367e182223f70f4c992893e9c7be0a2dcd6b4a36623f316fa071ac12598da7cbee459dc04451d3ea94a15af3245a67d329c6a5d53f90a7c898018639374ae687af8219a875e286a67b6ff64274e7a80a6c0fca1dfa024ebd6f217587b8dd1ecfcf29e17bb18df788dd5d47917165c4ac7e3e62f83853305af5491f1e94e7e087549205e4a3357a717b4970f1a57273150d491d9dded1b89306f5c5ce061f50e6f3210caf9ee1dff891b37d64d3fd4d27f4b1469db3316b4db4d6a6bdba6c1c6bd1d34ddacd40ceb922a6bb60466e9cf32cb8a4fa2e3166d6f458923d84d8517ec2547fdd3ec2fe57f9cb92e244fef1b0039366f265c3dad488d44ed7c31b21d98d4fcafef4108579789b91c4ab74e9621f1a6f2185780378c10593ef356bc522369ddc7ea2ca3bc56ef4a6e121e29e2b435d880f37ada7b05c6b6afcb1a9a436396de5f6111ec7b3bf271c7745faf6fc36d34070e9d909423d45990693c27c2124da02cf1c9ed860df8c572096ebafc2fef822a0c6918e6ba454ed032ce7e0fc3287f69577ca3f08b6a3072ec5a455435f75d94956c159813873cfd45ec97b4f82b8cc27b514801011412d008372d82cac8b45be547aaeac4545a49eed12099422513f10b4e9cbd7edcaf281b8016f7951f92cd749c0d9e28735adf98d016803bc8045092ff00497610269c6514ad0bd4dc5984d97139eacf6884c5f6a713387f1aa5b367aa9f05f284d0f37d6b08bb1f3d102b74c5de5aaf077e8dacb693819558cb52e1fee4d576b82ee47ddfb9bed142092a3e5a904ef0d310a01778d52b1df30bcbcd1bd0adaba7d8eadf887f4bd1d6a1ebd65a066a9a1839eb4787dd2fd2e6efa2e32ef0ff88dbffee1464536b0bdb08611b7a6eb4a563eba27c216e488dea598f8ec5a0b1b9a0b504cf5f3c800bd20e00f4739cb88f8e3cb565a00fc4e3deba23d426fe97e1df91aeab3e9f77fb89921d614dff0e3ca4e1a22ef989c92a6078b05491975fcd5915a543a9ee987d432e21fb5b62afa4af6d8afb89ad0fac8bda0ed383c2c8023eb319ebb0ecda1052db55170c2db55df69260f25ff14714855d9c43536e906cee7879ef3042c64c34ec30ee6612bd03d89a9fd97190398d04521bac582e94648c20afc66ce94a08d608452e2bfd2338e6c99a465ee7d6c7b65b4c1e399edf7146515af97abb662e283c722bb9683b4440873c05d4764d2a1a3cc59bd372e8f19ec90aae4849c3c49becec95ff21e31798b486185c068510377a2e3667fb40928489ca00724460eb9832956c564b70ae4a3822ba8db469b9c10b506a349576c9a230ea233b3c308446fa2c203010def0a953f14fa7130d0f0fc65feda733414427244b8a61d810b4918ff9d58f55731b53cffae63536444f9fb5ffc81f5832a86549fd1d46c41a52751591f014987e5c30e688c14c86726792ae70cb8555f7be097d91cc952943a45ce0fb91de4d240594647af57faf69058c8765640bab020425cafd6ea5662c562f3b373f4fb5ab93865469a618aa35dc36523adf5c33d6838377880a6d5017b37ce5c3fa15ed8e4c181a8d4d6b17e83bf9ed873e97c8f61fed51c41b8fdf18c764ce79968e23905881259e96a10c41279ea9acb5d2a14475624e8d78f8c896bfc58baeea94a41351bfd649cff9f79fbeb3e248a68c7588465aa9ef971f64c016ce94887473171ea104d5910743d6f270d1952fe9ee764c100da6f87c59c0658773e342407bf58c412e044f94e63906b6708b05d31c52011370dc95d182d5296573acabbafb9f0a93d7cfa633e609e97dc888e89c56e491032ceaf3ead417bd71a805cd8284bfaa1bdb3dc40490af3c2fb6c3a10d78a4ae9b99dffdfc51e417857e8cd187d65ed542c384dc38d314c3fa9bbf39215d4fe17fe739ca618ade68e4eb0df8c4795ad8424788abdadf11f9261477165aefd74fafb4efe1b6f08b981a9f3db98bff9e2a55f275a3dc8f8c0b51e836b4dd4acb2e5a7d951554dfddfde716cba3a6e5739166caf7df97ddac2fde58b35525c229a22aa9411821aaaad5</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Flink集成安装至CDH</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/Flink%E9%9B%86%E6%88%90CDH/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/Flink%E9%9B%86%E6%88%90CDH/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><blockquote><p>集成flink至CDH中</p></blockquote><h1 id="CDH集中flink"><a href="#CDH集中flink" class="headerlink" title="CDH集中flink"></a>CDH集中flink</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>需要准备的相关内容有：</p><ol><li>java （已有）</li><li>maven （已有）</li><li>flink 安装包</li><li>制作parcel</li></ol><p>flink相关下载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">注：可不需要提前下载<br><br>flink下载地址：https:<span class="hljs-regexp">//</span>archive.apache.org<span class="hljs-regexp">/dist/</span>flink<span class="hljs-regexp">/flink-1.12.0/</span>flink-<span class="hljs-number">1.12</span>.<span class="hljs-number">0</span>-bin-scala_2.<span class="hljs-number">12</span>.tgz<br><br>parcel制作工具下载地址：https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/pkeropen/</span>flink-parcel.git（github提供的工具包）<br></code></pre></td></tr></table></figure><h2 id="flink镜像制作"><a href="#flink镜像制作" class="headerlink" title="flink镜像制作"></a>flink镜像制作</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs vala">cd /root/flink-parcel<br><span class="hljs-meta">## 修改flink-parcel.properties</span><br>vim flink-parcel.properties<br><span class="hljs-meta">## 再按图修改CDH支持版本</span><br><br><span class="hljs-meta">## 制镜像</span><br>./build.sh parcel<br><span class="hljs-meta">## 生成文件夹 FLINK-1.12.4-BIN-SCALA_2.11_build</span><br><span class="hljs-meta">## 制作yarn形式的csd文件</span><br>./build.sh csd_on_yarn<br><span class="hljs-meta">## 生成FLINK_ON_YARN-1.12.4.jar包</span><br><span class="hljs-meta">## 将FLINK_ON_YARN-1.12.4.jar 挪动至scm-server的 /opt/cloudera/csd 路径下</span><br>mv FLINK_ON_YARN<span class="hljs-number">-1.12</span><span class="hljs-number">.4</span>.jar  /opt/cloudera/csd/<br><span class="hljs-meta">## FLINK-1.12.4-BIN-SCALA_2.11_build 挪到至之前的/var/www/html/路径下，作为局域网安装源</span><br><br>mv FLINK<span class="hljs-number">-1.12</span><span class="hljs-number">.4</span>-BIN-SCALA_2<span class="hljs-number">.11</span>_build /<span class="hljs-keyword">var</span>/www/html/flink<br><br>cd  /<span class="hljs-keyword">var</span>/www/html/flink<br><span class="hljs-meta">## 创建成repo仓库</span><br>createrepo .<br></code></pre></td></tr></table></figure><p><img src="http://img.wqkenqing.ren/2021-05-27-14-28-35.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-14-28-35"></p><h3 id="cloudera-manager中添加flink"><a href="#cloudera-manager中添加flink" class="headerlink" title="cloudera manager中添加flink"></a>cloudera manager中添加flink</h3><p><img src="http://img.wqkenqing.ren/2021-05-27-14-38-15.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-14-38-15"><br><img src="http://img.wqkenqing.ren/2021-05-27-14-39-13.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-14-39-13"><br><img src="http://img.wqkenqing.ren/2021-05-27-14-39-49.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-14-39-49"><br><img src="http://img.wqkenqing.ren/2021-05-27-14-40-44.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-14-40-44"></p><p>出现flink parcel ，点击下载，分配、激活<br><img src="http://img.wqkenqing.ren/2021-05-27-14-41-04.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-14-41-04"></p><h3 id="添加对应服务"><a href="#添加对应服务" class="headerlink" title="添加对应服务"></a>添加对应服务</h3><p>这里在上面步骤中生成了 FLINK_ON_YARN-1.12.4.jar后添加到路径后，若在添加服务中看不到内容，则在这里要</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">## 重启cloudera-<span class="hljs-keyword">server</span><br>systemctl <span class="hljs-keyword">restart</span> cloudera-scm-<span class="hljs-keyword">server</span><br>## 重启agent<br>systemctl <span class="hljs-keyword">restart</span> cloudera-scm-agent<br>## 查看日志<br><br>tail -f /var/<span class="hljs-keyword">log</span>/cloudera-scm-<span class="hljs-keyword">server</span>/cloudera-scm-<span class="hljs-keyword">server</span>.<span class="hljs-keyword">log</span><br></code></pre></td></tr></table></figure><p>经过上述操作后，一般即可在添加服务中找到flink-yarn的添加选项<br>Tips:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><br>这里其实有一些暗坑，就是前面的选择cdh区间的操作中，要注意，即如图示进行配置，我这里是<span class="hljs-number">6.3</span><span class="hljs-number">.2</span>，则要配置成如上图才行。不然可能会出现cdh版本适配区间不一致的问题<br></code></pre></td></tr></table></figure><p>接下来，像正常安装cdh组件一样安装flink-yarn服务</p><p><img src="http://img.wqkenqing.ren/2021-05-27-15-23-31.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-15-23-31"></p><p>但要真的让flink服务成功添加还要进行一些参数配置和修改</p><ol><li><p>修改 Kerberos<br>因为集群中暂时还未集成Kerberos所以这里的配置内容要删除，不然，会出现启动问题。</p></li><li><p>添加hadoop环境变量</p></li></ol><p><img src="http://img.wqkenqing.ren/2021-05-27-15-26-53.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-15-26-53"></p><p>因为flink1.10后开始应该就不用再集中hadoop的包，而是直接配置hadoop环境变量或从1.11分支上拉项目，自己打包。</p><p>大致这里两个参数设置后，服务应该就能正常添加了。</p><p>添加成功后的效果<br><img src="http://img.wqkenqing.ren/2021-05-27-15-28-45.png" srcset="/daydoc/img/loading.gif" lazyload alt="2021-05-27-15-28-45"></p>]]></content>
      
      
      
        <tags>
            
            <tag> flink、CDH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/分享/数仓分享</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%88%86%E4%BA%AB/%E6%95%B0%E4%BB%93%E5%88%86%E4%BA%AB/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%88%86%E4%BA%AB/%E6%95%B0%E4%BB%93%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="905fd472ef35da112d4c3860513da0cd6f585120395296fa0b9a2a15083d92a9"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据仓库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/数据基础平台/数据集成/数据采集构建方案</title>
      <link href="/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E9%9B%86%E6%88%90/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2023/02/23/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E9%9B%86%E6%88%90/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="数据采集功能建设方案"><a href="#数据采集功能建设方案" class="headerlink" title="数据采集功能建设方案"></a>数据采集功能建设方案</h1><h2 id="一、数据采集功能块规划"><a href="#一、数据采集功能块规划" class="headerlink" title="一、数据采集功能块规划"></a>一、数据采集功能块规划</h2><p>数据采集</p><ul><li>采集任务信息页</li><li>新建采集任务<ul><li>配置采集任务信息<ul><li>选择类别<ul><li>批量数据采集</li><li>实时数据采集</li><li>接口采集</li></ul></li><li>配置参数<ul><li>采集源</li><li>采集能力</li><li>采集频率</li><li>筛选条件</li><li>配置输出目的地</li><li>…</li></ul></li></ul></li></ul></li><li>采集任务列表页</li><li>采集任务管理<ul><li>查看详情</li><li>修改任务信息</li><li>删除任务</li><li>重启</li><li>停止</li></ul></li></ul><h2 id="数据采集技术实现方案"><a href="#数据采集技术实现方案" class="headerlink" title="数据采集技术实现方案"></a>数据采集技术实现方案</h2><p>先基于flume来初步构建数据采集模块的功能，结合上面功能上的规划，这里具体实现方案思路如下</p><p><strong>选择类别</strong>可能对应flume的source</p><h3 id="批量数据采集（非结化数据文件、图片等）"><a href="#批量数据采集（非结化数据文件、图片等）" class="headerlink" title="批量数据采集（非结化数据文件、图片等）"></a>批量数据采集（非结化数据文件、图片等）</h3><p>基于flume的批量数据采集，这里可能涉及到的source有</p><ul><li>exec source</li><li>http source</li><li>syslog source</li><li>taildir source</li></ul><h3 id="实时数据采集"><a href="#实时数据采集" class="headerlink" title="实时数据采集"></a>实时数据采集</h3><p>基于flume的实时数据采集，这里可能涉及到的source有</p><ul><li>netcat tcp </li><li>netcat udp </li><li>syslog tcp </li><li>multiport syslog</li><li>syslog udp </li><li>avro legacy </li><li>thrift source</li><li>kafka source </li></ul><h3 id="接口数据采集"><a href="#接口数据采集" class="headerlink" title="接口数据采集"></a>接口数据采集</h3><p>java or python 程序</p><h2 id="其它可能所需的技术"><a href="#其它可能所需的技术" class="headerlink" title="其它可能所需的技术"></a>其它可能所需的技术</h2><p>创建和管理采集任务的技术逻辑大致是：</p><ol><li>通过点击选择，生成相应的配置文件</li><li>配置文件从前端发送至web后端服务器</li><li>web服务器生成执行语句</li><li>web服务器选择要执行的flume主机，并建立连接</li><li>flume主机接收到执行语句，并执行相关命令</li><li>web后端服务器接收执行结果</li></ol><p>java 建立ssh连接用到 JSch</p><p><img src="http://img.wqkenqing.ren/typora_img/CleanShot%202022-02-17%20at%2016.55.14@2x.png" srcset="/daydoc/img/loading.gif" lazyload alt="CleanShot 2022-02-17 at 16.55.14@2x"></p><h2 id="二、数据采集实现细节说明"><a href="#二、数据采集实现细节说明" class="headerlink" title="二、数据采集实现细节说明"></a>二、数据采集实现细节说明</h2><p><img src="http://img.wqkenqing.ren/typora_img/CleanShot%202022-02-22%20at%2014.04.20@2x.png" srcset="/daydoc/img/loading.gif" lazyload alt="CleanShot 2022-02-22 at 14.04.20@2x"></p><h3 id="任务类型"><a href="#任务类型" class="headerlink" title="任务类型"></a><strong>任务类型</strong></h3><table><thead><tr><th>类型名</th><th align="center">说明</th></tr></thead><tbody><tr><td>TCP</td><td align="center">tcp采集</td></tr><tr><td>UDP</td><td align="center">udp采集</td></tr><tr><td>kafka</td><td align="center">kafka采集</td></tr><tr><td>csv、txt</td><td align="center">文本采集</td></tr><tr><td>http</td><td align="center">http采集</td></tr><tr><td>mysql</td><td align="center">mysql数据库采集</td></tr><tr><td>websocket</td><td align="center">websocket采集</td></tr><tr><td>sqlserver</td><td align="center">sqlserver采集</td></tr></tbody></table><h4 id="不同类型所需要的参数"><a href="#不同类型所需要的参数" class="headerlink" title="不同类型所需要的参数"></a>不同类型所需要的参数</h4><table><thead><tr><th align="center">类型</th><th align="center">参数(*是必填)</th><th>补充</th></tr></thead><tbody><tr><td align="center">TCP、UDP</td><td align="center">ip/host(<em>)、port (</em>)、agentName</td><td></td></tr><tr><td align="center">kafka</td><td align="center">bootstrap_server、port、topics、consumer_group 、agentName</td><td></td></tr><tr><td align="center">csv、txt</td><td align="center">file、agentName</td><td></td></tr><tr><td align="center">http</td><td align="center">address、taskName</td><td></td></tr><tr><td align="center">msyql</td><td align="center">后续确认、taskName</td><td></td></tr><tr><td align="center">websocket</td><td align="center">后续确认、taskName</td><td></td></tr><tr><td align="center">sqlserver</td><td align="center">后续确认、taskName</td><td></td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flink学习历程</title>
      <link href="/daydoc/2023/02/22/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/"/>
      <url>/daydoc/2023/02/22/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/Flink%E5%AD%A6%E4%B9%A0%E5%8E%86%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="383a8e4222de9f937796981fc33d47086cb79ed5e879c7989d8b1bf55e5275d5"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>日期处理</title>
      <link href="/daydoc/2023/02/20/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/java/%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/"/>
      <url>/daydoc/2023/02/20/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/java/%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="6325b6ac95af56a04a41b31a2d243120827f6b49c544c33134835b0d71060e1d"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> LocalDate </tag>
            
            <tag> Duration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算处理</title>
      <link href="/daydoc/2023/02/20/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/java/%E8%AE%A1%E7%AE%97%E5%A4%84%E7%90%86/"/>
      <url>/daydoc/2023/02/20/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/java/%E8%AE%A1%E7%AE%97%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="ff7ddac8c72250ccea6b1aac4e82dd07b27675dfc1a8b0500143c6cf172cdbb8"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> math </tag>
            
            <tag> BigDecimal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/flink/2023/flink_study</title>
      <link href="/daydoc/2023/02/06/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/flink_study/"/>
      <url>/daydoc/2023/02/06/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/2023/flink_study/</url>
      
        <content type="html"><![CDATA[<h2 id="Flink-learn"><a href="#Flink-learn" class="headerlink" title="Flink learn"></a>Flink learn</h2><h2 id="window"><a href="#window" class="headerlink" title="window"></a>window</h2><h4 id="窗口分类："><a href="#窗口分类：" class="headerlink" title="窗口分类："></a>窗口分类：</h4><ol><li>滚动窗口</li><li>滑动窗口</li><li>会话窗口</li></ol><hr><h4 id="窗口分配器"><a href="#窗口分配器" class="headerlink" title="窗口分配器"></a>窗口分配器</h4><p>先区分是否为键控流</p><ol><li>键控流用window(WindowAssigner)</li><li>非键控流用windowAll(WindowAssigner)</li></ol><h4 id="窗口分配器："><a href="#窗口分配器：" class="headerlink" title="窗口分配器："></a>窗口分配器：</h4><ol><li>滚动窗口</li><li>滑动窗口</li><li>会话窗口</li><li>全局窗口</li><li>自定义窗口</li></ol><h4 id="内置窗口均基于时间"><a href="#内置窗口均基于时间" class="headerlink" title="内置窗口均基于时间"></a>内置窗口均基于时间</h4><ol><li>开始时间戳</li><li>结束时间戳</li></ol><hr><h4 id="时间语义与水位线"><a href="#时间语义与水位线" class="headerlink" title="时间语义与水位线"></a>时间语义与水位线</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/数据基础平台/日常运维</title>
      <link href="/daydoc/2022/11/08/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%97%A5%E5%B8%B8%E8%BF%90%E7%BB%B4/"/>
      <url>/daydoc/2022/11/08/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%97%A5%E5%B8%B8%E8%BF%90%E7%BB%B4/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/考研/C学习笔记</title>
      <link href="/daydoc/2022/11/03/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%80%83%E7%A0%94/C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/daydoc/2022/11/03/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%80%83%E7%A0%94/C%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/开发/前端/vue学习</title>
      <link href="/daydoc/2022/06/29/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0/"/>
      <url>/daydoc/2022/06/29/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/vue%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">简单学习vue用于自用,本文主要用于记录学习进度与相关知识点<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/调度/调度组件部署</title>
      <link href="/daydoc/2022/06/19/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/%E8%B0%83%E5%BA%A6/%E8%B0%83%E5%BA%A6%E7%BB%84%E4%BB%B6%E9%83%A8%E7%BD%B2/"/>
      <url>/daydoc/2022/06/19/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/%E8%B0%83%E5%BA%A6/%E8%B0%83%E5%BA%A6%E7%BB%84%E4%BB%B6%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h1 id="调度组件部署"><a href="#调度组件部署" class="headerlink" title="调度组件部署"></a>调度组件部署</h1><h2 id="1、-DolphinScheduler部署"><a href="#1、-DolphinScheduler部署" class="headerlink" title="1、 DolphinScheduler部署"></a>1、 DolphinScheduler部署</h2><h2 id="2、airflow部署"><a href="#2、airflow部署" class="headerlink" title="2、airflow部署"></a>2、airflow部署</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">airflow<span class="hljs-built_in"> users </span>create \<br>    --username admin \<br>    --firstname ken \<br>    --lastname Wong \<br>    --role Admin \<br>    --email wqkenqingto@163.com<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/编程/java/并发编程</title>
      <link href="/daydoc/2022/06/05/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/java/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
      <url>/daydoc/2022/06/05/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/java/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/项目/古诗词竞赛/诗词竞赛业务架构</title>
      <link href="/daydoc/2022/05/21/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B/%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B%E4%B8%9A%E5%8A%A1%E6%9E%B6%E6%9E%84/"/>
      <url>/daydoc/2022/05/21/%E7%8E%8B%E9%98%81/%E9%A1%B9%E7%9B%AE/%E5%8F%A4%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B/%E8%AF%97%E8%AF%8D%E7%AB%9E%E8%B5%9B%E4%B8%9A%E5%8A%A1%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="诗词竞赛业务架构"><a href="#诗词竞赛业务架构" class="headerlink" title="诗词竞赛业务架构"></a>诗词竞赛业务架构</h1><p>现有业务模块梳理</p><ol><li>消费从而生成诗词源</li><li>任务生成，并绑定对应的诗词</li><li>生成试题</li><li>测验</li><li>批改</li><li>判胜负</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/专题/sql专题/sql基础知识</title>
      <link href="/daydoc/2022/05/02/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E4%B8%93%E9%A2%98/sql%E4%B8%93%E9%A2%98/sql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/daydoc/2022/05/02/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E4%B8%93%E9%A2%98/sql%E4%B8%93%E9%A2%98/sql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/专题/数据建模/数据仓库建设方案</title>
      <link href="/daydoc/2022/04/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E4%B8%93%E9%A2%98/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%BB%BA%E8%AE%BE%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2022/04/28/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E4%B8%93%E9%A2%98/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%BB%BA%E8%AE%BE%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/专题/技术专题</title>
      <link href="/daydoc/2022/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E4%B8%93%E9%A2%98/%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98/"/>
      <url>/daydoc/2022/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E4%B8%93%E9%A2%98/%E6%8A%80%E6%9C%AF%E4%B8%93%E9%A2%98/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/旸谷数据中心/基础/元数据/Atlas切换搜索组件</title>
      <link href="/daydoc/2022/03/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E5%85%83%E6%95%B0%E6%8D%AE/Atlas%E5%88%87%E6%8D%A2%E6%90%9C%E7%B4%A2%E7%BB%84%E4%BB%B6/"/>
      <url>/daydoc/2022/03/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E5%85%83%E6%95%B0%E6%8D%AE/Atlas%E5%88%87%E6%8D%A2%E6%90%9C%E7%B4%A2%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Atlas切换搜索组件"><a href="#Atlas切换搜索组件" class="headerlink" title="Atlas切换搜索组件"></a>Atlas切换搜索组件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">atlas更换搜索引擎，方便了解基结构<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/flink/flink任务提交</title>
      <link href="/daydoc/2022/03/21/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/flink%E4%BB%BB%E5%8A%A1%E6%8F%90%E4%BA%A4/"/>
      <url>/daydoc/2022/03/21/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/flink%E4%BB%BB%E5%8A%A1%E6%8F%90%E4%BA%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="flink任务提交"><a href="#flink任务提交" class="headerlink" title="flink任务提交"></a>flink任务提交</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/hexo/CDH/cdh集成phoenix</title>
      <link href="/daydoc/2022/03/19/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/CDH/cdh%E9%9B%86%E6%88%90phoenix/"/>
      <url>/daydoc/2022/03/19/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/CDH/cdh%E9%9B%86%E6%88%90phoenix/</url>
      
        <content type="html"><![CDATA[<h1 id="cdh集成phoenix"><a href="#cdh集成phoenix" class="headerlink" title="cdh集成phoenix"></a>cdh集成phoenix</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/hexo/old/sqoop实现方案</title>
      <link href="/daydoc/2022/03/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/sqoop%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2022/03/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/sqoop%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h2 id="调研结果"><a href="#调研结果" class="headerlink" title="调研结果"></a>调研结果</h2><p>通过具体调研，本次迭代能直接通过sqoop直接实现的任务有</p><ol><li>mysql to hbase (单表)</li><li>mysql to hive (单表)</li><li>mysql to hive (整库)</li><li>hive to mysql （单表）</li></ol><p>其它则在数据治理模块中的任务编排功能实现后，再借助任务编排功能实现<br>具体有<br>mysql to hbase （整库）<br>hbase to mysql<br>hive to mysql(整库)</p><p>sqoop执行环境：<br>192.168.10.100<br>user：root<br>password: HyYg123</p><h2 id="mysql-to-hbase"><a href="#mysql-to-hbase" class="headerlink" title="mysql to hbase"></a>mysql to hbase</h2><h3 id="单表导入"><a href="#单表导入" class="headerlink" title="单表导入"></a>单表导入</h3><p>sqoop import <br>–connect jdbc:mysql://192.168.10.210:3306/hy_hydd <br>–username yg_reader <br>–password yg987654321 <br>–table t_user <br>–hbase-table  test:t_user <br>–column-family info <br>–delete-target-dir <br>–hbase-create-table <br>–hbase-row-key id <br>–hbase-bulkload</p><p>支持覆盖</p><h3 id="整库导入"><a href="#整库导入" class="headerlink" title="整库导入"></a>整库导入</h3><p>sqoop import-all-tables –connect jdbc:mysql://192.168.10.210:3306/hy_hydd –driver com.mysql.jdbc.Driver –username ‘yg_reader’ –password ‘yg987654321’ –hbase-create-table –hbase-table ‘test:hy_hydd’ –column-family ‘info’ –hbase-bulkload</p><p>sqoop mysql to hbase的效果是直接导入到一个表中（该库中的所有表，都导入到一个表中）</p><h2 id="hbase-to-mysql"><a href="#hbase-to-mysql" class="headerlink" title="hbase to mysql"></a>hbase to mysql</h2><p>无法直接导出,需要借助hive、hdfs等策略</p><h2 id="mysql-to-hive"><a href="#mysql-to-hive" class="headerlink" title="mysql to hive"></a>mysql to hive</h2><h3 id="单表导入-1"><a href="#单表导入-1" class="headerlink" title="单表导入"></a>单表导入</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs haml">sqoop import \<br>-<span class="ruby">-connect <span class="hljs-symbol">jdbc:</span><span class="hljs-symbol">mysql:</span>/<span class="hljs-regexp">/192.168.10.210:3306/hy</span>_hydd \</span><br><span class="ruby">--username yg_reader \</span><br><span class="ruby">--password yg987654321 \</span><br><span class="ruby">--table t_user \</span><br><span class="ruby">-m <span class="hljs-number">1</span> \</span><br><span class="ruby">--hive-import \</span><br><span class="ruby">--hive-table t_user \</span><br><span class="ruby">--hive-overwrite \</span><br><span class="ruby">--create-hive-table \</span><br><span class="ruby">--fields-terminated-by <span class="hljs-string">','</span> \</span><br><span class="ruby">--lines-terminated-by <span class="hljs-string">'\n'</span></span><br></code></pre></td></tr></table></figure><h3 id="全库导入"><a href="#全库导入" class="headerlink" title="全库导入"></a>全库导入</h3><p>sqoop  import-all-tables -Dorg.apache.sqoop.splitter.allow_text_splitter=true    –connect jdbc:mysql://192.168.10.210:3306/$db –username yg_reader –password yg987654321 –hive-database   $db   –hive-import –hive-overwrite  -m 1</p><h2 id="hive-to-myqsl"><a href="#hive-to-myqsl" class="headerlink" title="hive to myqsl"></a>hive to myqsl</h2><h3 id="单表"><a href="#单表" class="headerlink" title="单表"></a>单表</h3><p>sqoop export –connect jdbc:mysql://192.168.10.210:3306/hive_test –table t_user –username root –password yg987654321 –hcatalog-table t_user </p><h3 id="整库"><a href="#整库" class="headerlink" title="整库"></a>整库</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/数据基础平台/数据运维/数据运维-采集任务模块</title>
      <link href="/daydoc/2022/02/21/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4/%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4-%E9%87%87%E9%9B%86%E4%BB%BB%E5%8A%A1%E6%A8%A1%E5%9D%97/"/>
      <url>/daydoc/2022/02/21/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4/%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4-%E9%87%87%E9%9B%86%E4%BB%BB%E5%8A%A1%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="数据运维-采集模块构建方案"><a href="#数据运维-采集模块构建方案" class="headerlink" title="数据运维-采集模块构建方案"></a>数据运维-采集模块构建方案</h1><p>基于docker来构建运行环境。<br>即将采集任务基于封装后的docker来运行<br>任务的创建，任务状态的监听则都走docker的api来管理与获得</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/数据基础平台/数据基础平台构建方案</title>
      <link href="/daydoc/2022/02/15/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2022/02/15/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>this is a demo</title>
      <link href="/daydoc/2022/01/25/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B5%8E%E6%B3%BA%E8%B7%AF%E9%9A%A7%E9%81%93/%E5%87%BA%E5%B7%AE/test/"/>
      <url>/daydoc/2022/01/25/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B5%8E%E6%B3%BA%E8%B7%AF%E9%9A%A7%E9%81%93/%E5%87%BA%E5%B7%AE/test/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2b3577516f3e20553709db79f06399904180d573741a658aebcda1c1ddd05eee">f29c680708acd02cbb1b6cceaba06192d34048633918d15832047c414baf92a4</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flink记录</title>
      <link href="/daydoc/2022/01/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%AF%BE%E7%A8%8B%E8%AE%B0%E5%BD%95/Flink%E4%B8%93%E9%A1%B9/flink%E8%AE%B0%E5%BD%95/"/>
      <url>/daydoc/2022/01/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%AF%BE%E7%A8%8B%E8%AE%B0%E5%BD%95/Flink%E4%B8%93%E9%A1%B9/flink%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="b5246dd1ae22ba3a8315a4b06ba26f46c864a62154324b1d257ed4f2ae9b6d7b">f29c680708acd02cbb1b6cceaba06192d6c1680c5bc57c2b93157ce4c9dfce9c01758f6328cd944b04e87f2c77b921964a720d41df641bc54255edb22cffee15bf3f25804d1dfb19b5336046fc8aa4601b60305b8858f399a8d92e5ce77928a8f46a79fd584d74a7f98562aeff636e1c3a3902aaa1d8dbc34da50fa6640a7f5a648284ca38b551caf63e8dfa84a131c1868c5ec274b3aebc68fd528f10692ba99e15c2e1d5a81c974775c6ce5056d804334403d29b75c461ebb0549cdd39079173e079cea0dddc6614bb667bf4901a53691c4f9f72207aefe58bcf59adb51cf020f8b79682c7b95465417ec98bf28c3f1eb354acc3a3201b2a0c61181bbf547bbcf10217ce15eba76acc79ab85bf676ca9d8c349d5d5de00175ad1bbf8607e46c46345b691265951fdd2a09e46ca890dd2df583d1faa22b15233594ac575b3df823c828ea57b62912efe836d65e72e2344c087d8bfb985778670648b272a885e408e0082468fba155aac6d02def60da0b6a4f9420c8e7f7e7361376a00ee07673b1b6fcaefa22933da1c9918f66ee02b98c918c2389da36093b7200e115bb90550175abf8488457706fc69aae258f6137e0bbe529b6c7e5ea47e49f22e28561d6bb50020c40dcf6044a1bd9977dfe332b4d099daf6370401222c8b101eb72c9eb0974b57cb23e92957daa4e09a7afc8b997024921acd1f1e4f0df127aa7903c4ab20900ab661529fa4d942342d6ce69056c3be19c5148ace3490e23172eb76ad85b6e118d693995e8a905e32dc306a73</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> flink、极客时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据运维的构建方案</title>
      <link href="/daydoc/2021/12/01/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2021/12/01/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E8%BF%90%E7%BB%B4%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2b3577516f3e20553709db79f06399904180d573741a658aebcda1c1ddd05eee">f29c680708acd02cbb1b6cceaba06192d34048633918d15832047c414baf92a4</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据安全的构建方案</title>
      <link href="/daydoc/2021/12/01/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2021/12/01/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2b3577516f3e20553709db79f06399904180d573741a658aebcda1c1ddd05eee">f29c680708acd02cbb1b6cceaba06192d34048633918d15832047c414baf92a4</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据应用的构建方案</title>
      <link href="/daydoc/2021/12/01/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%BA%94%E7%94%A8%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2021/12/01/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E5%BA%94%E7%94%A8%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2bdd0aa082dbba9aa20a32f23cff550fb7d97ca3d2cd002adfefff16b70b2cef">f29c680708acd02cbb1b6cceaba061921c50cd678844d380083157fca95bec92d3f57e40e4d066bf895f15ad79a72c3dae4b7d1d94ecabec017c56f4995360a3d408c549508676a26d96896b50d4c00e7b95e9ba84c086cc9de2f17f2db1e6490c404c489ab34861149325d659d914bd5e313866e88ae4baca8ffd534a41a2dffa85988c3b77d5f01e1544efb75ab293910027e514ed2f730ba1c08d2c51c680b12ccc1f478656e119252497cda7e3346802c7633ab0289061601a8993d8bf76e87864cd509a8951665a951ba82956ce7def9b2aeea831607fae592c00c2a81118146a4bf2023e1dca446128bbbeb6aa2fc20c560f6d3b84b2cb27dcad26143da3bbe09b0072d5b58cf1af7674c05160bd7dda2fd699fa7d1f89faba0cbc5151f4f295ea4f02fd2232b533c3063db969df2b99133244e74678822af5c78b1d4cc9c9fff4e87de3eccf06dd95a05690cd7a5e48f3cdabe36883d0d7f830b83de4ef7da8094ee177d413dc8f55f4b56758b2ea8c7f005ed8e85899159a67347f1b3b5f6869db73182b1245a7a73e238bed46a6666d6b3dbcbdbcb388dfc47db426e5545720f49dc2c837cb532f6745525ac86d33ac3f26101a9085131628ac7053b5736cd92d3a97b135d74f931c0d57ecdc1e934f1eb6b7e28c6518f62560e941bd93ac1599fcf909beac658b784a1571bb638a7800be32633a7cd13d2dcf37dab6584f203fbcd9460b752d2b25185f14015ff387aef58184054eb78f818d8f6f566a84a9af95da82fa8a8dcae9e7c7cbaacf0f4915b34694e135c2eef7160930092c229e84978177317ec4f2890e0724743f435d8dfc9fd5364e72166d606139e0894cb5018ea4ad9f7eba5853a5b0cf7f3d487a5b2b983cba4706e2c5eb0aecfbb8fb32f723960818f59fad9ff5f30aa3ae8aeb5569d47482190b88869802a152dc05fec6cee63ecac03e1eac618b5dd36b7888b9b4d520a0e7a2343fcb94eb043b67648fc0cc01ceb17e1db6279820</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据治理的构建方案</title>
      <link href="/daydoc/2021/12/01/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E6%B2%BB%E7%90%86%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2021/12/01/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E6%B2%BB%E7%90%86%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="6e47f4864097a23877c4253307dec11f9d25cbf5bfc7c555e390a442a9c79009">f29c680708acd02cbb1b6cceaba061921c50cd678844d380083157fca95bec92c865c218c7fddae964cd223e71c0ac8c9983eb04611b9932b9fb4fe8fcbaa188201deb44e26ff7630c4e778e21b2650bb96c6c44348720cc9d4f3e6b7fd538c36891151922a6e33af668e45ab8c81c6f41b885c66946a7e2af6389a5083d6212608fd7af0bc312763b4f0dfb8c79bd15472fcce9943ff140689cdefcc1041dc8c3a52410df48db5ba41b2423a35679b9482b33419429ab49429f731b1d3ba2fc54571a106435905ec3a30500804f3bb5ab92bc5ccde469a0aa81aa879001a46e2d311b160d9ff98e8d1ce5d1997875fdc6029e09b4815c6566b357f79f080599cf6cbc810440b344d256f08ff56926fc57df6f092d53d08119b77e0561c705f3f037a5f2468fbd7cf531ca4aa6db9be7a791ce4bbf68cadf7eb7f07fbe36b9b9915a5b602a2a8d633a71b050b187258d63df3b6613ae333fe107d6db3563b0824cb1023604cb535a378ad2998fd68ab232954f21ae7658b50640b81276c426db3d389ac77f1d585872b0657b554c113e7e9a2fe451da8f7ad1508823a9776d320bba1d9e973f6eaa5d425f63e92a20ec68fb5653df82e977e3c4eeb84ddcd8a77067aec6aed173efafcb9c6e554744b6e2bb1548a68a0d1e85f2edf88cb4ff3d15d69214396fd3baf1493deaeca4ff4db6f350727b65fc2891063a90606deb04fb505c53f1e28df30e67f9290b393269fe6a27ae7783177b1d9d3e0b029012609817db9d71164739aad955cbf3cadf8a97a01e939dc7402e098e5116c1fa9b3e61aaadb19612516cf20f224f5338af65e3745696f7c809af10bbabc08280c1cf56a70f3444feae4be51c9efad6df6088784488f654c2ddf246d5a296ea47ba462bbf3e9e85ef8b7b717b6bde9a602ce6df3959fe79fc059e62c8e55761be46d7413c8a1717627edac20c8533e3292a32907eb3869e7274ad961be977d91b1d478278050d7f3574cdb35d0ccf46f4ffce4ebe0591b86dd13d33dbf3e8c777bf36057a13411373fd32f5a2feb9faa3f44f5f6cfb96740f51574e14899c939c4672ebda9a2d5a13d1afdbc187d282d6302d30dfa6b2c7a6ac6fd5b828daeacb4299057398f56f4a4bb9dd1de9ed450c4351424d3ba5ce5c2f196551df01bec33cc18f9053ca0e753b1368ab01deb62c280b52dde8eab623db226764d4cd41c232b8fcd4d894f74727679c3867c91660d69d</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据治理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据管理的构建方案</title>
      <link href="/daydoc/2021/11/30/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2021/11/30/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7efa4d3af69a0897fadd0d714d930a3f39ded9701538b5b1468db897ff0302b5">f29c680708acd02cbb1b6cceaba061920962c2629b7d7d6d29e18db59823a9e76a09578109f564dbcc03fd834f793b3d97b4195ccb49bbc9c0d0e96b8a6449a4deb64f6219e05cfea282ef181b92966f8b3d0b29b313f6e989ea5f460fd3a52099b5c0dfe2e05114182ad86c3553924cc03b1b94981f77ef9ca3292e4eb6e75eeb26a11228b9fc5c1691d0a3f586e5d7144daa1621cb65444ecc9bbcedb907cd0376485d8c85c74413d3879beed229f317b03f8d480f1c5b99fce2f964d93ba6c6c8f6b83080bbe19230f8a154b09a0c19645cadae2961e7729bf115e953e4d1b9c8dab801d2b85daf4f964adc518cdbdd263d0e9fd51411f3b13b3992cc0f12ae613d3773197e9fc0bc203e92ae461e91feaad17f4823832dfe3beb2d4bc6a64251f1c6f232b81de75956acd6436791f63a2d49ff2eacc98e9a828a1494bf56e1f5509513f350023768351bbd5fa6590c7338109960d02ec26ffedde98803b94fe02dc0b6b31ad0fee4a016c4cc3275903d2227b3e113efa03d0a6af2089e9e9e58a2ed4481a4f15e7d3b39c405938d074c70f648f0b3756568213cb496cafd759a59730aaeb110912192c376690ae86830767607ef88b40397cedde2a3fb0ea68e45cd261eb8092aceae8ff6ae4016ac932b572966e3c1fabb398a3cd108b53d36d248dbafc29e9cace1690c7bfd106ae90fe42013228dad4ab4a81a3745ce394d2bd5b239fcb06570457bc318f41e3f1d2cdc9ca023227aa619c62bd1a43f61bdf3b2b4678bdd63997d49e22af6c95ac280494bb5cd07f830f395a3111eb8f3d8f8d255dc819d8bd837c61839ec78c6021339fca899b77f5817a2178e9b905b01c2d607ef1023efb75c92d30fa032819bb90f6dd1912e55165a38195762718b7687d1ac3aaa962cfce535c292582d57f1dc633fd236305d966ac26529203f50cc9bae1072cdeee49da2ffebf0749efb772781b1244c61b3f817797827f379cc68936aafd739a175756170dd72a1a4a06335cf26223f0714c820d9afcb3ce7a2bac4e9d3ea12fbf757c3dfefa9c98295deb4a94bb39ded142333678fa84fcb35a5f5b1fa1692d99b7a9673568e26ea2a9661d02c4609d984db55886115d5a121605b6c783d2722155867d2df69d40a3039d58d79f8a47979d64904e12a054d17b668b5bebb6c5743fd089f8cd15d955c1adadabd94843a1c260e1ffe889714a2e8d40a317debc0b28f4e0b27969b64cfe9ff3149523cdd1d7382c5d3ff0520776d72f28776f3643e8b58260a0e6e79f5afc32588cf93a9926b10af39a1260a357c3c68b563116704f89210ae2531222b4a8346971cb52543c46236410d228f6524493bfd758b6bc9d4240090e48b2ed5563dbc0d9b11866384880c42207a1d23f5a4f0cbd404d90e7ae868b3a833bd7a7cba94e60e442fde93318cabcd12152856de59c5c2f272b497e846b6949f92a42948c2853bfa266c3d427e06d0024dcee26cc9f4fded9f4723f2dd9fa23494eb5c59b6c74e345ad773346dcd1f420484ccfe400f29a1188ab94b540bf3edb7141aefe284c23890d0c4d3cae66c357b8e1b3a1419efd1c2cb065a1029fa5bf13bbb91308929307d6e134425fe101a58bcd1397ae5ef831c817df27b0c0062dbe61446d48cb27abe9ae9074b5bc9afccaf7b9c508aa0e98a2ee657d856c650cb876c9a8e793cff6518e55eedacda0541b971fe274449eb0cd256c6a9f124702a844e36032e5a069a694313e0904e45571be11f0d58eebe51a63cc1826b6074fa1f0dc7ce037704cea316b91fb0a801c980412a0ef50271f434dfefb4faff585bfe99c995511ee958796dca26ad24abc1349334b00f07d594eb7825efda936b01690943fe26b8329eee028dc04d52a88c908ef568371d159c1407e1d3733238ec42451dfba3adfe56f5f0b8f80dd7e538d3c38df614da9792429401065c6f2921304ecf5cca18f5e862849f87f4ea54cf3ac614d70576da7cc8015dc427fbb0f8f1724994809657147023835e7fc1b3bb049dcf7fd7695e943ce58338a9f2d5e7bec9f070a09e6bd657a206bd8f60aff6c67d01b634ebbbea4c7e02e0e03da11cf8192983bc9c6b511af6807d59ebe36320f3039e10dcfcd8dc46f6cd7471b357f497b1baa6061e64c69709eb3443b538c0f25654b65288f99f529f0bfb62b194e54307d711e710e0916dc53873bcef652dbb36e9b7742986cda9fab4f01774834a1b1bca57eeb2c9fe6e6daf99dfc2bb51a19b77ec4266ab99d41992ffd916aa6e5a8383aabc4194085cc7e410a75bd34c907d951a499fb6ef2b5a1e987c3270e2e7c1e8cc854c4875995bbe9757107658137c250dafa806c5e00323e411a3f3a534ebd10dfb60ff3f04ee1f3749346d03a452be4687739a3fd9b539cdd039aea1e99431e12a22f32dc43789f4bfeadfe93d0b6adaa4df0cd9d726cd2976a8897c78bb844f87a02cd1c7b169b6d5f55831048b3aa91e26df85ada33202a113b050fb7efac7eb09235e783be7754178c7fbd569b7360fb027f3f429a5e08b4b8440c04ddb4e0615486058ce6cac96ab8a67f2e5bd7dd2a8d0498ec4fdb8d3c6b4c81049488ff26babb3680cdfb2b60bd976ea93ffe5172b13856a4d721940b97641a43c24e7608d2e1453eabb663c7d20be927e050be1f4742b625c6c91f74e1b87c2853a7f1d06d8fe10641a3cc6f89c1161253dd0e7f0b6047daf0a7c23db5e42c23ece66228071a15e90d641f729f75f683131e0c617b189501076ee4e9da14e73c67f5f49d7f550708726916c755051dcf118d7d024978dd41181afdee9532af0ee83d04fabb966de7b6d3350455747fc8c1a80ca008339863ebd6dcfcc7f6f9e3b64c25ea9dda42476b72a0d26db45940e4ed6f2a75ad2269da071dea04d7554d850f03a07a7ff5fcc6abe62fed2088ebd73985a0d483e148fc8addced66fa09fd7d2902d3f2bc40e0dfbfb4f7e3284c5e54819fd7e956e20148914d4d9af3b1a47b88a4b54a35cd5c15919c1a9b23470aba894a2f3af2fc5d1919a19938f4e07f82fce4ea3c0f08a273bea376601f25b3c615be5d6001bfdf8f3b9be27f2f10c76cfc55a868dc75c7f13a838fd2e38b0f43723367edb2f20e71332cddde6a38d78cfe8f4747fcdd6f5772cec43ef31d94aa82aaf006d46480325f58b54ba51c8e23814e408d138c144a05380ab0551a4bcea755c6044ad5f0c1f06ecda954749fa6ab896f9aa116a74c4d3b46f5872f276bfb7b890965d0a55cc42168833751829ffff48124c819f090a0bc5c612bfcedb2f4a72fff20daab38d2bab4bdf8fdae916d26e11ceff676b0850f78c06e98c804bba2660e4fa24e68d4a3fba534bc78717ad970f03bb712eebc6711ee65e4373f7c4108657db0bce7d4406b35ed34ccaf0b75ac85d8bf4c00551c6cbebbf3ab250448cad14db29a2fe5ac8762a2280f99f540c74d4e439e35d081c92ca509970aa9ca94381fa7ad3856a896c4430b1c804e7a65fcc28cde97d3a984e15c4ca2d007ba77a7c3570a9bc35242c696ce06b910d218d9903b7276d8e5235ec0256bbd889c84d9f7be81711730c4fd7390c9d43ea047fb15c4ec080b815396d4dbac01a2a6e8ea799cad04cdda2551f8e11d7bb150d01b32ccb895589580960fc3f1fe48837f5e0edeadd76040e36feedbc2fdc33568097e37ecd16a57b7492dde0baf61d0644ce0fbed193fc9c15743a6724653d6bd0c5fefc2c6770ce0179ad5fe56e4ed754e121a4d204db0ca3d8ebacf324c75ad47722fd1debd12f40279405a3d1eaf3a94fc18129cf4fd34149ad21180e40ef867f99ae0e8d6753af821fc1af9eb1cd538eb8dcd8d0e6d123bd8944ab326c3fa8fe1283a9db02c8fa4c7fe99ada8a1b346e991f6ec5a098ad0b5a4109884ab488b4a7ad8bb1d8499dd2ca65087d0d9a8e46efdc195c844f2d19ea9c04c3aa7f8f5fd849ebb0c3a8ada46950913e9200c2f2ae478256900b3ce05203f9802950e63c1ca6b6055624e1bfa17c1db189caf4af18150f87b11eef7b73ddebd1a8281ee88a7af45fb67c36e84a78122d4febbfde138f20603a610fce5b7fe03b68b5804505511eb405915cb41ae9a707ee5e76ea321ee302bceaf5c465eee89bb4922c1421f7097fbecd64e80f0f1ed69208149877adbafc33800e7e5a276397846e1fd098dfdc61016e45a581807065dc7f35fd0c5396015d44b3bb2350994ba41703e181b7f3117aa884cdee6acd3adc4db4040d6ed4d83d77a121b8ecd20180b36da7e6682fe3a55544a26ee095fc87ae1c883061208c306d2cacc46050142e44d21644445ff013802fd0a38a70a98bb0997b50b971c762ac28e77f113d7e3ee2af7868ecd2ff129701d236fc06f23cb2f308f62512b88de691b4c62575d51d0d11d666d85a73c237d544e57ddf232666fce951e78d25dcb242c3dacf4704c1dbb49292ac1a98df4947b0a62effca1ad6108d4ae7eb225bb29bc</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据集成构建方案</title>
      <link href="/daydoc/2021/11/29/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E9%9B%86%E6%88%90%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/"/>
      <url>/daydoc/2021/11/29/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/%E6%95%B0%E6%8D%AE%E9%9B%86%E6%88%90%E7%9A%84%E6%9E%84%E5%BB%BA%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="6a09d16e42a3a0ba78c7c5b525a0f0e663c08ce99c321cd84c88aad653ac1612">f29c680708acd02cbb1b6cceaba061921c50cd678844d380083157fca95bec929d16021d9c479e254445d45737e5755022d553c251c0578408d0cc81d0a7b2fbad0d355727c3e36cd4bd2a9ef9e720477184ade484a04f9fe03ba0960375cc4363a34c441293a9f09628deb40a84180bea514f13e24e31187add45620993896828b444f7b6b35d3dfedfdfacf650c20ee66b3f6647d14104915e84c5cb6dcb528bfcbe6a9d3c895648c8a01b83fa86cab964bf3f2176b10a715dffa93a2e6b81cbf6ec7403a638b3c11c040876fb98e9a913612fe27ed6dbf92048bb4bd432d407002c6229799b2802c9c0bb469f1f7020ef5616b9e7e5ef73211a1ca3266aef001808854882ff328f431330953d5ca7bbdd49e41224e5f2f3212066b377a57e55c3f9d1e674eb3b257605ffdabf5f14c41c41cc8b61141e56f2dba10caa8a3101a34fcaf90402d4bc014f151ae18d7429c1253f93f128a7db18e0c6941438399a75e0f29c748df451ce95680f296b99269eac1c6d73305bdfb20222c8b98d5b012b4840ee82b3d0995392e326bf3e32ca664df4fc0e1e22cf881cb3da7c4e4b9bad98c0aa0f51f2ce398a7ce6e1586feaaa64b9a7db77b53aee3e80008cc23f1755c7c147d3dec06af78d062ce5735b41b0dce34b7c7efe36f33c890409b8fa5fdead516a15cd1227187ef936ba104189ec8965f61d82422bec9ad4b71d57ada9c75664143ab755864b91c7377d07ffdfa0d104a6290dfbc043a99a874d75c99f87a9f878042328b8243919f83fedaa31147e9d1092bb8a5d16b5d069284be72c487efd8fca280b5585019e1b1d3dd3dfd1c364cce8a37e382679aabf451b5a6e55887ca2316ff9ffa0adbedaffc5bb07427b647cc78c2b164e5719cacdf4fddd40c2b43d04410cda9eca486efb514ac9c9189c61c8989bf19e53bc9734c9aa0bc00a22228834ed34f62e7a51b1ab20b764cd2e6fb9ff1d0a5db2d68e4f1de6de8b1ab6a1207f2911aa7c22b6a11cea500a0efcebcdadddd32954d6fe9d56123c63ae71695b69ce5d2167c0abbf1572b9dc9df67ff6cd171c9210eacc704b1d1a3ccc403879c4b31beb9e852f455665b075381aad25511e4dfdf3840a3a6740300d3fe2893e9c44bdc252fa7403c6104c20b116f74a39f889f7e2e8d62894c29a034781b9311ffe8c72608c770776bf049efefef4c105449cd343beb5e219f5858b8df41557f71837e885e26d0be136553bcb5536f34faf5e382a7877ca82fb183b32c4be9d00bc3768382dbf173cf3f5ea4693f50ca02780b0fe64300949204068b64780004246d2cdc6ebe5e556661d7702ea8bd8adf0644bdac4f1bcdd4d1de01e6b03eef7ac3d9f790d1a556f62b9d49cddef42c2eaa8aeac5650be03751eec432eca499cf9a88a301d01d25148acff592f75d43a4d3b2c9ebd010dddc45e80bf2e7fcb40811c7f2aceabefc7723b864ff88c7c990169d1c9143509b80143a74de7932fcfded02c6229aef06712b55bd31f131d6ff587085fc47133e8a1884dc222dc25ad804cac692840893d861405b25ccd4ec87fc74fe98ffa35ff125cbbe216f15968938806061722d109c17f98b011a31a8e711e1d86812d02c5d534a65ed7289b2f607382cf1bdea898603e81e4448e92e172696b0248c66ec5a28ac9a913cf24fc42472e3b1e6c588578d34b2655fbc8fb481ed4e237f364f419d4fe04a301b4dbb56d45b92e0e71dff095fe6141e9d7ba9a466dc29343fc3e9bfa43a0cd4635a886a5bf92443af9f621abacc15ec1858da8a5dbeea8a1ac99714bb34c3e1f34015706276fb99ead16a252739dc06891dc8c8ec5dec0551b9af6331433afdc736586252d51a14a54114044c0ddab3d4165681a2d730d7d8862b07a7b5ee7e9dd7235a440419d9680d8db5ffb9ca20deab2c6976548d3861e7d2f14d8c1fcaef2a6f1cdf708ea7a2be0b4f81c8c4cc6d0c0e17f32d28eda38af8448c8e346da279caf7f0c089d62df3183aba2c0c6c2f92acd84d4cb2f2f7b45377fd26a81b4e0410740e2f1f5b62535ab5df3771ede8b656f81e2271c3dd93196ef69f8301b69971d33e27d19b04a33e8b5225978f3e5e04ca9b93cba2d34d3e426ac59d6767e6eb529600580e8e684b4f7b269f25feff2ac608fe2227d73eea737a7adc694ee03f97a8d548e0df4da044f759a15f9b463bbefa813c28624bb69172450195532ea354684ee67c073dfd268dbd459023200a78b2b42ccc2d26971932c42b43c6938cf564463adc5500bf130e6e1822aa6453b51b66c0130922af066f0b4c85a96cc29b493d60ba63d4df0ac3b80affb201d5e29dd15f08d5b19d69a71dd01a4a226c80c943a44f4c9011821bbd91489cb0a17b6749f0a49db473d3ea8740f7c263ef9db2418513a06aba927d20babf4f35dce6b06b3d315a145a55c27b456e207381119eb1cabf4235d2c703f8c6e9bda109a39c51724d557f0dbbfc5dfaf5bf6971c9de448cee164663bc6e1b429c2c8744258d1ae2ee68ac1c608ca1e0cc37b8565c681cad7c758659138b04b559e417b5cf67d4d201446231a7a5a47cb64393ded1d2e12359de3dab6e509ed486cd5f7b0967f2243a475ada289d2807d6a8ef92a2999be828556e7982fca083630ebe9af177c8135a8e27066f2f0af18b468542daa7f5bd15013e2713addcdc6d659c7e2e074d6a3822aa1aa375b178ebea01ece459cdbbc4af4d1b103645390a552390cde7824853d6d965f3ff63e3f0c52d52b6d2942e35801490828bfd91a0c4c97e7968d0277ba3ad18bab70b7ff6e7d1983a99fbcffeb2b434c41ff0778aef1a60bf9a806a25112b7832bb07e9846000f63c163134bb506650ffdd160e2d311b07b137de56e2d20f2394ba9662f859044d13145821586dce1d2f59ed427178461548d0da44f34b45eb5b4baab3c56f01e9bd5c8f5ed5531d79cd5636ef97ad21cbf32a57804ae7341e23f01621737cca3ff01359391edd319aa901f6f3e580ecd0905c11912799c2f472480a672e1896002be27fd29cb89048e073ff7e61fb6c213f8c46d8b007930dc7bd30b137b8183b9da70532d1fc5dfb4c5b2b3bda1569d399816320de72f0344bff1cc857949a01167c81e77898e996564eb1254a385d73ae9b70760d583a50929a785942d03b27e69d80e2fd08479b4635b75d9f47acbc7f01789746a70dcface050368e72d99167790dabaef8b46aa27f9f398bde0ae83bd595de27f4a75ddca05b0b0de744ce72f7ba030f78185c5c0445a6d360e4a640458e49994d3672150a06e822c7dd6858a2904f6141b8f9615bd848a18ba47e7dda27245d6e96cd164ad62c6aa9590db473ac522d72be706ebfd37e0c918e447435cc2b10b655d72a07fbd4bc17a05d1fadf107c8292d918da90b0ad1335e6774ac08f6ee50701fe2b774a0fdfb97dac1225a232be5382b5b92a76c358bff43fcc0e6b5bde4a94403e9b4c70a010ec4108501bad0ec7efd6</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据集成、数据采集、数据存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dataworks使用</title>
      <link href="/daydoc/2021/11/29/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/dataworks/"/>
      <url>/daydoc/2021/11/29/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E5%B9%B3%E5%8F%B0/dataworks/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c15f7f9390328ea45c614d40cdb965ac3e4d16693b7d9a9fa61d43b994535d3c">f29c680708acd02cbb1b6cceaba061928da978bf03b056566610d96d27323076c7a401c09cebbff008109eed422df791cee8efa61813d2a04ee759be870b2cd9a402881be2cd7ad361a09062e6422fff7e5c2e55e5e247e4306139366c2e1a7c5a75446d87bf03c0d0086d407e47acb895a95a0bd9f524be0baa03625a97ac581853cbdb046d7fed8cb2a051d1167324235cecc3abe0dd35de2822ff81a8d66a134ef1ca7fdd48068c40529dce327cfc96ab011f78ba32afba870e1694e49e8adcce2b6caea7f217f57c54e99f767cbfff0ab56097cb158b953ebc8a78b9d02be632d75287868d4e665944cbe77aa9a191efed9fecbad11b5bdb55e302f6762be385b2f77ff81df599782afe64141db0b337e74c5c507fa923dd2b04e8ef0c7d045dbbab6112918c457973a35828f08f61bbcd6dffc3e7105c218aa6cab2bdd7143068f22319baeb373af1e65b5be0297f4ad9713889a55acbe53a3f69c6e48a7586a8f655fafc6f86b93fb266f2541d5bb482d392a58d4cb4f107cc4b36c59274e8f43047b574b76bb36a906d16e04f1a84b1ea7a3d58cbbdab2a6c8e16e21ae2611d26336601e1375186d7db6caccd0ff122625953baaff5f254f3f75a517d55df0f29b3f92a80cd9f4b4b99348b5b69a47b936d740126ac71174e49a627b4e505b7f654cf85e3437c9da423016a837735eead5f191fc5e3dfd2a34266f4a83d2809aa7697081ba5e3296eb5bcc0091f95dd94c0ed884121327c29199961384c33041744febbb075d03587d04835a3c76c37ae830f3babf6da04f770dd6ea7cadff33bfd60bdafe9d6af359398af90c8096e9020232fdf3ffeafb311ad283ebdd4d898d86271e898af1ca63900946344b162988e040f9ebe9b4586f7934f6e21da6cda95a38e0a7afb6e1d28eabf49f3ec67b1be0ffa069c5c0b96d91d8ae645f183097141aed92e133dba5818c5136a0e53628a13007b3e87ca871e73c6678d490af178397ea24577b0cfbc02010b26e571040b4f7f4bcf7e7559f2f9f4fb3c1819eaa637d61a5f3e190dffbca628a5a6a58246e1269ac078740c19d0906564d49bfc18dbd848d48b94653d082385440692b224797178240de3fd3181ffc1ac57f52fa8be0f29c46399c4562fe7632b1ac1a07d653d2dce3602a34ef0571456348aabd1d7ad8a3e13a8e5f41a93d9b6243e49cb18a1afb7970964caebe5ec76cdef9be14cdbd4e158a32699fc25df1835756be6d95f34e41a8da47ede076487421b8609855079b6988784b1ea38a6d5c9ffc3d9d941ec40ce656575e9c1e09bbbd368c385649e92c3f9337d138db11c3a56e04c94d93aea2214362cfc889fd6984ce4ab6172b9b64b8597bf0ac322e4e2036d69b45919e2798ac0ab788d73f26ba9c1ee24f8e6e5d22379542c23cb239f8314f56f292578881a5e0479cbca693030a6c187c9043c29ade12aed7f39389c1c293c665a2312cd79480b395f83b359a766cf0f4ad82784be1ec2e1f81f3d4ac750d4bfd3d90e3a95d904cb9a5ff93b5c95a7651cb768fea5abc77504df0071eecd196945165a35712f2df0d43d6c94937a7a707821dd89793a5d78919a9a774cc75898f4cd470c32a4a66742e5</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> dataworks </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop发展史</title>
      <link href="/daydoc/2021/11/18/%E7%8E%8B%E9%98%81/%E5%9B%9E%E9%A1%BE/%E6%8A%80%E8%83%BD%E5%9B%9E%E9%A1%BE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/hadoop%E5%8F%91%E5%B1%95%E5%8F%B2/"/>
      <url>/daydoc/2021/11/18/%E7%8E%8B%E9%98%81/%E5%9B%9E%E9%A1%BE/%E6%8A%80%E8%83%BD%E5%9B%9E%E9%A1%BE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/hadoop%E5%8F%91%E5%B1%95%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2b3577516f3e20553709db79f06399904180d573741a658aebcda1c1ddd05eee">f29c680708acd02cbb1b6cceaba06192d34048633918d15832047c414baf92a4</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>整体规划思路</title>
      <link href="/daydoc/2021/11/17/%E7%8E%8B%E9%98%81/%E5%9B%9E%E9%A1%BE/%E6%8A%80%E8%83%BD%E5%9B%9E%E9%A1%BE/%E6%95%B4%E4%BD%93%E8%A7%84%E5%88%92%E6%80%9D%E8%B7%AF/"/>
      <url>/daydoc/2021/11/17/%E7%8E%8B%E9%98%81/%E5%9B%9E%E9%A1%BE/%E6%8A%80%E8%83%BD%E5%9B%9E%E9%A1%BE/%E6%95%B4%E4%BD%93%E8%A7%84%E5%88%92%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="76ab815cdfcb3a86d06326b815f68ab5a91da4a8ef01858c9fbb48cdb40a9e3c">c317fd37314d2af89c3eab77fecef36547a749cfc13699ae68bd4f71e9e6d19d5b518d851ae1da3f7400e72e07a4ea81f1e65bd504be43c97528b977677740419af9a510c5877e92698fa6f6a0be16bc2304533580987757c5150c6dc8123cdf3727e7f6892de9539fd2cd2727d0ddba1fd638d1c75ab799478df609e81bf95c551d37d66f4a1a91f7d4012f1c17d23e531345915c1f96828763bf0a60893349bf1488573a301beecb520da0be43e0ed7e5f77892a87491d0d28d15626ba7bfcce3d76ce2586cbbd1bc01f84e65613c1ad02bc0efea390d3a0a69d0938078d07fcdb3e78bd9752a421d7e466a48dcddd8bbd3a78e3979b22f7b81b388d4c4176c00063f02915792229b296dd3df6d9dc3755a07a3de837b180483f5c273bed862903c05a46e958356088a17273cef0b239a1c3f87d0c22b4ad0fdd01c589643283294c2c832c4d2c6bc4aa9aebe9676afde13517e37e8dfe15a8923135ac984fee1c9661b745287e1794016aafd052c0b97702e2812d0908b7ebd9cc9f7d4e6b257b39bf565b30542e7f707da418e9024e5cbfe08e8f3aa75f72e8608e36d4362460a5124a79ef5aedc6abd77f29be8b11f033f39a20120c3ca2d7d9a31f80a77267de4da1a2214fc0f8a95998e8ed3415f08e15b8b80a010a81919bc20a57da968b89def3e9515fc8da78fbb2d6c8d22036ab15fd7ea7160eb56d879c8ec7487041df8e17d5d5484135d28d6a6dfbb2301a08aa0845c6706d44b7b8246d6dd74de26b0ca712a04f88f6a7d0c25c3dbeeacec5b76b0dad1da99a80bc552b546efbd1eda16c362a849da59e93cb2b962f67f17b6d4153cf23caf5cb91dcb84077f5ec3efc904067cd112a5588d6c31d0efb25939fdc923d13aa191d2a2aa22cbf5792e9bf5dd514a2c9fa7f050b1564892d22123703ac32396aa2924671a19b642d38b0926bf1d81411620e87bed1270d0f11e3f01ec57cbf33adf7f4f6246f5d</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>存储组件</title>
      <link href="/daydoc/2021/11/17/%E7%8E%8B%E9%98%81/%E5%9B%9E%E9%A1%BE/%E6%8A%80%E8%83%BD%E5%9B%9E%E9%A1%BE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/%E5%AD%98%E5%82%A8%E7%BB%84%E4%BB%B6/"/>
      <url>/daydoc/2021/11/17/%E7%8E%8B%E9%98%81/%E5%9B%9E%E9%A1%BE/%E6%8A%80%E8%83%BD%E5%9B%9E%E9%A1%BE/%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E7%BB%84%E4%BB%B6/%E5%AD%98%E5%82%A8%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="8a95f9d4c9c19020c45300faa5bddae63d0d0b7688353e03aa6b4026a92157ba">f29c680708acd02cbb1b6cceaba06192fd37d7ccac54b433cec09979d6b3568416ecdbe16c4ca664c50a55169a72aa9c5f6f14bf3a1d1e8949f5dbbe936e54b69e34916ff1af43d605c29093be8b98840c69c3652a0d1ae1adfd4a62d3af169dc909e80979a3ddc5dfa0247a76124a305da0ac9aa7d185c377db5568c8d3f5ed8233487cd273f613c2fc9d430940a04e5b48fc983a84c163ee238d36ad207526c3c1093ba0fb4d3d159c77d4e56ab0d289891ba8f25ab4dc51ced1a4cc74aeac7730d6a8fc3f6c80db161154d8ba491a6318e0ca79b40c2935872886b15c59b3fa0b348f77cda155e364fa2698217602a2df6db031a631bcd7ebdd13a5cff59a88043de5fa3a27662ccba18b935aafdcd8d637e62530c9dd9f1528f545e9d5808eedd4320e3936d4af4dfb3d5ffb0093efe9e27405fc0ba8cd28c25d8576005a0ef8b2f6092788cf7505fdcdb6cbdf68d38bf4e049156d8017ecae5f34b5a487680c8943b6d170eebb8235dac7a482b1ebc576ff4a1f7ca6a9e7c919cdcffb848d147ee39797c1bf19e166bbb5fe80ec42690988a6b198b2235ead92aaab3b1e6eed755b83ac1014d690a7f4a34a7da71a1d73f95267249ef6e499a4206eb516bdd331195a4604d1ef25bc92be0febb32e344d995f958af365ec4563738d8e44af985c873492b41e2fcc66fdcbe3cc9010a73976ff42eb408a2f306ae6c1a2d4762fbcc4345eb61e7c4dab906d3f5ca14af938cc56264fb6e1ad82c3010eac8360c17b4d30fa06a191bb3ecb37b47782cd0c7edf7b31984c5fc59acfa9f3664ccac9eb664a19ae373f8828a90cc0751621e0e813f44792e6b653892b598ff04e8884d9f823ac67e810cf0fd91b155100447bc8bbda38388c7347de94704be295fe5fa29ad32315766155b8ade7efeac19abf36b9f8a4edbb14ad8c22f8001733ccdd2ddbecaf69302624fb972c0d9d3cca0b459eb60ecdc137ab1868411993802f0b1f3d555ca04cbe7b31b568818b0c65133f0a8ed260e72e678fb27bef032054c17b6d6d1b41297b96466931dd8f8a6993d1674ba1dde9478f69efe3bb598e4857adb51ae68a54109c4ac1d3f47386da99f1912072be5c90f2b4a60368b7005f08806b1864b86927368117bae487e79372a2ea204f22293cf2bb26549bf8593d90c71b5bfd156353b082691c28f906d31fa1a053986163cc22bc2967194f5e8ae6ade19a1f3884315ff699ff4d3a81c1abf780e6dd7c221cc97a1ae2362ece235efbbe94cf0f69e8033dd7d2049011f77fb6eb0445e461c530c2ccec48409d5781e2ece4a4ba898fbaf613c1a53eb66aab9a04c0218fcd4692b736494648ee8a7e74025d5b5c1de9ea6c0d885a386eb642b4b7e7cb700902c18abbdd517e7966c483adfae2c87f4a03af3a5912b98bf6e7528f3287f3986c3274181f78ba0a8d46aa2d758abc5f76ea24de0e26460ce4b779f1f5c4940a26378f83bce974db08c34da7fd889f9724148891db8935bc9669457be37480098c03bccbe88e9ea3</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/map</title>
      <link href="/daydoc/2021/10/15/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/map/"/>
      <url>/daydoc/2021/10/15/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/map/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <title>echarts.js案例一</title>    <script type="text/javascript" src='echarts.js'></script><meta name="generator" content="Hexo 4.2.1"><link rel="alternate" href="/daydoc/atom.xml" title="wang's dayliy document" type="application/atom+xml"></head><body>    <div id="chart" style="width:800px;height:500px;background:pink;"></div></body><script type="text/javascript">    // 初始化图表标签    var myChart = echarts.init(document.getElementById('chart'));option = {    xAxis: {        data : ['aaa','bbb']    },    yAxis: {},    series: [{        symbolSize: 20,        data: [            ['aaa', 8.04],            ['bbb', 9.04],        ],        type: 'line',        markLine: {                symbol: ['none', 'none'],//去掉箭头                itemStyle: {                    normal: { lineStyle: {type: 'solid',color:{//设置渐变                                  type: 'linear',                                  x: 0,                                  y: 0,                                  x2: 0,                                  y2: 1,                                  colorStops: [{                                      offset: 0, color: 'red '// 0% 处的颜色                                  }, {                                      offset: 1, color: 'blue' // 100% 处的颜色                                  }],                                  global: false // 缺省为 false                              }},label: { show: true, position:'middle' } }                },                data: [{                            yAxis : 7,//这里设置false是隐藏不了的，可以设置为-1                      },]        }    }]};      myChart.setOption(option);</script></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/项目/济泺路隧道/出差/flink运行参数</title>
      <link href="/daydoc/2021/08/16/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B5%8E%E6%B3%BA%E8%B7%AF%E9%9A%A7%E9%81%93/%E5%87%BA%E5%B7%AE/flink%E8%BF%90%E8%A1%8C%E5%8F%82%E6%95%B0/"/>
      <url>/daydoc/2021/08/16/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B5%8E%E6%B3%BA%E8%B7%AF%E9%9A%A7%E9%81%93/%E5%87%BA%E5%B7%AE/flink%E8%BF%90%E8%A1%8C%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="7ebb4835b03886f8e5d97ad733d138fcbad4a0fae7c56e707823a38c50e38fc4">f29c680708acd02cbb1b6cceaba06192531b0b51abce5d17859480656b5146a353f346f9960449c5486866cb13b2c2a2384713643126939c73b6bacb383ed7be956f24c4a8fbc43f4580e3d5d7b4e0d7ba3495835f91e247b947c6ac31ab000dc33b3347319782948a73e470571c4be9103c8ae56e9f55b89f3cc6fb02fb70310e13aa3687974a54170f9b663a720f0783acd1a000d9f2f6f42047d9d524a076fb921389f85a580a702fabd2d35647be755f10d62707cc30b838ad71e406b7ea87e2850baffe2e04a7c136a6c987ab97ddede9845a2e03e60392ef4fdf92c2bfe6b57d430393601da277da51b34dcd9e1f0fbc8dc1b8bf54ca0784440e07af917d50e027e3b61c3f4008282c6d9e6ad457bc73ffef62bf9fa59b8bc4a12a24ad6d4653c7158d7439f1b2c45b2709ac7841a78e297d151836137da2b27c3b56724d2b110f3fd9eaf095adaa67fa5ad5570bcf187b45f10fd34662e53271d81247644a1d8bc463a0dbafaa082629ae6f35d7ef147725ce8281692c6fa53ae05cceb1ff77dc3082b3df5e3b4ccdee06e318c6fd23a515c026c83a3aa19196a2af9eb28732685bb93e88618ca0661c9681c3dbd93ab7ac85b7d59b5ce519c0ede744650fabd052cf4b68531c831bd4ffb12ccade7ac5c91526427374b4cb929678206d2021af5d44400ac8d47aed00dcde37c33af7a3d02e7de4706863177643e70a6a120346028a1dd847a0798d4c462d3baa65d6c0848426c463b1b5ad79f8456b81e3f1283cd839519a05ddf3389d513c020bc9abb01394e642176759b03f382e390dc5f92a7658cdd9db65440fcb73b43e9c43c374ad5452837e19ab2a26937c07dc327cf11017129eb06904076253e66067dc30e1f6047e14752af144a29d03314d46482bd4a59406b69ce81ed8e28fa04367b60e9a1a1868b4162b0d55c21c984055d30f62bf4118ccf67a6f3bb12e03444cc7dcc668c4364052e01cbba3e7b3f33153835bcb20e9928b036d51cc3777938cc4a369faa62f593b8baebe9aecf16cd7aea62cf8f005b67fe6895c6da7befa6a2cd30237f9895daa422153e98a8dd6ccbfd042f96b7b4f6907428ded1ab40d50ab478497e5234cc2b8e571142ed4354751ed17efb2aa8215a5916d505f9591ccd6a562923a506da911aeccc3303fe84b2cf8e44d4265fbfbca4b8943d1d6c83eb25c22dffe040706f25da069d211d480da0dda5625f927eccb2bedc6c15c0054a8878a2d45ab8ac63ec2cde72d538a9dd106f07f9ee78a312299367f8eddfdff897f16942402b7101d7d4a1376fbd10a37aad82193123ac66d88d912e2a1737dde7483367fe4ce54db4bdae86acb5a3f81c99746d319124b5eea7d19fad72512812175252bae987371725884ef2ea8e0146f236f42e4a3dc68c56949feb4a2cb30c9e5acea5c53436b4f39872afa9eff967ac0e0b03b3372b0b31a23987978354832d3cab8c1f3a8c75e3db0a2f40ac84d95c2a9b2d54a5dc686f1aae00153a874dfb6fbcc67814984cb9012d9</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/项目/济泺路隧道/出差/相关配置地址</title>
      <link href="/daydoc/2021/08/16/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B5%8E%E6%B3%BA%E8%B7%AF%E9%9A%A7%E9%81%93/%E5%87%BA%E5%B7%AE/%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E5%9C%B0%E5%9D%80/"/>
      <url>/daydoc/2021/08/16/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B5%8E%E6%B3%BA%E8%B7%AF%E9%9A%A7%E9%81%93/%E5%87%BA%E5%B7%AE/%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h2 id="数据中心节点host"><a href="#数据中心节点host" class="headerlink" title="数据中心节点host"></a>数据中心节点host</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">192.168.137.61</span> managenode<br><span class="hljs-number">192.168.137.62</span> datanode1<br><span class="hljs-number">192.168.137.63</span> comnode1<br><span class="hljs-number">192.168.137.64</span> datanode2<br><span class="hljs-number">192.168.137.65</span> datanode3<br><span class="hljs-number">192.168.137.66</span> datanode4<br><span class="hljs-number">192.168.137.53</span> comnode2<br></code></pre></td></tr></table></figure><h2 id="kafka地址"><a href="#kafka地址" class="headerlink" title="kafka地址"></a>kafka地址</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">datanode1:<span class="hljs-number">9092</span><br>datanode2:<span class="hljs-number">9092</span><br>datanode3:<span class="hljs-number">9092</span><br></code></pre></td></tr></table></figure><p>zookeeper 中kafka地址</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">datanode1:<span class="hljs-number">2181</span>/kafka<br>datanode2:<span class="hljs-number">2181</span>/kafka<br>datanode3:<span class="hljs-number">2181</span>/kafka<br></code></pre></td></tr></table></figure><h2 id="elasticsearch地址"><a href="#elasticsearch地址" class="headerlink" title="elasticsearch地址"></a>elasticsearch地址</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><br>datanode1:<span class="hljs-number">9200</span><br>datanode2:<span class="hljs-number">9200</span><br>datanode3:<span class="hljs-number">9200</span><br>datanode4:<span class="hljs-number">9200</span><br></code></pre></td></tr></table></figure><h2 id="采集地址"><a href="#采集地址" class="headerlink" title="采集地址"></a>采集地址</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">comnode1 <span class="hljs-number">44445</span><br><br>comnode2 <span class="hljs-number">44445</span><br></code></pre></td></tr></table></figure><h2 id="kibana-地址"><a href="#kibana-地址" class="headerlink" title="kibana 地址"></a>kibana 地址</h2><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">managenode:<span class="hljs-number">5601</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/项目/绥延/采集地址</title>
      <link href="/daydoc/2021/07/20/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E7%BB%A5%E5%BB%B6/%E9%87%87%E9%9B%86%E5%9C%B0%E5%9D%80/"/>
      <url>/daydoc/2021/07/20/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E7%BB%A5%E5%BB%B6/%E9%87%87%E9%9B%86%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="绥延高速相关数据采集"><a href="#绥延高速相关数据采集" class="headerlink" title="绥延高速相关数据采集"></a>绥延高速相关数据采集</h1><p>地址：<br>ip :192.168.10.249<br>port: 44445</p><p>备注:同样需要先用vpn连接。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>azkaban的部署与使用</title>
      <link href="/daydoc/2021/07/06/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E7%BB%84%E4%BB%B6/azkaban%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/daydoc/2021/07/06/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E7%BB%84%E4%BB%B6/azkaban%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="1bebfb4a0c4286485f74ed8c7404114f61e24b0900d998a011d84d1a19dc3a1b"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据中心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/旸谷数据中心/config/datax/hive2myql</title>
      <link href="/daydoc/2021/07/05/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/config/datax/hive2myql/"/>
      <url>/daydoc/2021/07/05/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/config/datax/hive2myql/</url>
      
        <content type="html"><![CDATA[{"job":{"setting":{"speed":{"channel":3},"errorLimit":{"record":0,"percentage":0.02}},"content":[{"reader":{"name":"mysqlreader","parameter":{"writeMode":"insert","username":"root","password":"********","column":["id","name"],"splitPk":"id","connection":[{"table":["mysql_datax"],"jdbcUrl":["jdbc:mysql://10.254.116.249:3306/mysql_datax"]}]}},"writer":{"name":"hdfswriter","parameter":{"defaultFS":"hdfs://10.254.237.61:9000","fileType":"text","path":"/user/hive/warehouse/hive_datax.db/hive_datax/","fileName":"test","column":[{"name":"id","type":"int"},{"name":"name","type":"string"}],"writeMode":"append","fieldDelimiter":"\u0001","compress":"gzip"}}}]}}]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据血缘组件</title>
      <link href="/daydoc/2021/06/24/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E5%85%83%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E8%A1%80%E7%BC%98%E7%BB%84%E4%BB%B6/"/>
      <url>/daydoc/2021/06/24/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E5%85%83%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E8%A1%80%E7%BC%98%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="02698f1b88b9f4647ab0e767d31eb32fbba0a0956c4ff0b89921308719229c06"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据血缘管理 </tag>
            
            <tag> altas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>atlas血缘管理</title>
      <link href="/daydoc/2021/06/21/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/atlas/"/>
      <url>/daydoc/2021/06/21/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/atlas/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2b3577516f3e20553709db79f06399904180d573741a658aebcda1c1ddd05eee">f29c680708acd02cbb1b6cceaba06192d34048633918d15832047c414baf92a4</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> atlas </tag>
            
            <tag> 血缘管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hbase api升级</title>
      <link href="/daydoc/2021/06/18/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/hbase/hbase_api%E5%8D%87%E7%BA%A7/"/>
      <url>/daydoc/2021/06/18/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/hbase/hbase_api%E5%8D%87%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="c77c20a59243781ce819fed30949d1cc771c27f5ce92f6a44f2195acc9f99c96">f29c680708acd02cbb1b6cceaba061923032f7e4dba91a54baae523d10fb7f3661990822ffa3c945fde7651169b8f2508d42844fbba147d7314bb312742199a1dade35be2986b750bfd6a35d822073dab2b382d4eaf63e7833f19723646eaf3f8ac68ee10904616fffd30afca002c846d9c95334d4ef7d40a168848f2795071f106689bbe718e17d5a841473dec6b148d389223b42e425168f4724042c485d8872d0581e276d44055905f6242c4794d7d119fea011ac85cfb0041f7a3cb56afec583eccc4bc9b0e07cb06b34ae534211ff494d38290a627826e1bff6d1621ff57b4d03962e66366c92e4aa1aad1de697dc7614029fd49342307b2ee410eb5267a33acbf321917b91d5cc1d849c1f44327a74d9a2cb238507d524b09883c66c18ed7fbe85b2ff3cc9cedca94a8efb6fa16a9a0b3fe3e6d4cde14858e824180dc06a4960762b19dc14eaaba48a7dab1a9b4780d640643b574d9b457afed28b663f40063fe2ea5667ec0ecdebf2e213e0aecd100a93111d8be13149811422563d348de56514d8eaaf3e6ad8f7403c73a667ccb7dee03453e4d01a66d547925ede4629b4e8cb7e4ac15753c7b41d121cb826251e2d64b64e11cff24850b6ed6f625a605a2c6d4dc07c9676ae6518fac36dd6df40b9168a6b89a965e460d3701c4954884a73f1ce2c570bda1d4fef36bad146ef83fc3b521f07e1588530915e331a21a7499e02420c67492ba40974aa8087cb448c874fcceaa308f856513515781556a9f0f9199ef1595cc4e19f0b6ba9236fcb622d83513861074e7610a62f84265621e650a576eab7669b5e77cb4dcfc9a950bec095227eaf6777892e4b567a437a362e94b626837d51aaf427b82f36ecfe9b3e6191f46d7b3b9a420dce16c9c9a1c17c1a5009f97252fc0f95b261ba40477fc757a998af9b8c88f88c0f800b9a2d9c8586644feb1fca17862ec81f41447b40c7fc2568be7debba7f49d7ffc722ffb7df3afaac803eefc3fb4ee9b462a6419383cc3a5ddcd9859a65246d00603ddecab63fd99a87821c62149b024b45993cf8e78c99cb106bfd6e6d8bc170021fee7db725dd8e01bbb970840366dd10dafd7c882647bc932a132fef05386ca927699bb88894bf03b5e7a6195098f4f46aa3a97ff6542ba19319dbc846747ba4f061d9e8657ac57683c649a7dcbbec1ebad9a15416b1944ef90af963a465fd1adf6b0168401fd559f7381f33688cfa6411547dbf408f99b1f3c2fa2267bac4380ac43e05ec72b9fdcb28df07625de096ab1f5879761afb39e8fd21e19735d5394bc4e2d766a1a475e9499c25499d33e066186cd35659a9a820a418cf0db4602ad61877fdb7821a6c0359f79746de5b78993639196dcfd00163577d1b18a70ef1a21794c3880d1db210171a90da7afdaf7526900af040cc3ac0410dbf9cc2063f2d3843e64aecdb1bbb496f49934ab87e5aee09aea217b7f2a29e917c8bffe763285fdce46768ff47eef269ddb5cad07211d3d0d13ec716ab039d16492a3e387d9421e4c69c146f722e0fc6581235dbb0f5ee05eb0287830c24b3ec0b1c881c44e2cea8ff2989d5245d41c5b048f47deda2e1e2ef42fbb1089ee97ca92c5c9ba5459b5c88c9e7f3ab0a5452c48bdcc7bb563e51852276274407bcb2820c54fdf918822461b477e90b0a82e260e3110d85a6eb469edbfafa0087f6351c53fff097251cdba9044893c6efb9b76ec9b2d586ca0618afc315e17903f176327c2545459833b500564ecafcb8610c33fdac30dc51b9d481ffba4730afed55e361152b6d1d5caf2071f394d5cc6ccd64d62679a68c890cbb8703e23673d7c74077996a009a641d6bfb74366efe4c3076400934792f99b76520d50d74afb88cfb0dfeda4997d46089099db6c3371adfe33f8fef4d063e6db9c594d1fb0ce025ff55a6c0e47965bb43381c18e8060e3cdfc1b3085ce6c2a05a6e252985e9316570b01244a08f42cfa46c8a541df3b91ac4f54e4aa604138b9b7b56e13b81d39b128f7aaa29c0e5fde17355ee714685abfd26fc66c29e334aea3967bcd60a0cc288ebff113c34eb8ce8d4db5e63a01d4fcb517c5cf9d3f2af359009ddcc9f2dd389933ba2526fde6093e365d8b72e13e4b0fe596cb39b5b0454bc77b549d0fd5e621e1bbfa27b3ae0c15c1f52fa9fcf1f775b6971f22d5f5ebf8776e21f6bc01cd592ce8d2a0569c6398e2a852321a7eeec6a8c9587210e9ee42cc2a73fd3761b04920cc535427c185e2e3f767bcdc9cebcecfd231e5e63290dc78cce1d5fed38cf7b684f4ecf705b6e4cb3a2e85036ec6d99da481a775a7cf9dacfe3269e08b88b0a6a68d7664ef5c585fe4d04910c542a10e7c1636c50786419509484b19a3b8fb781db298aff5a74171d98b65ef00677cb180c61652c2986f96c41f1b88a07bd6cc33309f2f24896dadee2e130c26fda0d293961a0d2559f8ac42dd70feefa33824aa69c10da109f6aeb8e7aab5c12c3b646867edff9322e3a87ca28ddce46ee8382c55c4499e5365f37b68718b68de45848d536a0c04354fd39c6e6501d51e9cfbd7ce02ad8f3cf6f09e90aa16c265f0dad4b4e067d8193ab2546aa9bea39c878ede05baa127d3abed1b41ecaf1dd5678e35f9707610aaec2b4c54f133cdd5b0ecbb2d13e1968a2a2e31f0d03cecfc7bef2700649a66dd24fc6872ad57cdc29ecf7d98afea493c4878ea74841a2873ad49b8b9f1b5828df989c0b4a4cd3e23b5f8b6309ffdff5b8cc03449e82bb0a52434c3dc5dae5713aca60eaa7b03dc08fe7fd8651d5a6a776cc9529c3e14f09edd4e11af1d77c4ed38ac3386181f806d14385b145b1dae8f69ea44d63d510755d5af2e775895be118d907eb1c430aad9ffa71df38098bd57b72f4f43a2ecb16166877984aa511c20b50c26b27e9dca2d17682eb18f3272063d9a94b3914702ff21474e176734d4acd700c27cba46d8c45fcca6ae9c70cb232cfda56cca5c5e4e3e24a02e5616d10a147b8bb8a33c79e9b8835eb0183bb16c13d0f987bc998b4d8a7b3ba24b1d2973d398074b17fb8ffcaa70c53b71a40ddab5e3db71fb85db815eca6d969c71db83e2e022c9530ea7cbe47d801a6447168422a90cf2a3d46aec26c215661363c3ce7ba066f5a2f1bf7156da1c6fd3f57b28ec4ca7e1d84adbb1870c19c462e241549ab4ca1bbc509a1ae4585933f8507fc8dcf4247b42d1839494d8ce7794643f9d36ee5b93e2336feb05e39345e3998218de6953a68815b83698ac192891c71b2c100cc8d1292c3fcb4fe2dd34369bc794da97182840005b8fb5c4442dd5cc89f44257d76b4990508e1619cdd0f0758f66e55a31debce4eb528479bef5cb5050130f309aebdb450d7b8d83e3a178d63ebc0d477d1c2d91513b245bf35d8eae67a20d8d68ec374e6cd6698a8b0a8eaae47a2507679bb36054d559d2bc2e0f8ba4a22df819513119ced8d944eb3ef059617d3150b8d14994ea8dcd524ee78114384ebed11194571cf600f834b0277855841b8b6e9abb530495b8df5ef13bc23d5f2a54fd73eab4707ba6e139506ac1bda82dd63d6286464cc8562480a4c8a3897e0406117ba01123b91255bb60baffa4c41e063d148b8dddd450a31d8d51158da818df1d066dd6d11e0f946b895104b0c121a3fde9de5103f1b1945e9220dbb698d1ade9907ee56d707b6b592f1497c03f88ee3a7ef58e9d5aa251fd08e9ec44626347dd828f936836d278cc8ac54d2747eb03e77861b9090afa1c52e68a81aa5203047781638f2065839c1cce46ae952859b5c1d5b428914ca2929b81a8364ed574ed9a07505e0bcc3eead9a45715aeae62e91839e686515fcff8c713ea944b99fe3aa9d5d28d88edd3d7edf787fc0a0ac2f4bfdd2441dbe72c092774c4319d56f0f5b2294715121ba2106892416f04938d454bb475aabd6b5e2ae439be7ba101cf75002407de26713fcfa15dabadb72fb40690da8c83136877344a24463d15a8c01ba3f3aa98a8a79f878bb955c853168678682fa5bfb035b86163cf5ac65777d82147bceca10a6670111d1dd4b4f1551f4abf724c8801c876f4a0d4acea2d7e2f393df1f3738b657ec1b621dc6056198fc0385679843cc14be29d36fa6e9064a25d5d6c2d621a98970be0f7afad3f62347f1b45df977d8b046deb14460a864375051a2c0b07d81ca99e7243fb69e6ac17ff29180f5f177cee0aaba4eef20bfc90c00bd9d915ec029aae8cdc45ce6561178d614de3a5fede3a34ecb763a5367d1d4c3430ccbc67187351943a198a3b83d3007b369444dbab2c28c23b74bfc7cdbaa2bd54ef386f3d00ab3c8bffb25958dc6ee6a434dc73cc0b3a020dbfbe84f99186519b4df649b1d75d87be091c00926545e00214ca084f058ec9ecbc4f91a7b297feb98091ff3a17123b63479bfdf2e738f71e28b0bf22e04f736d4812859328866c25c7755f95eebbc30eb280192bcbd372f79682780b6ec8724b332cbcb63fe78621d74501b90c08885e1904dc1c49ff9d8ce53966114586327694e755fdd4a1730ebcb25b672a6f3f6d2f8ad78e3452fb62f7f3594368566036c260822d8d487497279f79da9bf3f44a81ae878a0e1b4c14062bd58d72d2a85d5f656254eed57ed4b529636b18f00200fef1b34eb6d2b2a5017da503c861a5726608bdbd50ebffee9a1ae50c4e7e5847e60531de3a3cfc605ccb08d872a03b7375096e523c83a8ef86256a5e73ddaa608d1e99c81dfd197372e7585df6d60f3623a0a5eff079a215426bdeafc37e760edf0f3fab6c4115a53706caec44537adabbe50a5a53b19033208bd73a5309c1f11d5b1e4d56bf29bc02040234327d92a6eb695077c1e9dadcb87fb588fd7a3be69d28cbdfcd2594b4fe0197411449fd35aecd8944dd8bd45a1fc42689cc7529775551b6d0174affb60b280217c9a766664807535cad331909ed78d16fe0b9509d1917d9bf33f3a7995462570363846f9b7e0dc81</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> hbase </tag>
            
            <tag> api升级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spark-streaming</title>
      <link href="/daydoc/2021/06/07/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/spark/spark-streaming/"/>
      <url>/daydoc/2021/06/07/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/spark/spark-streaming/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="cb03d39d3a47d576016228e03c1d513caba0f6b0468baaab09b303a1c1b5aa20"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> spark-streaming </tag>
            
            <tag> 流式计算引擎 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kerberos部署与使用</title>
      <link href="/daydoc/2021/06/04/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%AE%89%E5%85%A8%E6%A8%A1%E5%9D%97/kerberos%E9%83%A8%E7%BD%B2%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/daydoc/2021/06/04/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%AE%89%E5%85%A8%E6%A8%A1%E5%9D%97/kerberos%E9%83%A8%E7%BD%B2%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="a285e1b333a1a80bdb1b9a79261751ea5e87540b4ba5c13c6809c326ca1dcc95"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> kerberos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据中心安全模块设计大纲</title>
      <link href="/daydoc/2021/06/04/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%AE%89%E5%85%A8%E6%A8%A1%E5%9D%97/%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83%E5%AE%89%E5%85%A8%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1%E5%A4%A7%E7%BA%B2/"/>
      <url>/daydoc/2021/06/04/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%AE%89%E5%85%A8%E6%A8%A1%E5%9D%97/%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83%E5%AE%89%E5%85%A8%E6%A8%A1%E5%9D%97%E8%AE%BE%E8%AE%A1%E5%A4%A7%E7%BA%B2/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="16fda5d430e5be3d0266c7554ba62fa9726b1bc60c51af28f121a39116335303">f29c680708acd02cbb1b6cceaba061921c50cd678844d380083157fca95bec928aefef60e6a2f6c91d1b34a897187843b0717f46f30d730f533c4fd32ddf013d976bb69956643a601e059b65ce0a4a8446d66cb9047b5fb9d3698138367d6db7a7a0276aba492b2acc42abc22f64a1751b6dc3d1200049c1289b6b0a490d76e237f5de10a88e19b1e10280c3b4e23930e39b256367c5837f9fa2d81cc2fa7a77469e4e97e71006a5170c2f3c8dac3498139256681389793a3c61831df7de7b4d148918b804f0b8f7d45cadfa8f3775067b0398a49b2205ae13bca75781113e44daa8f52a6ee71e4c4074227534fbcddc93300044745aa8eb0c2f1825eadc70aa2917490ed56838af74d9601c8529ac98867b30d6ab9fabde20f75f4fc81e5bc1c44bb72719acf1362e3dbcef9923a6f73e59af8faeeb973dc9d6c0f20ec2bf72040be6dde920f898259a82a2793f26150d91838cd818b333f8fb6408c07c2dadaa6bdb30faf4c108a0c7fc89f97f3dd132330828eee666116778bd7fa43a8cdc5254d4176c83431c5e0c891f6efa4dcf690fe0866234b76a413a3aa2e601c9223a330e38d10750cb7ba7635ccef1db139ed276c4ba9e014d421edf97971fc3f591c7b8ea39f6f3aa51e66b4051cb36b48c122559f335bec154b5840f12364d12d2b0ed113a68720667bdf8a78027ebd982340b15762a5e18db5063168bec2986d8b0a9d82c6b73035bfc726081de6c83305af24d198ff316ea0995c9bc4801db</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 数据中心，安全，kerberos </tag>
            
            <tag> sentry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flink公司环境部署记录</title>
      <link href="/daydoc/2021/05/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B5%8E%E6%B3%BA%E8%B7%AF%E9%9A%A7%E9%81%93/flink%E6%9C%8D%E5%8A%A1/flink%E5%85%AC%E5%8F%B8%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E8%AE%B0%E5%BD%95/"/>
      <url>/daydoc/2021/05/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B5%8E%E6%B3%BA%E8%B7%AF%E9%9A%A7%E9%81%93/flink%E6%9C%8D%E5%8A%A1/flink%E5%85%AC%E5%8F%B8%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="862f9f55bb3f1de7a96d39efa6a3f3abc928de8314a3442646f0afe507b66e67">f29c680708acd02cbb1b6cceaba06192aac0c8be8eba48a0d8d8942e63bd9b4f39178c070aed222126e547ef17918254f0b327adbf0334021ca7f11c1d82505039a674a08b34bfe062a71efa4e7b8dd5f8b3833b6704a9817a09238f0db82c00d538fe0a6e7be2935ebff1c3f27284fb46a842888543583a89e8e63414569fd62a87b1e66871e32c25f07407962064daa7fc6e8153fcc096d23ce719111ff0cdcc387a82d34303f2918a64f5206a0cde5e5ee85760124aad3b2e7e7a4607a49064b78af50a260c4c3450c011e4300125ef698729c78de10c6ce9275df11666cb5cd20b673c126890e10c4ac97a5d47b73251c6ad4d13e9f32004c3122503863d593dbd81eff42c289349f49110f16655e789f1af7200d9fe0bb40df57cddf780fe2039a4901d1711ac0caa96650dab6128f32e9d97498150cc3eb31d4f5dd1c65fac2c24ccebf9da5b643df627328c05727496cea0585af949c73228262374e0c6cc8a2218a0d2a2f5734f0d2c844821a4099d5358f9f684cdc88c7f52be2a2797acbeae0ab92108a8a7c10af033d252677603f549cf13ce90914ecb8c86718021251230fdfbba6dec6d0162a7eebbc239f8f935482fb2483dfa202e2e61b20e7db14a0c54fff4d8018c75e850b50ff76df55f0e76bcd935c6038c644bb2384d8e0ad5e07be0d66ff9315b6ee45bcb4959ec9110c9ffca922a7fb417f45bfb05d6d3535f46a5278728688da99d2d48bb246c298ab94260852c8d0f3c0173aa56e4e8ed487c12347daeb84719ee6a0d79</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/杂记/汉口项目公司服务操作</title>
      <link href="/daydoc/2021/05/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%9D%82%E8%AE%B0/%E6%B1%89%E5%8F%A3%E9%A1%B9%E7%9B%AE%E5%85%AC%E5%8F%B8%E6%9C%8D%E5%8A%A1%E6%93%8D%E4%BD%9C/"/>
      <url>/daydoc/2021/05/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%9D%82%E8%AE%B0/%E6%B1%89%E5%8F%A3%E9%A1%B9%E7%9B%AE%E5%85%AC%E5%8F%B8%E6%9C%8D%E5%8A%A1%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>将采集回来的数据导入进去</p></blockquote><h2 id="elasticsearch"><a href="#elasticsearch" class="headerlink" title="elasticsearch"></a>elasticsearch</h2><p>思路：先建立其它名称的索引，导入新数据。再通过别名等形式将索引进行更改操作</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dts">POST _reindex<br>&#123;<br>  <span class="hljs-string">"source"</span>: &#123;<br>    <span class="hljs-string">"index"</span>: <span class="hljs-string">"hkem_electricity_data"</span><br>  &#125;,<br>  <span class="hljs-string">"dest"</span>: &#123;<br>    <span class="hljs-string">"index"</span>: <span class="hljs-string">"hkem_electricity_data_new"</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dts">POST _reindex<br>&#123;<br>  <span class="hljs-string">"source"</span>: &#123;<br>    <span class="hljs-string">"index"</span>: <span class="hljs-string">"hkem_electricity_device_status"</span><br>  &#125;,<br>  <span class="hljs-string">"dest"</span>: &#123;<br>    <span class="hljs-string">"index"</span>: <span class="hljs-string">"hkem_electricity_device_status_new"</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p>导入新的db数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs plain"><br><br></code></pre></td></tr></table></figure><p>bootstrap.servers=kafka01:9092,kafka02:9092,kafka03:9092<br>group.id=liuyin-flink-01</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/杂记/汉口源点项目相关信息</title>
      <link href="/daydoc/2021/05/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%9D%82%E8%AE%B0/%E6%B1%89%E5%8F%A3%E6%BA%90%E7%82%B9%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF/"/>
      <url>/daydoc/2021/05/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%9D%82%E8%AE%B0/%E6%B1%89%E5%8F%A3%E6%BA%90%E7%82%B9%E9%A1%B9%E7%9B%AE%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p><strong>汉口内网地址</strong>：</p><table><thead><tr><th>访问地址</th><th>目的地</th><th>host ip</th></tr></thead><tbody><tr><td><a href="http://hkem.cdsunrise.net:28666/#/login" target="_blank" rel="noopener">http://hkem.cdsunrise.net:28666/#/login</a></td><td>首页</td><td>192.168.10.238</td></tr><tr><td><a href="http://hkembig.cdsunrise.net:28666" target="_blank" rel="noopener">http://hkembig.cdsunrise.net:28666</a></td><td>汉口站能源监测可视化分析</td><td>192.168.10.238</td></tr><tr><td><a href="http://hkemreceive.cdsunrise.net:28666（后端）">http://hkemreceive.cdsunrise.net:28666（后端）</a></td><td></td><td>192.168.10.238</td></tr><tr><td><a href="http://192.168.10.238:30600" target="_blank" rel="noopener">http://192.168.10.238:30600</a> （后端）</td><td>service</td><td>192.168.10.238</td></tr><tr><td><a href="http://192.168.10.238:23232" target="_blank" rel="noopener">http://192.168.10.238:23232</a> （后端）</td><td></td><td></td></tr></tbody></table><p>用户：admin<br>密码：admin</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>logstash 安装</title>
      <link href="/daydoc/2021/05/21/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/Logstash%20%E9%83%A8%E7%BD%B2/"/>
      <url>/daydoc/2021/05/21/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/Logstash%20%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="24eb3b1d7ee67eb043828ca943c42a834399786eda191b03e7885eba2f15718b">f29c680708acd02cbb1b6cceaba06192c69a5170d774c3c7841ba1be5a58d4df439424f5a8858c881f343be741a8f215d8b42a13f77bb82c23ebf2c8153784ccb046a91d0223cc2b9e4e33a194b32085cc716f7b5a2fdc181f21ba2c28d70ea8caec76393ea25ccc490a23a6f771cc6394a1e9bc68c4016085253c8e224ec8669436b3a2ac0ab1d3e0a60e23b87acf2bcf3d56184cd0944a8bce544a2389aea97328f98be2ec740bd9f6c665825bbc0e3cbe881c9af0621861dd3e4af8fe7fb88c4f6123111957107c40a3e09021238b6848107d6e6d20767d1b2efa48d68f99a4cd3eefc8be04dcceb1959a777540eec0862d14d457a394cf2539bea1fb640ef39fcf132c4774573a278317b51dbb260f404668ebedb597fe96cb37d73c0cda748c8238ffd8ac4136955126a47ab891e892cf4c91f7153806fc5df16854a11ab9a20e1bab588a085e3254216909194ceb3e8b9c2ec9a87b3ff8792eb72fdef6ae5f658dc32f4927572ddf43b8b163ee8ac18b4d36a901ea5274077b0595961b36ce56d19ebc8b7a87092f7221abf1e2abc793b2d99cb725e34e87908ad77319954b3d70b24b91294ced8d3397b7df599081025621081932f57b68055a09ddeed3798be3b58285f43c21606356eb230bdcb10bcc29cd443ab5931b150da9fc6147ffbe998ef1038ab50129a57780bbfe68c81420dfd2a66699faa2419b906339659e69afd20318d8bd86d22a324433c1ccff3028eb6e50dbfccc2b19fcbd6e6d841d066977490c30c4761682e53b7a162c1355b882f4c06ad47e2cbc8344805363a2cdf2ed3a5a2524a5538d43b1c127aca04327e89c285910963296ab74b323054e04b2d99c0d26b2d605fa39489885aabdc53af957118042de146104b2192efce30145f7726877ff67dbc120c86b87d9cabd1f346a67a93b771a88a70b54b52bb86abce5d326626d806738376ac6a34215bd368d7125b346bb86f4522add14830200975d4062bf540f8194cfc56467f0757ce9fdce4a27407b14953908552628fd777d41b437c535329e56c84ae39d70f5c7a49a956d22204d0d2cba7b62648dfb0b172193bed48c7129b0276a1026c66d8bffa2890369a38ea377cccc0fb41999f20a9491639f6b499c78e399652434bc887aa8e784702b51499454061a5cfb3b3507a360fec4c0ca43d6d572c8003426885957ebbdeeb872875e9e1b9e0164688d1795ec0e0a92d75cdf99421daf3aac295e9eddd553a6752a5aded6fcf330b8afb21234ec98d42bf64dfbf1d73852761515dfd742548442af33a2a42e318be125abac5adf53a41a0e2c3727c2e67f2ca01c6462181f7c468c054195f22c5d813b306072ecbdc1748a53ff90c1fd045c0293453a14019e3a318fb56d4b7039a7c62e47b5fef6f594711aa4dfea67b77eda049ce00cf959606bde6a68d5b2b8876f2c12a55ff1ab08767648b6a9d0814eee57739b271374943ead46efcc3e9143ae7fa42a088f8ff28d10559334b1a91147d47794dbb87a726283f2b68540a65911dac5ee516e0d183dc9cd2abc734586bb4aa13957c228f9a3017110f5526c8a9fff6824da169734b827b7e27f181c3e7bbaf0924f013066c2c463f7f48d2ac5263ec6f95254b25280e69c72ba444e5e755184cc7049cf0c3015b38496e908bd295d83d2a92c83621b5c254b5a9c26aef7dedc37825e9c17893c5ee8986d89b602d3eb1f8197beeae45a2c52576b202fdff8d30455e44a0a22748f90cf01d6b2089090da35da0770b3645a82301d2e66069a5bf9bffc0add2058b08a5ed7b1f42f934325632a66f6859b5deb55d29a9f9f0486dbb265073ca3d546f4574f2946b8aa65dbc11602e5aa6666d14929392a1c9ad5207a78085f3391faa6d406ef0e04dcf1707ae6ed26ced796c1076a7354db8cc5a21be4df78f4df0712cc3a71446325ca1165933757082d0c35335be3f433b71401eb97867c73bd2126798a129014130e809ea94ac38b52fda0e0664d3dd4c54cd9fc62cc8c68b68957d2aa1cb99a0eb484c089f5ac9ed564c9ec7defc203ee5aedd35e71b76cfc92ceefc0ea40045be4f412d2c2e6422bc4d6630377cdf017ed61b7cf5ef7de3a7eefb2738c870e9bac9df3568b90ebf0507a1f8a</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>组件管理</title>
      <link href="/daydoc/2021/05/14/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83%E7%BB%84%E4%BB%B6%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1%E5%B0%81%E8%A3%85/"/>
      <url>/daydoc/2021/05/14/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83%E7%BB%84%E4%BB%B6%E7%AE%A1%E7%90%86%E6%9C%8D%E5%8A%A1%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="a016913b595516d9bcbe58cc18f9d7f5bb0e157c7cf7464d16f6f32883179c5a">f29c680708acd02cbb1b6cceaba0619296d3fa78f2e16f88118d9eba949419ac137aed805b0cb037c7a62de37b1082aeaa818ad36ce47a5286d0741863c8f6f167fd9c154328a597c70d125d49be448f51def2aa1c9f37a8f8272a0fa25e2c75059bc5347e3f782ebdd63e4322bd901b7b52bb895f9dae9ad62706eb7b416416f432f9323e6d50782f46c7c61514a609c3613c09dbe875dc1d0078da1598f384a6646aafa0966bed0d74a87c6e239736f65cf5e9f35cf17b3cfd07cd5fbdbbf9afc68ab0fbf4158b06dd09c07f67826dd9a9a9b645de4f6963dec69a516c9667ed55fcb06ef1faafd6be99408f31e108de527559c2c697c06894881ea1a3d47173e4ecea339b831bfcca1b71fcdc24928183d18cba5bf557cad54f2ac9e467e661a4cc4956d79a23989555252023d5663ee547008b439eb593b8b2231c40567b71aeda27fc71e7b08671339be9f10915d75494fd7335953961d14ebe0557d8c0255239bb622eaed99ed8e0772a25ffea05fcc84b5fb89cea3386affd4d641091ebf6f48632eea16e5ceb633d450a92d64632c5a64201c15627d25ad1318a7830b3e40e467c542eb1e13f74dc4aedfdfa5fa3dd159759d7136197b0524511481f</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> kafka </tag>
            
            <tag> es </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/项目/绥延/kafka测试环境</title>
      <link href="/daydoc/2021/05/08/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E7%BB%A5%E5%BB%B6/kafka%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/"/>
      <url>/daydoc/2021/05/08/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E7%BB%A5%E5%BB%B6/kafka%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="2d680f660cfba89b8101c02fe02b2e721ae68d936e3bef8b2915b08352d594c8">f29c680708acd02cbb1b6cceaba0619208b29a73544e30f4f55f9dfffa3ac11497b9911e232fcc97c1c85290a67dcb0ce896a660d6b8701946dc9cb2971014b94e768a0e6c5b3b111a708b56736a71bde92c84d7a54ec7c4bb0a3529d0819f1b8022e79c1ed27b8bdd5fb29087aaba35a5974237feba63fda6b970bf5e7c306f68aba6d90ecede66e029a1274c394f9fad821748e7d8b3677c05387664b1380a0047984c66aca940fdf97e70c7a66ecba333764197de878c43cc0d0adbc8eb003a12a2f623c762d4d43f097fa3038dd57f60f5bb383d7020944f729c49c7ee6129be651aae2a047419d02c31fad109a93c04977f9497dcb26d77ddca0320a6db645f84e2a7f8ac9abbe0f950f23a11659e8a857b4004f69cac71faec1ed74ecfc10e2cee01cf428e0c3c4e47a17f44e7d01dd3b0b211a440ff7e25545dbeda261d524bd4c9857f366b24b0397aac5a2034b6f26346537cb21140742982d6fa68251a68413f394778a84032c685f1eaaac8575cffa47d6892e0eacd2fd927f96c6b74973767bd72c5d1bd38982558da1cd261f0485176dc00b73c3e1d2c3f1add79112a3e68efbb70842df2fafb8511162c6fb23d30fdcea4b935f778eb5b49ea5b81691fdf6e61a267efc144ee5ab8071a1d58322a6c1ee3af952e9250211b3e19700fe1d8816e256a41fffb18e4b5e5956c7b4094e39e1e9137ffd81889b45de162b52c902e41177604f0f5227874187f1c7132605b16575bdb6238df86d71e7c1f43cc9d65e660d217a6785ee474af10bf5d0e1c45525aed7847699c37b96ebe45f6a5a9e06ab7918ce6b6c8bcb614</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/工作/项目/洪雅/大数据验证</title>
      <link href="/daydoc/2021/05/08/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B4%AA%E9%9B%85/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81/"/>
      <url>/daydoc/2021/05/08/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E9%A1%B9%E7%9B%AE/%E6%B4%AA%E9%9B%85/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%AA%8C%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<p>Q1:元数据管理        元数据管理包括元数据定义、存储、查询、维护、检查和分析应用。        </p><p>Q2:元数据存储        元数据存储的信息管理范围：数据源接口、ETL和前端展现等全部数据处理环节，并提供对技术元数据及业务元数据存储。    存储在meta:topics,可以通过命名得出对应源接口、ETL服务名等信息.但部份环节无法对应,即缺少完整环节记录。    </p><p>Q3:元数据查询        元数据查询支持对元数据库中的元数据基本信息进行查询与检索的功能，可查询数据库表、维表、指标、过程及参与的输入输出对象信息，以及其它纳入管理的对象基本信息，查询的信息按处理的层次及业务主题进行组织，查询功能返回实体及其所属的相关信息。</p><p>Q4:元数据维护        对于元数据的增量维护，可以保留历史版本信息。用户使用元数据基本维护功能，可以统一管理所有系统中的元数据    </p><p>Q5:元数据检查        支持对元数据数据质量的检查手段，在元数据上线时，对元数据进行稽核检查，保证元数据信息的完整性，合理性。    </p><p>Q5:元数据分析        元数据管理能够通过血缘分析和影响分析，定位数据问题产生的路径，并评估出该问题对平台其他数据或应用的影响    </p><p>Q6:模型管理        构建专业的模型设计器创建、修改和设计所有数据对象，例如：事实表、维表、过程、索引和触发器。无需编写复杂的 SQL 来创建、编辑和维护对象<br>Q7:数据查阅        构建视觉化数据查阅工具使运管团队高效创建和编辑数据查阅方案，而不必拘泥于语法和命令；选择想在数据中心中执行的操作，所见即所得。</p><p>Q8:同步与迁移        数据资源迁移主要保证字段对应、代码转换、量纲转换、数据合并、数据拆分等功能。        </p><p>Q9:导入导出        从不同格式的文件导入数据到数据中心，例如 Access、Excel、XML、TXT、CSV、JSON 及更多。同样，可以将数据导出到各种格式，如 Excel、TXT、CSV、DBF、XML 等    分别导入Excel、XML、TXT、CSV、JSON格式的文件数据到数据中心；导入成功。分别从数据中心导出xlxs、CSV、txt、xml格式的文件；导出成功。 没有导入Access、和导出DBF格式的文件截图证名    </p><p>Q10:计划任务        设置计划并在指定的时间运行，不同数据库可以在同一批处理作业中统一调用    进入Oozie Editor界面，点击添加计划任务；进入任务编辑界面。输入任务名称、任务内容、计划任务执行频次后，点击【保持】；计划任务添加成功。需要描述下怎么实现同数据库可以在同一批处理作业中统一调用    </p><p>Q11:日志管理        实现日志信息查询统计与分析管理，包括：登录登出日志、访问日志、操作日志、日志统计、用户状态管理    进入cloudera manager日志界面；界面有显示包括主机、日志级别、时间、源、消息等相关日志信息。任意选择一条日志，点击可查看日志情。</p><p>Q12:运行监测        提供平台系统各种注册服务的实时监控，包括该服务的状态、运行时间，同时可以对平台监控的时间间隔，是否自动启动参数设置和应用    进入cloudera manager集群界面，界面可查看设备运行状态、运行状况、状态摘要、运行时间。<br>进入cloudera manager配置界面；可实现自动启动参数设置和应用。    </p><p>Q13:调度配置        在统一调度平台中以数据流作为驱动，通过控制中心统一进行调度配置、进行作业命令下发、状态收集进行控制        </p><p>Q14:调度运行        支持基于shell脚本的调度，简化调度过程并判断任务成功与否；支持基于存储过程的调度    目前系统使用的是hadoop、yarn工具查看调度情况。    </p><p>Q15:调度策略        依据业务要求，调度策略可分为：时间调度、手工调度、消息\API接口调度、优先级调度等。    </p><p>Q16:调度监控        系统支持对所有任务按照系统、按日期对任务总体运行情况进行汇总展现，使得总体任务执行情况一目了然    系统采用Apache Flink Dashboard进行调度监控；可对所有任务按照系统、按日期对任务总体运行情况进行汇总展现    </p><p>Q17:数据整合服务        对原始数据源的关系型数据库、普通日志文件数据等进行抽取，并且对数据按照用户的配置进行数据预处理等操作，然后将数据存储到大数据管理平台中。    数据整合服务是通过代码层面实现，不属于就绪可用软件测试范围，不做验证。    </p><p>Q18:资源管理服务        对各种需要用到的分布式开源框架进行整合和封装    资源管理服务是通过代码层面实现，不属于就绪可用软件测试范围，不做验证。    </p><p>Q19:数据分析服务        封装各种数据挖掘算法，如聚类、协同过滤推荐、关联规则等，用户可针对不同的数据集选择不同的算法，来完成特定的业务分析任务。    数据分析服务是通过代码层面实现，不属于就绪可用软件测试范围，不做验证。</p><p>Q20:数据展示服务        将数据分析后的结果通过图表和报表的形式向用户展示，或者直接将结果数据以接口的方式对外提供。    进入可视化文旅云图界面；界面有展示游客人数检测、旅游交通监测、旅游停车监测、天气环境监测、旅游消费监测、预测预警监测等数据。<br>进入数据中心可视化接口服务界面，可通过接口方式将结果数据对外提供。</p><p>Q21:多种场景模板        提供区域板块可视化呈现能力，如地区板块、行政区板块等    进入    </p><p>Q22:多种图表组件        如饼图、线图、柱图、流量图、堆积图、K线图、计数器等<br>Q23:图形化的搭建工具        提供层级结构可视化呈现能力，如树形分支图、冰柱图等        </p><p>Q24:多分辨率适配与发布方式        对大屏展示提供兼容        </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sql储备&amp;练习</title>
      <link href="/daydoc/2021/05/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/sql%E5%82%A8%E5%A4%87&amp;%E7%BB%83%E4%B9%A0/"/>
      <url>/daydoc/2021/05/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E6%95%B0%E6%8D%AE%E5%BA%93/sql%E5%82%A8%E5%A4%87&amp;%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="6624cf441a9f8d213eb8f6dcf1d608df4232b2c0dfd347c54385cbe73759555a">f29c680708acd02cbb1b6cceaba06192ef928afb568f40fbf5a30db53c15eb28faba7f13ec547c4b4c4d6da8da9b0befb108ec694a33301f81770f1e74f8c39dad3869bdb751c7b0eef94048f8399b465125d26d3edfeef1e6ff91e4fd16e014f38c6c04d8e779ea4b1326074997a981121d05d8a52707eb7416927878a2a02eac90f416a9f90cacb4e6ea43b7da56061394fb3d6c6d0a7ffbb9d1a326309888</script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据采集服务</title>
      <link href="/daydoc/2021/04/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%9C%8D%E5%8A%A1%E5%B0%81%E8%A3%85/"/>
      <url>/daydoc/2021/04/28/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E6%9C%8D%E5%8A%A1%E5%B0%81%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="90d6bf70afadcf45392a6a8752966c4bdfede892a6d9cee3b75f6d9b38f11d27"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> flume </tag>
            
            <tag> beats </tag>
            
            <tag> 采集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/考试/电子科大2019招生收集</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%80%83%E8%AF%95/%E7%94%B5%E5%AD%90%E7%A7%91%E5%A4%A72019%E6%8B%9B%E7%94%9F%E6%94%B6%E9%9B%86/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%80%83%E8%AF%95/%E7%94%B5%E5%AD%90%E7%A7%91%E5%A4%A72019%E6%8B%9B%E7%94%9F%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/vue/vue</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/vue/vue/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/vue/vue/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/prepare/数据储备</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/prepare/%E6%95%B0%E6%8D%AE%E5%82%A8%E5%A4%87/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/prepare/%E6%95%B0%E6%8D%AE%E5%82%A8%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">采集数据,留作备用<br></code></pre></td></tr></table></figure><p>所涉组件</p><p>采集</p><ul><li>flume</li><li>logstash</li><li>beats</li><li>elasticsearch-dump</li></ul><p>传输</p><ul><li>kafka</li><li>flume</li></ul><p>存储</p><ul><li>elasticsearch</li><li>hbase</li><li>hdfs</li></ul><p>step one : 采集数据到elasticsearch</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/blog_sync_project/plan</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/blog_sync_project/plan/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/blog_sync_project/plan/</url>
      
        <content type="html"><![CDATA[<p>about two git project</p><p>one hexo .<br>this project is used to deploy the files;</p><p>two : dayliy_doc</p><p>so I just divide the project about these parts</p><ol><li><p>pull files from github </p></li><li><p>list the files;</p></li><li><p>choose the files to sync. </p></li><li><p>push and deploy;</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/运维/about云账号密码</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/about%E4%BA%91%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/about%E4%BA%91%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>account: wqkenqing<br>password:125323wkQ$</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/运维/tmux上手</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/tmux%E4%B8%8A%E6%89%8B/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/tmux%E4%B8%8A%E6%89%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="使用tmux"><a href="#使用tmux" class="headerlink" title="使用tmux"></a>使用tmux</h2><p>mac os 通过 brew install tmux</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">tmux</span> 接收快捷键的指令是<span class="hljs-regexp"> ^</span> + B 即mac中的control + B<br></code></pre></td></tr></table></figure><p>窗格的操作</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm">这些操作都是通过 ^+<span class="hljs-keyword">b </span>来接收<br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">操作符</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">%</td><td align="left">左右创建两个窗格</td></tr><tr><td align="left">‘’</td><td align="left">左右创建两个窗格</td></tr><tr><td align="left">x</td><td align="left">关闭当前窗格</td></tr><tr><td align="left">{</td><td align="left">前移当前窗格</td></tr><tr><td align="left">}</td><td align="left">后移当前窗格</td></tr><tr><td align="left">;</td><td align="left">选择上次用的窗格</td></tr><tr><td align="left">o</td><td align="left">选择下一个窗格</td></tr><tr><td align="left">space</td><td align="left">切换窗格布局</td></tr><tr><td align="left">z</td><td align="left">放大窗格</td></tr><tr><td align="left">q</td><td align="left">显示序号</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/运维/京东云</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E4%BA%AC%E4%B8%9C%E4%BA%91/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E4%BA%AC%E4%B8%9C%E4%BA%91/</url>
      
        <content type="html"><![CDATA[<p>114.67.107.246<br>wangkuiqing<br>eExfeTmKkgRJ255SRRZq</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>操作记录</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><p>docker run  –name fid_state_new -d -v /data/query_sql:/query  –add-host  data1:10.20.10.136 –add-host  data2:10.20.10.137 –add-host  data3:10.20.10.138 registry.lisong.pub:28500/toll_job_tmp /query/fid_state_tmp.sql    30<br>docker run  –name fid_state_new -d -v /data/query_sql:/query  –add-host  data1:10.20.10.136 –add-host  data2:10.20.10.137 –add-host  data3:10.20.10.138 registry.lisong.pub:28500/toll_state_new /query/fid_state_tmp.sql    30</p><p>docker run    -v /data/query_sql:/query  –add-host  data1:10.20.10.136 –add-host  data2:10.20.10.137 –add-host  data3:10.20.10.138 registry.lisong.pub:28500/toll_job_state_tmp /query/fid_state_tmp.sql</p><p>69641199</p><p>kafka-console-consumer.sh –bootstrap-server data1:9092 –property print.key=true –topic zhsd_real –partition=0  –offset  69640199 &gt;real.log</p><p>kafka-consumer-groups.sh –bootstrap-server data1:9092 –group jzwsd-camera-real-time-forecast-a –describe</p><p>c9656300807b</p><p>docker run -d   -v /data/query_sql:/query  –add-host  data1:10.20.10.136 –add-host  data2:10.20.10.137 –add-host  data3:10.20.10.138 registry.lisong.pub:28500/toll_job_tmp /query/fid_info.sql  30</p><p>select * from Biz_Roadstae where FID &gt; 186681323</p><p>ssh -o ServerAliveInterval=59 -NfL 0.0.0.0:9092:data1:9092 jzw</p><p>ssh -o ServerAliveInterval=59 -NfL 0.0.0.0:2181:data1:2181 jzw</p><p>kafka-run-class.sh kafka.tools.GetOaffsetShell  –broker-list localhost:9092 –partitions 0 –topic zhsd_real –time -1</p><p>71429512</p><p>kafka-console-consumer.sh –bootstrap-server data1:9092 –property print.key=true –topic zhsd_real –partition=0  –offset 71409512 &gt;real.log</p><p>kafka-console-consumer.sh –bootstrap-server data1:9092  –from-beginning –topic jzw_toll_island_state   &gt;state.txt</p><p>kafka-run-class.sh kafka.tools.GetOaffsetShell  –broker-list data1:9092  –topic ws_hy_mock_data_five_minute –time -1</p><p>PUT /_snapshot/my_backup<br>{<br>  “type” : “fs”,<br>  “settings”: {<br>    “location”: “/data/snapshot/backup1”<br>    “max_snapshot_bytes_per_sec” : “50mb”,<br>    “max_restore_bytes_per_sec” :”50mb”,<br>    “compress”:true}<br>  }<br>}</p><p>curl -XPUT ‘<a href="http://192.168.5.185:9200/_snapshot/el_bak&#39;" target="_blank" rel="noopener">http://192.168.5.185:9200/_snapshot/el_bak&#39;</a> -d ‘{“type”: “fs”,”settings”: {“location”:”/usr/hadoop/application/el_bak”,”max_snapshot_bytes_per_sec” : “50mb”, “max_restore_bytes_per_sec” :”50mb”,”compress”:true}}’</p><p>————————————————<br>版权声明：本文为CSDN博主「warrah」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/warrah/article/details/78978244" target="_blank" rel="noopener">https://blog.csdn.net/warrah/article/details/78978244</a></p><p>plugin install elasticsearch/elasticsearch-repository-hdfs/6.7.2</p><p>POST /hy_mock_data_five_minute/_delete_by_query<br>{<br>  “query”: {<br>      “bool”: {<br>        “must”: [<br>          {<br>            “range”: {<br>              “rangeBegin”: {<br>                “gte”: “2020-04-18 00:00:00”,<br>                “lt”: “2020-04-22 00:00:00”<br>              }<br>            }<br>          }<br>        ]<br>      }<br>    }<br>}</p><p>同步hy_mock_data</p><p>elasticdump –input=<a href="http://namenode2:9200/hy_mock_data_five_minute" target="_blank" rel="noopener">http://namenode2:9200/hy_mock_data_five_minute</a> –output=<a href="http://yd_data1:9200/hy_mock_data_five_minute_new" target="_blank" rel="noopener">http://yd_data1:9200/hy_mock_data_five_minute_new</a>  –type=settings<br>elasticdump –input=<a href="http://namenode2:9200/hy_mock_data_five_minute" target="_blank" rel="noopener">http://namenode2:9200/hy_mock_data_five_minute</a> –output=<a href="http://yd_data1:9200/hy_mock_data_five_minute_new" target="_blank" rel="noopener">http://yd_data1:9200/hy_mock_data_five_minute_new</a>  –type=mapping<br>elasticdump –input=<a href="http://namenode2:9200/hy_mock_data_five_minute" target="_blank" rel="noopener">http://namenode2:9200/hy_mock_data_five_minute</a> –output=<a href="http://yd_data1:9200/hy_mock_data_five_minute_new" target="_blank" rel="noopener">http://yd_data1:9200/hy_mock_data_five_minute_new</a>  –type=data</p><p>hy_traffic_baidu_five_minute</p><p>elasticdump –input=<a href="http://namenode2:9200/hy_traffic_baidu_five_minute" target="_blank" rel="noopener">http://namenode2:9200/hy_traffic_baidu_five_minute</a> –output=<a href="http://yd_data1:9200/hy_traffic_baidu_five_minute_new1" target="_blank" rel="noopener">http://yd_data1:9200/hy_traffic_baidu_five_minute_new1</a>  –type=settings<br>elasticdump –input=<a href="http://namenode2:9200/hy_traffic_baidu_five_minute" target="_blank" rel="noopener">http://namenode2:9200/hy_traffic_baidu_five_minute</a> –output=<a href="http://yd_data1:9200/hy_traffic_baidu_five_minute_new1" target="_blank" rel="noopener">http://yd_data1:9200/hy_traffic_baidu_five_minute_new1</a>  –type=mapping<br>elasticdump –input=<a href="http://namenode2:9200/hy_traffic_baidu_five_minute" target="_blank" rel="noopener">http://namenode2:9200/hy_traffic_baidu_five_minute</a> –output=<a href="http://yd_data1:9200/hy_traffic_baidu_five_minute_new1" target="_blank" rel="noopener">http://yd_data1:9200/hy_traffic_baidu_five_minute_new1</a>  –type=data</p><p>county_consumption_city</p><p>hotel_tourist_source 不一致</p><p>tourist_local_data<br>tourist_source_prov<br>tourist_source_country<br>county_consumption<br>county_consumption_province<br>hotel_checkin_record</p><hr><p>tourist_passenger_ticket<br>tourist_minute_local_data</p><p>industry_real-weather_data  26866<br>environment_bureau-data 12749</p><hr><p>ddns</p><p>docker run -d  <br>    –restart=always <br>    –name ddns-aliyun <br>    -e “AKID=LTAI4GBKPp17u31LThucvsab” <br>    -e “AKSCT=mmR4XXXKC1QG9KeiHCAuWktMq50UyF” <br>    -e “DOMAIN=home.kuiq.wang” <br>    -e “REDO=600” <br>    chenhw2/aliyun-ddns-cli</p><p>curl -X GET <a href="http://jd_cloud:9200/_search?v" target="_blank" rel="noopener">http://jd_cloud:9200/_search?v</a></p><p>county_consumption_city<br>county_industry_consumption<br>county_consumption_province<br>county_consumption<br>county_business_circle_consumption</p><p>tourist_local_data<br>tourist_source_prov<br>tourist_source_country<br>tourist_source_city</p><hr><p>returns((TypeInformation) TupleTypeInfo.getBasicTupleTypeInfo(String.class, Integer.class)).groupBy(0).sum(1)</p><p>2020-07-29</p><p>flink run -c org.example.stream.SocketTextStreamWordCount /Users/wqkenqing/Desktop/gitfiles/flink-demo/target/original-flink-demo-1.0-SNAPSHOT.jar 127.0.0.1 9000<br>flink run -c org.example.stream.SocketTextStreamWordCount original-flink-demo-1.0-SNAPSHOT.jar 127.0.0.1 9000</p><p>/Users/wqkenqing/Desktop/gitfiles/flink-demo/target/original-flink-demo-1.0-SNAPSHOT.jar</p><p>docker run -d <br>    –restart=always <br>    –name ddns-aliyun <br>    -e “AKID=LTAI4GBKPp17u31LThucvsab” <br>    -e “AKSCT=mmR4XXXKC1QG9KeiHCAuWktMq50UyF” <br>    -e “DOMAIN=home.kuiq.wang” <br>    -e “REDO=600” <br>chenhw2/aliyun-ddns-cli</p><p>LTAI4GBKPp17u31LThucvsab</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/运维/博客不同主题切换</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E5%8D%9A%E5%AE%A2%E4%B8%8D%E5%90%8C%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/%E5%8D%9A%E5%AE%A2%E4%B8%8D%E5%90%8C%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">这里的背景是针对博客不同项目生成不同主题类目的方案<br></code></pre></td></tr></table></figure><p>step one </p><p> 更换wqkenqing.github.io下的github项目</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/日常/运维/jumpserver</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/jumpserver/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/jumpserver/</url>
      
        <content type="html"><![CDATA[<hr><p> title:  jumpserver体验<br> date: 2020-07-28<br> tags: [jumpserver,资产管理]</p><hr> <a id="more"></a><p> # jumpserver体验</p><p> ## 一体化安装</p><p>mysql -uroot -e “create database jumpserver default charset ‘utf8’; grant all on jumpserver.* to ‘jumpserver’@’127.0.0.1’ identified by ‘$DB_PASSWORD’; flush privileges;”</p><p>m6GgXgemmBw5B7om9uYqFSz3erVo0JCLO7Trxpo8S2bxazXk2Y</p><p>Vv42qLmxsEPUO4Kf</p><p>xLnAOS5Mc8cqRZ8QDxUzVQvZgxIRnJl73c0rE56WCSq8tYZQFG</p><p>ETNhIk9zu3fgN2pG</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/hexo/Thread/多线程</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/Thread/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/Thread/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/hive/hive20190109</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/hive/hive20190109/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/hive/hive20190109/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据中心服务资源</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83%E6%9C%8D%E5%8A%A1%E8%B5%84%E6%BA%90/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E5%B7%A5%E4%BD%9C/%E6%97%B8%E8%B0%B7%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83%E6%9C%8D%E5%8A%A1%E8%B5%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="1a5e4087b42d31d49ce193030f8e5fcd60422f32711386982d6593f05b0433de"></script></div><script src="/daydoc/lib/blog-encrypt.js"></script><link href="/daydoc/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> ip </tag>
            
            <tag> 信息 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lambda&amp;Stream.md</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/Lamda%E7%A7%AF%E7%B4%AF/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/Lamda%E7%A7%AF%E7%B4%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="Lambda-amp-Stream积累"><a href="#Lambda-amp-Stream积累" class="headerlink" title="Lambda&amp;Stream积累"></a>Lambda&amp;Stream积累</h1><a id="more"></a><h2 id="Lambda"><a href="#Lambda" class="headerlink" title="Lambda"></a>Lambda</h2><p>Lambda主要是一个类语法长糖,尽量为java引入函数编程等实现,细节后续再补充</p><h2 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h2><p>java8提拱的新特性之一就有stream.stream主要是针对集合的处理类.提供了一系列集合处理方式.<br>配合使用lambda写出简介优美的代码</p><h3 id="Stream的使用"><a href="#Stream的使用" class="headerlink" title="Stream的使用"></a>Stream的使用</h3><p>通过如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>list.stream();<span class="hljs-comment">//即可以开启串行流;</span><br>list.parallelStream().filter(a -&gt; &#123;<br>            <span class="hljs-keyword">return</span> a &gt; <span class="hljs-number">20</span>;<br>        &#125;);<span class="hljs-comment">//开启并行流</span><br></code></pre></td></tr></table></figure><p>串行流即内部单线程顺序执行,并行则是启用多线程执行.<br>后者并不一定效率就比前者高.因为并行执行启用分配线程资源时同样要消耗时间和资源,在一定量级下,前者的执行效率一度要高过后者.        </p><p>我这里对三种对集合的处理形式的比较,可以简单参考一下</p><ol><li>stream 串行流</li><li>parallelStream 并行流</li><li>常规循环式</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>List&lt;Integer&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100000</span>; i++) &#123;<br>          list.add(getRandomNum());<br>      &#125;<br><br>      DateUtil.setBegin();<br>      list.stream().filter(a -&gt; &#123;<br>          <span class="hljs-keyword">return</span> a &gt; <span class="hljs-number">20</span>;<br>      &#125;);<br><br>      DateUtil.setStop();<br>      System.out.println(<span class="hljs-string">"串行耗时"</span>+DateUtil.calCostTime());<br><br>      DateUtil.setBegin();<br>      list.parallelStream().filter(a -&gt; &#123;<br>          <span class="hljs-keyword">return</span> a &gt; <span class="hljs-number">20</span>;<br>      &#125;);<br>      DateUtil.setStop();<br>      System.out.println(<span class="hljs-string">"并行耗时"</span>+DateUtil.calCostTime());<br>      <span class="hljs-keyword">int</span> count = <span class="hljs-number">0</span>;<br><br><br>      DateUtil.setBegin();<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> l : list) &#123;<br>          <span class="hljs-keyword">if</span> (l &gt; <span class="hljs-number">20</span>) &#123;<br>              count++;<br>          &#125;<br>      &#125;<br>      DateUtil.setStop();<br>      System.out.println(<span class="hljs-string">"循环耗时"</span>+DateUtil.calCostTime());<br></code></pre></td></tr></table></figure><p>经由相当量次的测试后,我觉得如果要对集合中的数据进行遍历操作,根据量级的不同,<br>建议低量级还是采用普通循环,量级特别大,可考虑用并行流.书写方便,又不是大批量数据处理操作<br>可以直接采用串行流</p><h3 id="Stream的操作分类"><a href="#Stream的操作分类" class="headerlink" title="Stream的操作分类"></a>Stream的操作分类</h3><ol><li>Intermediate</li><li>Terminal</li><li>Short-circuiting</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 日常总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mapreduce组件总结</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/spark%E5%AD%A6%E4%B9%A03/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/spark%E5%AD%A6%E4%B9%A03/</url>
      
        <content type="html"><![CDATA[<p>spark-core,spark-streaming再深造</p><a id="more"></a><h1 id="spark-go-on"><a href="#spark-go-on" class="headerlink" title="spark go on"></a>spark go on</h1><p>初始规划</p><p>spark-core<br>spark-streaming</p>]]></content>
      
      
      
        <tags>
            
            <tag> bigdata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>准备小结</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/%E5%87%86%E5%A4%87%E5%B0%8F%E7%BB%93/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/%E5%87%86%E5%A4%87%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="准备小结"><a href="#准备小结" class="headerlink" title="准备小结"></a>准备小结</h1><a id="more"></a><h2 id="hdfs存储机制是怎样的"><a href="#hdfs存储机制是怎样的" class="headerlink" title="hdfs存储机制是怎样的?"></a>hdfs存储机制是怎样的?</h2><p>client端发送写文件请求，namenode检查文件是否存在，如果已存在，直接返回错误信息，否则，发送给client一些可用namenode节点<br>client将文件分块，并行存储到不同节点上datanode上，发送完成后，client同时发送信息给namenode和datanode<br>namenode收到的client信息后，发送确信信息给datanode<br>datanode同时收到namenode和datanode的确认信息后，提交写操作。</p><h2 id="hadoop中combiner的作用是什么"><a href="#hadoop中combiner的作用是什么" class="headerlink" title="hadoop中combiner的作用是什么?"></a>hadoop中combiner的作用是什么?</h2><p>当map生成的数据过大时，带宽就成了瓶颈，怎样精简压缩传给Reduce的数据，又不影响最终的结果呢。有一种方法就是使用Combiner，Combiner号称本地的Reduce，Reduce最终的输入，是Combiner的输出。</p><h2 id="你们数据库怎么导入hive-的-有没有出现问题"><a href="#你们数据库怎么导入hive-的-有没有出现问题" class="headerlink" title="你们数据库怎么导入hive 的,有没有出现问题"></a>你们数据库怎么导入hive 的,有没有出现问题</h2><p>在导入hive的时候，如果数据库中有blob或者text字段，会报错，解决方案在sqoop笔记中。在将数据由Oracle数据库导入到Hive时，发现带有clob字段的表的数据会错乱，出现一些字段全为NULL的空行。由于在项目中CLOB字段没有实际的分析用途，因此考虑将CLOB字段去掉。</p><h2 id="hdfs-site-xml的3个主要属性"><a href="#hdfs-site-xml的3个主要属性" class="headerlink" title="hdfs-site.xml的3个主要属性?"></a>hdfs-site.xml的3个主要属性?</h2><p>dfs.name.dir决定的是元数据存储的路径以及DFS的存储方式(磁盘或是远端)<br>dfs.data.dir决定的是数据存储的路径<br>fs.checkpoint.dir用于第二Namenode</p><h2 id="下列哪项通常是集群的最主要瓶颈"><a href="#下列哪项通常是集群的最主要瓶颈" class="headerlink" title="下列哪项通常是集群的最主要瓶颈"></a>下列哪项通常是集群的最主要瓶颈</h2><p>磁盘 IO<br>答案：C 磁盘<br>首先集群的目的是为了节省成本，用廉价的 pc 机，取代小型机及大型机。小型机和大型机有什么特点？<br>1.cpu 处理能力强<br>2.内存够大，所以集群的瓶颈不可能是 a 和 d<br>3.如果是互联网有瓶颈，可以让集群搭建内网。每次写入数据都要通过网络（集群是内网），然后还要写入 3 份数据，所以 IO 就会打折扣。</p><h2 id="关于-SecondaryNameNode-哪项是正确的？"><a href="#关于-SecondaryNameNode-哪项是正确的？" class="headerlink" title="关于 SecondaryNameNode 哪项是正确的？"></a>关于 SecondaryNameNode 哪项是正确的？</h2><p>它的目的是帮助 NameNode 合并编辑日志，减少 NameNode 启动时间 </p><h2 id="mapreduce的原理"><a href="#mapreduce的原理" class="headerlink" title="mapreduce的原理?"></a>mapreduce的原理?</h2><p>MapReduce采用”分而治之”的思想，把对大规模数据集的操作，分发给一个主节点管理下的各个分节点共同完成，然后通过整合各个节点的中间结果，<br>得到最终结果。简单地说，MapReduce就是”任务的分解与结果的汇总”。<br>在Hadoop中，用于执行MapReduce任务的机器角色有两个：一个是JobTracker；另一个是TaskTracker，JobTracker是用于调度工作的，TaskTracker<br>是用于执行工作的。一个Hadoop集群中只有一台JobTracker。<br>在分布式计算中，MapReduce框架负责处理了并行编程中分布式存储、工作调度、负载均衡、容错均衡、容错处理以及网络通信等复杂问题，把处理<br>过程高度抽象为两个函数：map和reduce，map负责把任务分解成多个任务，reduce负责把分解后多任务处理的结果汇总起来。<br>需要注意的是，用MapReduce来处理的数据集（或任务）必须具备这样的特点：待处理的数据集可以分解成许多小的数据集，而且每一个小数据集都<br>可以完全并行地进行处理。</p><h2 id="HDFS存储的机制"><a href="#HDFS存储的机制" class="headerlink" title="HDFS存储的机制?"></a>HDFS存储的机制?</h2><h3 id="写流程："><a href="#写流程：" class="headerlink" title="写流程："></a>写流程：</h3><p>client链接namenode存数据<br>namenode记录一条数据位置信息（元数据），告诉client存哪。<br>client用hdfs的api将数据块（默认是64M）存储到datanode上。<br>datanode将数据水平备份。并且备份完将反馈client。<br>client通知namenode存储块完毕。<br>namenode将元数据同步到内存中。<br>另一块循环上面的过程。</p><h3 id="读流程"><a href="#读流程" class="headerlink" title="读流程"></a>读流程</h3><h2 id="举一个简单的例子说明mapreduce是怎么来运行的"><a href="#举一个简单的例子说明mapreduce是怎么来运行的" class="headerlink" title="举一个简单的例子说明mapreduce是怎么来运行的 ?"></a>举一个简单的例子说明mapreduce是怎么来运行的 ?</h2><p>MapReduce运行的时候，会通过Mapper运行的任务读取HDFS中的数据文件，然后调用自己的方法，处理数据，最后输出。<br>　　Reducer任务会接收Mapper任务输出的数据，作为自己的输入数据，调用自己的方法，最后输出到HDFS的文件中。<br>Mapper任务的执行过程详解<br>　　每个Mapper任务是一个Java进程，它会读取HDFS中的文件，解析成很多的键值对，经过我们覆盖的map方法处理后，<br>转换为很多的键值对再输出。整个Mapper任务的处理过程又可以分为以下六个阶段：<br>　　第一阶段是把输入文件按照一定的标准分片(InputSplit)，每个输入片的大小是固定的。默认情况下，输入片(InputSplit)<br>的大小与数据块(Block)的大小是相同的。如果数据块(Block)的大小是默认值128MB，输入文件有两个，一个是32MB，一个是　172MB。那么小的文件是一个输入片，大文件会分为两个数据块，那么是两个输入片。一共产生三个输入片。每一个输入片由　一个Mapper进程处理。这里的三个输入片，会有三个Mapper进程处理。</p><p>　　第二阶段是对输入片中的记录按照一定的规则解析成键值对。有个默认规则是把每一行文本内容解析成键值对。“键”是每一　行的起始位置(单位是字节)，“值”是本行的文本内容。<br>　　<br>　　第三阶段是调用Mapper类中的map方法。第二阶段中解析出来的每一个键值对，调用一次map方法。如果有1000个键值对，就会　调用1000次map方法。每一次调用map方法会输出零个或者多个键值对。</p><p>　　第四阶段是按照一定的规则对第三阶段输出的键值对进行分区。比较是基于键进行的。比如我们的键表示省份(如北京、上海、　山东等)，那么就可以按照不同省份进行分区，同一个省份的键值对划分到一个区中。默认是只有一个区。分区的数量就是Reducer　任务运行的数量。默认只有一个Reducer任务。<br>第五阶段是对每个分区中的键值对进行排序。首先，按照键进行排序，对于键相同的键值对，按照值进行排序。比如三个键值　对&lt;2,2&gt;、&lt;1,3&gt;、&lt;2,1&gt;，键和值分别是整数。那么排序后的结果是&lt;1,3&gt;、&lt;2,1&gt;、&lt;2,2&gt;。如果有第六阶段，那么进入</p><p>第六阶段　如果没有，直接输出到本地的Linux文件中。　第六阶段是对数据进行归约处理，也就是reduce处理。键相等的键值对会调用一次reduce方法。经过这一阶段，数据量会减少。　归约后的数据输出到本地的linxu文件中。本阶段默认是没有的，需要用户自己增加这一阶段的代码。　Reducer任务的执行过程详解<br>每个Reducer任务是一个java进程。Reducer任务接收Mapper任务的输出，归约处理后写入到HDFS中，可以分为三个阶段：<br>第一阶段是Reducer任务会主动从Mapper任务复制其输出的键值对。Mapper任务可能会有很多，因此Reducer会复制多个Mapper的输出。<br>第二阶段是把复制到Reducer本地数据，全部进行合并，即把分散的数据合并成一个大的数据。再对合并后的数据排序。<br>第三阶段是对排序后的键值对调用reduce方法。键相等的键值对调用一次reduce方法，每次调用会产生零个或者多个键值对。<br>最后把这些输出的键值对写入到HDFS文件中。<br>在整个MapReduce程序的开发过程中，我们最大的工作量是覆盖map函数和覆盖reduce函数。</p><h2 id="了解hashMap-和hashTable吗介绍下，他们有什么区别。"><a href="#了解hashMap-和hashTable吗介绍下，他们有什么区别。" class="headerlink" title="了解hashMap 和hashTable吗介绍下，他们有什么区别。"></a>了解hashMap 和hashTable吗介绍下，他们有什么区别。</h2><h2 id="为什么重写equals还要重写hashcode"><a href="#为什么重写equals还要重写hashcode" class="headerlink" title="为什么重写equals还要重写hashcode"></a>为什么重写equals还要重写hashcode</h2><p>因为equals比较的是内容是一致.但hashcode</p><h2 id="说一下map的分类和常见的情况"><a href="#说一下map的分类和常见的情况" class="headerlink" title="说一下map的分类和常见的情况"></a>说一下map的分类和常见的情况</h2><p> hashmap,hashtable,treemap,LinkedHashMap</p><ul><li>根据键得到值，因此不允许键重复(重复了覆盖了),但允许值重复<h3 id="Hashmap"><a href="#Hashmap" class="headerlink" title="Hashmap"></a>Hashmap</h3>是一个最常用的Map</li><li>它根据键的HashCode值存储数据,根据键可以直接获取它的值，具有很快的访问速度，遍历时，取得数据的顺序是完全随机的</li><li>最多只允许一条记录的键为Null;允许多条记录的值为 Null;</li><li>HashMap不支持线程的同步，即任一时刻可以有多个线程同时写HashMap;可能会导致数据的不一致。</li><li>如果需要同步，可以用 Collections的synchronizedMap方法使HashMap具有同步的能力，或者使用ConcurrentHashMap<h3 id="Hashtable"><a href="#Hashtable" class="headerlink" title="Hashtable"></a>Hashtable</h3>Hashtable与 HashMap类似,它继承自Dictionary类,不同的是:它不允许记录的键或者值为空;</li><li>它支持线程的同步，即任一时刻只有一个线程能写Hashtable,因此也导致了 Hashtable在写入时会比较慢<h3 id="LinkedHashMap"><a href="#LinkedHashMap" class="headerlink" title="LinkedHashMap"></a>LinkedHashMap</h3>是 HashMap 的一个子类，保存了记录的插入顺序，在用 Iterator 遍历 LinkedHashMap 时，先得到的记录肯定是先插入的.<br>也可以在构造时用带参数，按照应用次数排序。在遍历的时候会比 HashMap 慢，不过有种情况例外，当 HashMap 容量很大，实际数据较少时，遍历起来可能会比 LinkedHashMap 慢，因为 LinkedHashMap 的遍历速度只和实际数据有关，和容量无关，而 HashMap 的遍历速度和他的容量有关<h3 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h3>实现 SortMap 接口,能够把它保存的记录根据键排序, 默认是按键值的升序排序，也可以指定排序的比较器，当用 Iterator 遍历 TreeMap 时，得到的记录是排过序的</li></ul><p>HashMap，链表法存储，entry[]数组，线程不安全，可能死锁 concurrentHashMap，segment数组，每个segent下维护一组entry[]数组，每个segment是一把锁，线程安全 LinkedHashMap</p><hr><h2 id="Object若不重写hashCode-的话，hashCode-如何计算出来的？"><a href="#Object若不重写hashCode-的话，hashCode-如何计算出来的？" class="headerlink" title="Object若不重写hashCode()的话，hashCode()如何计算出来的？"></a>Object若不重写hashCode()的话，hashCode()如何计算出来的？</h2><p>hashcode采用的是</p><h2 id="spark"><a href="#spark" class="headerlink" title="spark"></a>spark</h2><h3 id="1-spark的有几种部署模式，每种模式特点？"><a href="#1-spark的有几种部署模式，每种模式特点？" class="headerlink" title="1. spark的有几种部署模式，每种模式特点？"></a>1. spark的有几种部署模式，每种模式特点？</h3><h4 id="本地模式"><a href="#本地模式" class="headerlink" title="本地模式"></a>本地模式</h4><p>本地模式分三类</p><ul><li>local：只启动一个executor</li><li>local[k]: 启动k个executor</li><li>local[*]：启动跟cpu数目相同的 executor</li></ul><h3 id="cluster模式"><a href="#cluster模式" class="headerlink" title="cluster模式"></a>cluster模式</h3><p>cluster模式肯定就是运行很多机器上了，但是它又分为以下三种模式，区别在于谁去管理资源调度。（说白了，就好像后勤管家，哪里需要资源，后勤管家要负责调度这些资源）</p><h4 id="standalone模式"><a href="#standalone模式" class="headerlink" title="standalone模式"></a>standalone模式</h4><p>分布式部署集群，自带完整的服务，资源管理和任务监控是Spark自己监控，这个模式也是其他模式的基础</p><h4 id="Spark-on-yarn模式"><a href="#Spark-on-yarn模式" class="headerlink" title="Spark on yarn模式"></a>Spark on yarn模式</h4><p>分布式部署集群，资源和任务监控交给yarn管理<br>粗粒度资源分配方式，包含cluster和client运行模式<br>cluster 适合生产，driver运行在集群子节点，具有容错功能<br>client 适合调试，dirver运行在客户端</p><h3 id="2-Spark技术栈有哪些组件，每个组件都有什么功能，适合什么应用场景？"><a href="#2-Spark技术栈有哪些组件，每个组件都有什么功能，适合什么应用场景？" class="headerlink" title="2. Spark技术栈有哪些组件，每个组件都有什么功能，适合什么应用场景？"></a>2. Spark技术栈有哪些组件，每个组件都有什么功能，适合什么应用场景？</h3><h4 id="Spark-core"><a href="#Spark-core" class="headerlink" title="Spark core"></a>Spark core</h4><p>是其它组件的基础，spark的内核<br>主要包含：有向循环图、RDD、Lingage、Cache、broadcast等</p><h4 id="SparkStreaming"><a href="#SparkStreaming" class="headerlink" title="SparkStreaming"></a>SparkStreaming</h4><p>是一个对实时数据流进行高通量、容错处理的流式处理系统<br>将流式计算分解成一系列短小的批处理作业</p><h4 id="Spark-sql："><a href="#Spark-sql：" class="headerlink" title="Spark sql："></a>Spark sql：</h4><p>能够统一处理关系表和RDD，使得开发人员可以轻松地使用SQL命令进行外部查询</p><h4 id="MLBase"><a href="#MLBase" class="headerlink" title="MLBase"></a>MLBase</h4><p>是Spark生态圈的一部分专注于机器学习，让机器学习的门槛更低<br>MLBase分为四部分：MLlib、MLI、ML Optimizer和MLRuntime。</p><h4 id="GraphX"><a href="#GraphX" class="headerlink" title="GraphX"></a>GraphX</h4><p>是Spark中用于图和图并行计算</p><h4 id="spark有哪些组件"><a href="#spark有哪些组件" class="headerlink" title="spark有哪些组件"></a>spark有哪些组件</h4><p>master：管理集群和节点，不参与计算。<br>worker：计算节点，进程本身不参与计算，和master汇报。<br>Driver：运行程序的main方法，创建spark context对象。<br>spark context：控制整个application的生命周期，包括dagsheduler和task scheduler等组件。<br>client：用户提交程序的入口。</p><ul><li><a href="https://blog.csdn.net/yirenboy/article/details/47441465" target="_blank" rel="noopener">https://blog.csdn.net/yirenboy/article/details/47441465</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 小结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/hexo/oldblog/blog22</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog22/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog22/</url>
      
        <content type="html"><![CDATA[<p>#测试环境搭建小结<br><code>因一些原因，最近协助搭建测试服务器，主要涉及到了一服务器系统安装，环境配置，参数调优，软件使用，自动化建设等内容，因为主要是协助，所以着重小结我参与的部份</code></p><h2 id="参数调优"><a href="#参数调优" class="headerlink" title="参数调优"></a>参数调优</h2><p>这里的参数调优主要针对的是服务器的调优，主要是针对出现问题后的调优，这次软件使用上大致问题有</p><ul><li>oom</li><li>ioStream</li><li>端口数不足</li><li>pid分配不够等问题</li></ul><h3 id="om"><a href="#om" class="headerlink" title="om"></a>om</h3><p>对oom的调优主要的动作有调大分配给jvm的内存，但光调大内存不一定能解决问题，当遇到大量创建线程，但linux服务器允许该用户的执行的线程数不够时，会报无法创建的问题，严重会致使无法执行。所以还需要调大用户的进程数，查看用户信息通过ulimit -a</p><h3 id="ioStream"><a href="#ioStream" class="headerlink" title="ioStream"></a>ioStream</h3><p>这个是io问题，经分析出现这个问题的主要原因应该该用户下限制了最大文件打开数，所以通过ulimit -n numbers即可调大该值<br>但有时退出后可能会重新复原，所以需要长久变更可设置在.bashrc文件中</p><h3 id="端口数不足"><a href="#端口数不足" class="headerlink" title="端口数不足"></a>端口数不足</h3><p>这是并发测试web接口时，发送的请求动作的完成需要时间，本机设置的端口区间可能无法满足大批量的端口需求，所以需要进行重新设置，主要方式是调大区间，调低端口被释放时间等</p><p> 第一步，修改/etc/sysctl.conf文件，在文件中添加如下行：<br>   net.ipv4.ip_local_port_range = 1024 65000<br>   这表明将系统对本地端口范围限制设置为1024~65000之间。请注意，本地端口范围的最小值必须大于或等于1024；而端口范围的最大值则应小于或等于65535。修改完后保存此文件。<br><a href="[http://blog.sina.com.cn/s/blog_658c8cea0101l2sw.html">解决方案</a>]<a href="http://blog.sina.com.cn/s/blog_658c8cea0101l2sw.html%29" target="_blank" rel="noopener">1</a><br><a href="http://blog.chinaunix.net/uid-24907956-id-3428052.html" target="_blank" rel="noopener">解决方案2</a></p><h3 id="pid分配不够等问题"><a href="#pid分配不够等问题" class="headerlink" title="pid分配不够等问题"></a>pid分配不够等问题</h3><p><a href="http://blog.csdn.net/cfaster/article/details/53065738" target="_blank" rel="noopener">pid分配不够</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kafka学习</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/kafka/kafka%E5%AE%9E%E7%8E%B0/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/kafka/kafka%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>[ x ]  Consumer Group里只会被某一个Consumer消费 ,Kafka还允许不同Consumer Group同时消费同一条消息，这一特性可以为消息的多元化处理提供支持。</p><a id="more"></a><h2 id="kafka-发送模式"><a href="#kafka-发送模式" class="headerlink" title="kafka 发送模式"></a>kafka 发送模式</h2><p>通过producer.type设置,可以设置producer的发送模式,具体参数据有<br>producer.type=false即同步(默认就是同步),设置为true为异步,即以batch形式像broker发送信息.(这里的batch可以设置)<br>还有一种oneway.即通过对ack的设置即可实现,ack=0时,即为oneway,只管发,不管是否接收成功.-1则是全部副本接收成功才算成功.</p><h2 id="kakfa消费模式"><a href="#kakfa消费模式" class="headerlink" title="kakfa消费模式"></a>kakfa消费模式</h2><ol><li>at last one</li><li>at most one</li><li>exactly one</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/es/es小结</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/es%E5%B0%8F%E7%BB%93/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/es%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">针对<span class="hljs-built_in">es</span>的一些操作小结<br></code></pre></td></tr></table></figure><p>es主要的重点在于查询,所以针对es的一些查询进行小结.</p><p>es的查询分类</p><p>主要有以下</p><p>elasticsearch term 匹配索引值, macth匹配文本内容<br>所以对text 类,用term会匹配不到 需要用match or match_phrase;</p><p>settings的设置</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs axapta"><span class="hljs-comment">//静态设置：只能在索引创建时或者在状态为 closed index（闭合的索引）上设置</span><br><br><span class="hljs-keyword">index</span>.number_of_shards <span class="hljs-comment">//主分片数，默认为5.只能在创建索引时设置，不能修改</span><br><br><span class="hljs-keyword">index</span>.shard.check_on_startup <span class="hljs-comment">//是否应在索引打开前检查分片是否损坏，当检查到分片损坏将禁止分片被打开</span><br>   <span class="hljs-keyword">false</span> <span class="hljs-comment">//默认值</span><br>   checksum <span class="hljs-comment">//检查物理损坏</span><br>   <span class="hljs-keyword">true</span> <span class="hljs-comment">//检查物理和逻辑损坏，这将消耗大量内存和CPU</span><br>   fix <span class="hljs-comment">//检查物理和逻辑损坏。有损坏的分片将被集群自动删除，这可能导致数据丢失</span><br><br><span class="hljs-keyword">index</span>.routing_partition_size <span class="hljs-comment">//自定义路由值可以转发的目的分片数。默认为 1，只能在索引创建时设置。此值必须小于index.number_of_shards</span><br><br><span class="hljs-keyword">index</span>.codec <span class="hljs-comment">//默认使用LZ4压缩方式存储数据，也可以设置为 best_compression，它使用 DEFLATE 方式以牺牲字段存储性能为代价来获得更高的压缩比例。</span><br></code></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><br>index<span class="hljs-selector-class">.number_of_replicas</span> <span class="hljs-comment">//每个主分片的副本数。默认为 1。</span><br><br>index<span class="hljs-selector-class">.auto_expand_replicas</span> <span class="hljs-comment">//基于可用节点的数量自动分配副本数量,默认为 false（即禁用此功能）</span><br><br>index<span class="hljs-selector-class">.refresh_interval</span> <span class="hljs-comment">//执行刷新操作的频率，这使得索引的最近更改可以被搜索。默认为 1s。可以设置为 -1 以禁用刷新。</span><br><br>index<span class="hljs-selector-class">.max_result_window</span> <span class="hljs-comment">//用于索引搜索的 from+size 的最大值。默认为 10000</span><br><br>index<span class="hljs-selector-class">.max_rescore_window</span> <span class="hljs-comment">// 在搜索此索引中 rescore 的 window_size 的最大值</span><br><br>index<span class="hljs-selector-class">.blocks</span><span class="hljs-selector-class">.read_only</span> <span class="hljs-comment">//设置为 true 使索引和索引元数据为只读，false 为允许写入和元数据更改。</span><br><br>index<span class="hljs-selector-class">.blocks</span><span class="hljs-selector-class">.read</span> <span class="hljs-comment">// 设置为 true 可禁用对索引的读取操作</span><br><br>index<span class="hljs-selector-class">.blocks</span><span class="hljs-selector-class">.write</span> <span class="hljs-comment">//设置为 true 可禁用对索引的写入操作。</span><br><br>index<span class="hljs-selector-class">.blocks</span><span class="hljs-selector-class">.metadata</span> <span class="hljs-comment">// 设置为 true 可禁用索引元数据的读取和写入。</span><br><br>index<span class="hljs-selector-class">.max_refresh_listeners</span> <span class="hljs-comment">//索引的每个分片上可用的最大刷新侦听器数</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/es/积累</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/%E7%A7%AF%E7%B4%AF/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/%E7%A7%AF%E7%B4%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="ES基本术语与组成"><a href="#ES基本术语与组成" class="headerlink" title="ES基本术语与组成"></a>ES基本术语与组成</h2><h3 id="索引index"><a href="#索引index" class="headerlink" title="索引index"></a>索引index</h3><p>ES中的索引概念可不是关系型数据库中的“索引”，ES中的索引指的是存储数据的地方，类似关系型数据库中的数据库概念</p><h3 id="类型type"><a href="#类型type" class="headerlink" title="类型type"></a>类型type</h3><p>类型Type<br>有的文章指出ES中的类型Type对应的就是关系型数据库中的表，在使用ES中我们会遇到另外一个概念映射（Mapping），也有不少的文章指出Mapping对应的就是关系型数据库中的表。关系型数据库中表与表是物理独立的，即使在两个表中存在相同名称不同类型的列，这在我们的关系型数据库也是极为合理的，但这在ES中就不合理，ES中即使是在同一个索引Index下，如果字段Field存在于不同的类型Type中，即使他们代表不同的含义，但是只要它们的名称相同也必须要求类型相同，在ES中类型Type对应于关系型数据库中表的概念已经名存实亡。实际上在ES中Type作为表的概念在后期版本中越来越被弱化，在未被ES正式移除前，ES后期版本已经不允许一个索引Index创建多个Type，相信在后面的版本会彻底移除类型Type。</p><p>（注：ES6已经不允许一个Index创建多个Type，<a href="https://github.com/elastic/elasticsearch/pull/24317）" target="_blank" rel="noopener">https://github.com/elastic/elasticsearch/pull/24317）</a></p><p>如果在现阶段一定要理解ES中的Type，那么一定要和Mapping结合起来。可以理解为类型Type就是定义一个表，仅仅是定义而已，而映射Mapping定义了表结构（有哪些列，列的类型是什么）</p><h3 id="文档Document"><a href="#文档Document" class="headerlink" title="文档Document"></a>文档Document</h3><p>在非关系型数据库中，有部分被称之为“文档数据库”，对应于关系型数据库中的一行记录。</p><h3 id="字段Field"><a href="#字段Field" class="headerlink" title="字段Field"></a>字段Field</h3><p>对应关系型数据库中的列。</p><h3 id="分片"><a href="#分片" class="headerlink" title="分片"></a>分片</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/es/es的docker安装</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/es%E7%9A%84docker%E5%AE%89%E8%A3%85/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/es%E7%9A%84docker%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>集成的ElasticSearch-Kinaba</p><p>docker pull nshou/elasticsearch-kibana</p><p>docker run -d -p 9200:9200 -p 5601:5601 nshou/elasticsearch-kibana</p><p>docker run -d –name elasticsearch –net host -e “discovery.type=single-node” elasticsearch:6.7.2<br>docker run -d –name kibana –net host -e “discovery.type=single-node”  -e ELASTICSEARCH_URL=<a href="http://localhost:9200" target="_blank" rel="noopener">http://localhost:9200</a>  kibana:6.7.2</p><p>elasticsearch-plugin install <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.3.2/elasticsearch-analysis-ik-6.7.2.zip" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.3.2/elasticsearch-analysis-ik-6.7.2.zip</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/es/es详细</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/es%E8%AF%A6%E7%BB%86/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/es%E8%AF%A6%E7%BB%86/</url>
      
        <content type="html"><![CDATA[<p><code>针对es的掌握,总有些地方不通透,想来还是从头从细粒度上再捋一遍</code></p><p><code>总得来讲es的掌握需要分为两个大块,一是es的使用,二是es的运维</code></p><p><code>默认选择kibana操作</code></p><p>[TOC]</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以&lt;&lt;Elasticsearch技术解析与实战&gt;&gt;一书为例.</p><p>具体的使用章节内容大致有</p><p>第二章部份</p><p>第三章</p><p>第四章</p><p>第五章</p><p>第七章</p><p>运维相关</p><p>第二章部份</p><p>第六章</p><p>第八章</p><p>第九章</p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">PUT <span class="hljs-regexp">/indexName/</span><br>&#123;<br><span class="hljs-string">"settings"</span>:&#123;<br>&#125;,<br><span class="hljs-string">"mappings"</span>:&#123;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="修改索引"><a href="#修改索引" class="headerlink" title="修改索引"></a>修改索引</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">PUT <span class="hljs-regexp">/indexName/</span><br>&#123;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><font color=red>mappings映射只能添加,不能修改.所以一个index的mapping设计需要事先把握清楚.不然后续治理困难</font></p><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><h3 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h3><h4 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">PUT</span> /<span class="hljs-keyword">alias</span><br>&#123;<br>    <span class="hljs-string">"actions"</span>: [<br>        &#123;<span class="hljs-string">"add"</span>: &#123;<span class="hljs-string">"index"</span>: <span class="hljs-string">"test1"</span>, <span class="hljs-string">"alias"</span>: <span class="hljs-string">"alias1"</span>&#125;&#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">PUT</span> /<span class="hljs-keyword">alias</span><br>&#123;<br>    <span class="hljs-string">"actions"</span>: [<br>        &#123;<span class="hljs-string">"remove"</span>: &#123;<span class="hljs-string">"index"</span>: <span class="hljs-string">"test1"</span>, <span class="hljs-string">"alias"</span>: <span class="hljs-string">"alias1"</span>&#125;&#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>别名只能通过删除后再建立来进行修改</strong></p><h4 id="添加多个别名"><a href="#添加多个别名" class="headerlink" title="添加多个别名"></a>添加多个别名</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">"actions"</span>: [<br>        &#123;<span class="hljs-attr">"add"</span>: &#123;<span class="hljs-attr">"index"</span>: <span class="hljs-string">"test1"</span>, <span class="hljs-attr">"alias"</span>:<span class="hljs-string">"alias1"</span>&#125;&#125;,<br>        &#123;<span class="hljs-attr">"add"</span>: &#123;<span class="hljs-attr">"index"</span>: <span class="hljs-string">"test2"</span>, <span class="hljs-attr">"alias"</span>:<span class="hljs-string">"alias1"</span>&#125;&#125;<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="索引配置"><a href="#索引配置" class="headerlink" title="索引配置"></a>索引配置</h3><p>常规的replica,shard</p><p>然后还能配置analyzer</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs awk">PUT <span class="hljs-regexp">/indexName/</span>_settings<br>&#123;<br><span class="hljs-string">"analysis"</span>:&#123;<br><span class="hljs-string">"analyzer"</span>:&#123;<br><span class="hljs-string">"content"</span>:&#123;<br><span class="hljs-string">"type"</span>:<span class="hljs-string">""</span>,<br><span class="hljs-string">"tokenizer"</span>:<span class="hljs-string">""</span><br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>索引只能在关闭后,再进行一些设置上的调整</strong></p><h3 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h3><h4 id="字符串数据可接受的参数"><a href="#字符串数据可接受的参数" class="headerlink" title="字符串数据可接受的参数"></a>字符串数据可接受的参数</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/flink/flink</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/flink/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/flink/</url>
      
        <content type="html"><![CDATA[<hr><p> title:  flink学习<br> date:<br> tags:</p><hr> <a id="more"></a><p> base of flink</p><ul><li>checkpoint</li><li>state</li><li>time</li><li>window</li></ul><p>##</p><p>flink</p><p>envStream<br>addSource<br>function<br>addSink</p><h2 id="addSource"><a href="#addSource" class="headerlink" title="addSource"></a>addSource</h2><h3 id="基于集合"><a href="#基于集合" class="headerlink" title="基于集合"></a>基于集合</h3><ul><li>fromCollection(Collection)</li><li>fromCollection(Iterator, Class)</li><li>fromElements(T …)</li><li>fromParallelCollection(SplittableIterator, Class)</li><li>generateSequence(from,to)</li></ul><p><code>fromCollection</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">fromCollection</span><span class="hljs-params">()</span> </span>&#123;<br>      List&lt;String&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>      <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; i++) &#123;<br>          list.add(i + <span class="hljs-string">""</span>);<br>      &#125;<br>      DataStream&lt;String&gt; dstrem = env.fromCollection(list);<br>      dstrem.map(s -&gt; <span class="hljs-keyword">new</span> Tuple2(s, <span class="hljs-number">1</span>)).returns((TypeInformation) TupleTypeInfo.getBasicTupleTypeInfo(String<span class="hljs-class">.<span class="hljs-keyword">class</span>, <span class="hljs-title">Integer</span>.<span class="hljs-title">class</span>))</span><br><span class="hljs-class">              .<span class="hljs-title">print</span>()</span>;<br>  &#125;<br></code></pre></td></tr></table></figure><p><code>generateSequence</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">fromGenerateSequence</span><span class="hljs-params">()</span> </span>&#123;<br>      DataStreamSource&lt;Long&gt; interStream = env.generateSequence(<span class="hljs-number">10</span>, <span class="hljs-number">1000</span>);<br>      interStream.print();<br>  &#125;<br></code></pre></td></tr></table></figure><h3 id="基于文件"><a href="#基于文件" class="headerlink" title="基于文件"></a>基于文件</h3><ul><li>readFile()</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java">DataStream&lt;String&gt; text = env.readTextFile(<span class="hljs-string">"/Users/wqkenqing/Desktop/out/keyCount.txt"</span>);<br>       FlatMapFunction&lt;String, Tuple2&lt;String, String&gt;&gt; spliter = (String sentence, Collector&lt;Tuple2&lt;String, String&gt;&gt; out) -&gt; &#123;<br>           String ss[] = sentence.split(<span class="hljs-string">"\\s+"</span>);<br>           out.collect(<span class="hljs-keyword">new</span> Tuple2&lt;String, String&gt;(ss[<span class="hljs-number">0</span>], ss[<span class="hljs-number">1</span>]));<br>       &#125;;<br>       FilterFunction&lt;Tuple2&lt;String, String&gt;&gt; filter = (Tuple2&lt;String, String&gt; message) -&gt; &#123;<br>           <span class="hljs-keyword">if</span> (message.f1.contains(<span class="hljs-string">"m"</span>)) &#123;<br>               <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>           &#125;<br>           <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;<br>       &#125;;<br>       ReduceFunction&lt;String&gt; reduceFunction = (m1, m2) -&gt; &#123;<br>           <span class="hljs-keyword">return</span> m1 + m2;<br>       &#125;;<br>       text.flatMap(spliter).returns((TypeInformation) TupleTypeInfo.getBasicTupleTypeInfo(String<span class="hljs-class">.<span class="hljs-keyword">class</span>, <span class="hljs-title">String</span>.<span class="hljs-title">class</span>))</span><br><span class="hljs-class">               .<span class="hljs-title">keyBy</span>(0)</span><br><span class="hljs-class">               .<span class="hljs-title">reduce</span>(<span class="hljs-title">reduceFunction</span>)</span><br><span class="hljs-class">               .<span class="hljs-title">print</span>()</span>;<br></code></pre></td></tr></table></figure><h3 id="基于socket"><a href="#基于socket" class="headerlink" title="基于socket"></a>基于socket</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><br></code></pre></td></tr></table></figure><h3 id="自定义Source"><a href="#自定义Source" class="headerlink" title="自定义Source"></a>自定义Source</h3><p>分两部份,一是一些现有的source,但未集成至flink.另一种是纯自己写的source</p><p>part one:</p><ul><li>kafkaSource</li><li>hdfsSource</li></ul><p><code>kafaSource</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/flink/flink_book</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/flink_book/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/flink_book/</url>
      
        <content type="html"><![CDATA[<hr><p> title:  flink_book.md<br> date: 2020-8-24<br> tags:  [flink,book]</p><hr> <a id="more"></a><h1 id="flink-book"><a href="#flink-book" class="headerlink" title="flink book"></a>flink book</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/flink/Flink记录</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/Flink%E8%AE%B0%E5%BD%95/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flink/Flink%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p><code>flink相关记录</code></p><h2 id="yarn启动"><a href="#yarn启动" class="headerlink" title="yarn启动"></a>yarn启动</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js">Usage:<br>   Required<br>     -n,--container &lt;arg&gt;   <span class="hljs-built_in">Number</span> <span class="hljs-keyword">of</span> YARN container to allocate (=<span class="hljs-built_in">Number</span> <span class="hljs-keyword">of</span> Task Managers)<br>   Optional<br>     -D &lt;arg&gt;                        Dynamic properties<br>     -d,--detached                   Start detached<br>     -jm,--jobManagerMemory &lt;arg&gt;    Memory <span class="hljs-keyword">for</span> JobManager Container <span class="hljs-keyword">with</span> optional unit (<span class="hljs-keyword">default</span>: MB)<br>     -nm,--name                      <span class="hljs-built_in">Set</span> a custom name <span class="hljs-keyword">for</span> the application on YARN<br>     -q,--query                      Display available YARN resources (memory, cores)<br>     -qu,--queue &lt;arg&gt;               Specify YARN queue.<br>     -s,--slots &lt;arg&gt;                <span class="hljs-built_in">Number</span> <span class="hljs-keyword">of</span> slots per TaskManager<br>     -tm,--taskManagerMemory &lt;arg&gt;   Memory per TaskManager Container <span class="hljs-keyword">with</span> optional unit (<span class="hljs-keyword">default</span>: MB)<br>     -z,--zookeeperNamespace &lt;arg&gt;   Namespace to create the Zookeeper sub-paths <span class="hljs-keyword">for</span> HA mode<br></code></pre></td></tr></table></figure><p>yarn-session.sh -n 8 -jm 2048 -tm 4096 -d<br>参数解释：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-string">//-n</span> 2 表示指定两个容器<br><span class="hljs-string">//</span> -jm 1024 表示jobmanager 1024M内存<br><span class="hljs-string">//</span> -tm 1024表示taskmanager 1024M内存<br><span class="hljs-string">//-d</span> 任务后台运行<br><span class="hljs-string">//-nm</span>,<span class="hljs-params">--name</span>  YARN上为一个自定义的应用设置一个名字<br><span class="hljs-string">//-q</span>,<span class="hljs-params">--query</span>  显示yarn中可用的资源 <span class="hljs-params">(内存, cpu核数)</span><br><span class="hljs-string">//-z</span>,<span class="hljs-params">--zookeeperNamespace</span> &lt;arg&gt;   针对HA模式在zookeeper上创建NameSpace<br><span class="hljs-string">//-id</span>,<span class="hljs-params">--applicationId</span> &lt;yarnAppId&gt;   YARN集群上的任务id，附着到一个后台运行的yarn session中<br></code></pre></td></tr></table></figure><p><strong>命令</strong>:</p><p><code>yarn-session.sh -n 10 -tm 8192 -s 32</code><br><code>yarn-session.sh -n 2 -tm 2048 -s 2</code><br><code>yarn-session.sh -n 1 -tm 1024 -s 2</code></p><p>yarn-session.sh -n 1 -tm 1024 -s 2<br>yarn-session.sh -n 2 -tm 4096 -jm  4096</p><p>yarn-session.sh -id application_1563854073510_0006</p><p>flink run -m yarn-cluster -yn 2 -yjm 4096 -ytm  4096</p><p>2020年 01月 13日 星期一 16:39:12</p><p>yarn-session.sh -n 2 -tm 4096 -jm  4096</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/flume/docker版flume使用</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flume/docker%E7%89%88flume%E4%BD%BF%E7%94%A8/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flume/docker%E7%89%88flume%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="flume-in-docker"><a href="#flume-in-docker" class="headerlink" title="flume in docker"></a>flume in docker</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">公司flume的docker镜像,<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/hbase/hbase20190109</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/hbase/hbase20190109/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/hbase/hbase20190109/</url>
      
        <content type="html"><![CDATA[<h1 id="summary-of-today"><a href="#summary-of-today" class="headerlink" title="summary of today"></a>summary of today</h1><p><code>今日总结</code></p><ul><li>hive外部表的创建与删除</li><li>hbase filter的使用</li><li>hbase rowkey 的使用</li></ul><ol><li>hive 外部表的创建,主要是 postion_gps_online表</li><li>hbase rowkey的使用,这里涉及到相关逻辑里的实现问题,如轨迹某段时间里所有设备的轨迹,rowkey 若设计成<br>device_id+”<em>“+ts_time 形式,则会出现通过start_row与stop_row的模糊区间匹配未找到现成的方案.所以后<br>续rowkey设计成的是ts_time+”</em>“+device_id的形式,这样可以只通过传时间就可以筛选出这个时间区间里的所有<br>device_id.</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kafka原理</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/kafka/kafka%E5%8E%9F%E7%90%86/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/kafka/kafka%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><p>[TOC]</p><h2 id="正常kafka服务运行的组件组成"><a href="#正常kafka服务运行的组件组成" class="headerlink" title="正常kafka服务运行的组件组成"></a>正常kafka服务运行的组件组成</h2><ol><li><p>kafka</p></li><li><p>zookeeper</p><p>kafka运行主要的逻辑角色组成</p><ul><li>producer</li><li>consumer</li><li>broker</li></ul><p>kafka 组成拓扑结构</p></li></ol><ul><li>broker<ul><li>topic<ul><li>partition</li></ul></li><li>AR<ul><li>ISR</li><li>OSR</li></ul></li></ul></li><li>consumer<ul><li>consumer_group<ul><li>offset</li></ul></li></ul></li><li>producer</li></ul><h2 id="Producer"><a href="#Producer" class="headerlink" title="Producer"></a>Producer</h2><h3 id="Q-server-properies-服务端参数配置"><a href="#Q-server-properies-服务端参数配置" class="headerlink" title="Q: server.properies(服务端参数配置)"></a>Q: server.properies(服务端参数配置)</h3><p>相关参数</p><table><thead><tr><th>参数名</th><th>默认设置</th><th>建议设置</th><th>说明</th><th></th></tr></thead><tbody><tr><td>zookeeper.connect</td><td></td><td></td><td></td><td></td></tr><tr><td>listeners</td><td></td><td></td><td></td><td></td></tr><tr><td>advertised.listeners</td><td></td><td></td><td></td><td></td></tr><tr><td>broker.id</td><td></td><td></td><td></td><td></td></tr><tr><td>log.dir,log.dirs</td><td></td><td></td><td></td><td></td></tr><tr><td>message.max.bytes</td><td></td><td></td><td></td><td></td></tr></tbody></table><h4 id="Q-listeners-与-advertised-listeners-是否有区别"><a href="#Q-listeners-与-advertised-listeners-是否有区别" class="headerlink" title="Q:listeners 与 advertised.listeners 是否有区别"></a>Q:listeners 与 advertised.listeners 是否有区别</h4><h4 id="message-max-bytes修改对conusmer端的级联影响"><a href="#message-max-bytes修改对conusmer端的级联影响" class="headerlink" title="message.max.bytes修改对conusmer端的级联影响"></a>message.max.bytes修改对conusmer端的级联影响</h4><h3 id="Q-HW-amp-LEO是什么-HW如何指定-有什么作用"><a href="#Q-HW-amp-LEO是什么-HW如何指定-有什么作用" class="headerlink" title="Q: HW &amp; LEO是什么,HW如何指定,有什么作用?"></a>Q: HW &amp; LEO是什么,HW如何指定,有什么作用?</h3><p>HW: hight watermark 高水位<br>LEO: log end offset 日志末尾偏移量</p><p><font color=red><code>HW决定了能该topic能被消费的最大offset</code></font></p><h3 id="Q-HW如何决定topic最大可被消息offset"><a href="#Q-HW如何决定topic最大可被消息offset" class="headerlink" title="Q: HW如何决定topic最大可被消息offset?"></a>Q: HW如何决定topic最大可被消息offset?</h3><p>需要知道:<br><font size=1><strong>HW 是由ISR中最小被同步partition的offset决定</strong></font></p><p>HW是最小被同offset+1;</p><p>LEO也是落地日志offset+1;</p><p>这也很好理解,因为ISR是作为数据备份队列.那么限制用户只能消费ISR队列中每个节点都已经同步的数据.这有利于保证如果消费不成功,并遇到broker发生异常,在重新选举broker后<br>新选举的broker能尽可能有完整的数据备份(考虑到OSR也可能被设定参与选举).这样尽可能保证消息服务的稳定性.</p><p><font color=yellow size=2> 但这里也抛出一个问题,就是若真发生了异常,HW后的数据能否保证不丢失!</font></p><p>Q: kafka为什么没有完全采用同步复制或异步复制,而采用ISR模式</p><h3 id="Q-生产者必要参数"><a href="#Q-生产者必要参数" class="headerlink" title="Q: 生产者必要参数"></a>Q: 生产者必要参数</h3><table><thead><tr><th>参数名</th><th>设置内容</th><th>说明</th></tr></thead><tbody><tr><td>bootstrap.servers</td><td></td><td>host:port,指定broker地址.可以不用完全按照完整的broker列表来设置</td></tr><tr><td>key. serializer</td><td></td><td></td></tr><tr><td>value . serializer</td><td></td><td></td></tr></tbody></table><h3 id="Q-producer发送消费涉及到的异常"><a href="#Q-producer发送消费涉及到的异常" class="headerlink" title="Q:producer发送消费涉及到的异常"></a>Q:producer发送消费涉及到的异常</h3><h3 id="Q-producer发送消息的三种方法"><a href="#Q-producer发送消息的三种方法" class="headerlink" title="Q: producer发送消息的三种方法"></a>Q: producer发送消息的三种方法</h3><ul><li>fire-and- forget</li><li>sync</li><li>async</li></ul><h3 id="Q-producer-一条信息到broker主要经历的流程"><a href="#Q-producer-一条信息到broker主要经历的流程" class="headerlink" title="Q:producer 一条信息到broker主要经历的流程"></a>Q:producer 一条信息到broker主要经历的流程</h3><ol><li>Interceptor</li><li>Serializer</li><li>Partitioner</li></ol><p>分区器不一定是必须的,但后两者则是必需的.</p><h3 id="Q-拦截器的主要用法与实际用途"><a href="#Q-拦截器的主要用法与实际用途" class="headerlink" title="Q: 拦截器的主要用法与实际用途"></a>Q: 拦截器的主要用法与实际用途</h3><h3 id="Q-kafka发送吞吐量受影响参数与可能原因"><a href="#Q-kafka发送吞吐量受影响参数与可能原因" class="headerlink" title="Q: kafka发送吞吐量受影响参数与可能原因"></a>Q: kafka发送吞吐量受影响参数与可能原因</h3><h3 id="T-kafka-producer原理分析"><a href="#T-kafka-producer原理分析" class="headerlink" title="T:kafka producer原理分析"></a>T:kafka producer原理分析</h3><h2 id="Consumer"><a href="#Consumer" class="headerlink" title="Consumer"></a>Consumer</h2><h3 id="Q-消费者与消费组-topic中分区与消费组与消费者的关系"><a href="#Q-消费者与消费组-topic中分区与消费组与消费者的关系" class="headerlink" title="Q:消费者与消费组,topic中分区与消费组与消费者的关系"></a>Q:消费者与消费组,topic中分区与消费组与消费者的关系</h3><h3 id="Q-消费者消费的内部逻辑"><a href="#Q-消费者消费的内部逻辑" class="headerlink" title="Q:消费者消费的内部逻辑"></a>Q:消费者消费的内部逻辑</h3><h3 id="Q-如何获得每个分区最大offset"><a href="#Q-如何获得每个分区最大offset" class="headerlink" title="Q: 如何获得每个分区最大offset"></a>Q: 如何获得每个分区最大offset</h3><h3 id="Q-consumer订阅的几种方式-与区别"><a href="#Q-consumer订阅的几种方式-与区别" class="headerlink" title="Q:consumer订阅的几种方式,与区别"></a>Q:consumer订阅的几种方式,与区别</h3><p>主要分为subscribe 与assign</p><p>前者能够自动再均衡,后者不行.</p><h3 id="Q-三种不同的订阅状态分别是什么"><a href="#Q-三种不同的订阅状态分别是什么" class="headerlink" title="Q:三种不同的订阅状态分别是什么"></a>Q:三种不同的订阅状态分别是什么</h3><h3 id="Q-常见的反序列化协议"><a href="#Q-常见的反序列化协议" class="headerlink" title="Q:常见的反序列化协议"></a>Q:常见的反序列化协议</h3><h3 id="Q-consumer-poll-Duration-timeout-这个timeout起到什么作用"><a href="#Q-consumer-poll-Duration-timeout-这个timeout起到什么作用" class="headerlink" title="Q:consumer poll(Duration timeout ),这个timeout起到什么作用."></a>Q:consumer poll(Duration timeout ),这个timeout起到什么作用.</h3><h4 id="另timeout设置成0或Long-MAX-VALUE有什么区别"><a href="#另timeout设置成0或Long-MAX-VALUE有什么区别" class="headerlink" title="另timeout设置成0或Long.MAX_VALUE有什么区别"></a>另timeout设置成0或Long.MAX_VALUE有什么区别</h4><h3 id="Q-consumer-消费后提交的主要方式有几种-各有什么区别"><a href="#Q-consumer-消费后提交的主要方式有几种-各有什么区别" class="headerlink" title="Q:consumer 消费后提交的主要方式有几种,各有什么区别"></a>Q:consumer 消费后提交的主要方式有几种,各有什么区别</h3><h3 id="consumer-poll-背后涉及到的逻辑简示"><a href="#consumer-poll-背后涉及到的逻辑简示" class="headerlink" title="consumer poll()背后涉及到的逻辑简示"></a>consumer poll()背后涉及到的逻辑简示</h3><ol><li>消费位移</li><li>消费者协调</li><li>组协调</li><li>消费者选举</li><li>分区分配的分发</li><li>再均衡逻辑</li><li>heartbroker</li></ol><hr><h3 id="Q-消费者位移信息存放位置"><a href="#Q-消费者位移信息存放位置" class="headerlink" title="Q:消费者位移信息存放位置"></a>Q:消费者位移信息存放位置</h3><p>之前老版本存放在zookeeper中,但因为这样kafka的消费性能会受到zookeeper,controller节点负载能力的影响.而zookeeper ,常常不止被一个组件使用.所以,在新版本中,kafka客户端将consumer offset的维护信息放在内部主题</p><p>__consumer_offsets中.这个主题中存放着各consumer group 与consumer对订阅topic的消费位移信息</p><h3 id="Q-消费者多线程实现方式-大致三种"><a href="#Q-消费者多线程实现方式-大致三种" class="headerlink" title="Q:消费者多线程实现方式(大致三种)"></a>Q:消费者多线程实现方式(大致三种)</h3><h3 id="T-consumer异常提交与处理"><a href="#T-consumer异常提交与处理" class="headerlink" title="T: consumer异常提交与处理"></a>T: consumer异常提交与处理</h3><h2 id="日志存储"><a href="#日志存储" class="headerlink" title="日志存储"></a>日志存储</h2><p><code>kafka在服务器硬盘上的具体存储形式</code> </p><h3 id="日志格式的演变"><a href="#日志格式的演变" class="headerlink" title="日志格式的演变"></a>日志格式的演变</h3><ol><li>v0</li><li>v1</li><li>v2</li></ol><h3 id="Q-各版本间主要的区别"><a href="#Q-各版本间主要的区别" class="headerlink" title="Q: 各版本间主要的区别"></a>Q: 各版本间主要的区别</h3><h3 id="Q-swap对kafka的影响"><a href="#Q-swap对kafka的影响" class="headerlink" title="Q:swap对kafka的影响"></a>Q:swap对kafka的影响</h3><h2 id="服务端一些核心设计"><a href="#服务端一些核心设计" class="headerlink" title="服务端一些核心设计"></a>服务端一些核心设计</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/kafka/kafka小结</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/kafka/kafka%E5%B0%8F%E7%BB%93/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/kafka/kafka%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">kafka细粒度学习与总结<br></code></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p><a href="Kafka史上最详细原理总结">相对干货</a></p><p><a href="https://blog.csdn.net/fuyuwei2015/article/details/72943207" target="_blank" rel="noopener">Kafka学习笔记——Kafka原理与使用详解</a></p><p>记录点</p><ol><li>kafka组成部分</li><li>数据流转过程</li><li>备份</li><li>安全性</li><li>持久性</li><li>性能</li><li>api储备</li><li>消息传输机制(相关语义)</li><li>zookeer的作用</li></ol><p>着重点</p><ol><li><p>备份同步(ISR)</p></li><li><p>消费请求处理(处理能力,出现总是的恢复)</p></li><li><p><strong>Consumer Rebalance</strong> 触发条件</p><ol><li>consumer的增加或删除</li><li>broker的增加或删除</li></ol></li><li><p>分区策略</p><ol><li>Rangeassignor</li><li>RoundRobinAssignor</li><li>StickyAssignor</li><li>自定义</li></ol></li><li><p>再均衡</p><ol><li>均衡器<ol><li>GroupCoordinator</li><li>ConsumerCoordinator</li></ol></li><li>原因<ol><li>新的消费者入组</li><li>消息者宕机失联</li><li>消息者主动退组(leaveGroupRequest),fg 调用unsubscribe()取消订阅</li><li>消费组对应分区数量发生变化</li></ol></li></ol></li><li><p>分区管理</p><ol><li>优先副本(分区broker)<ol><li>leader副本承担读写服务,分区leader被怼坏意味着该分区不可用.即broker节点中对应的leader副本多少,决定了该节点的负载高低.</li><li></li></ol></li></ol></li></ol><p>High Level Consumer将从某个Partition读取的最后一条消息的offset存于Zookeeper中（从<strong>0.8.2</strong>开始同时支持将Offset存于Zookeeper中和专用的Kafka Topic中）。</p><p>Q: 为什么kafka吞吐量高</p><p>A: 同一个topic同个CG下的consumer只有一个消费它.</p><p>Q:为什么要支持存储于专用的Kafka Topic中？</p><p>KafkaConsumer 多线程思路:</p><p>应该不单是只开启多个consumer线程</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/kafka/kafka疑问点</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/kafka/kafka%E7%96%91%E9%97%AE%E7%82%B9/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/kafka/kafka%E7%96%91%E9%97%AE%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="kafka疑问点"><a href="#kafka疑问点" class="headerlink" title="kafka疑问点"></a>kafka疑问点</h1><h2 id="consumer-api"><a href="#consumer-api" class="headerlink" title="consumer api"></a>consumer api</h2><ol><li>High-level &amp;&amp; sample-level的区别</li><li>不同api下offset的维护.</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/大数据/集群/私有集群</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E9%9B%86%E7%BE%A4/%E7%A7%81%E6%9C%89%E9%9B%86%E7%BE%A4/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E9%9B%86%E7%BE%A4/%E7%A7%81%E6%9C%89%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<p>9 @(私有集群的搭建)<br>###私有集群搭建<br>一、服务器的准备</p><ul><li>阿里云实例（115.29.97.126）</li><li>华为云实例（114.115.203.81）</li><li>阿里云实例2(115.29.35.125）</li><li>本机实例（）</li></ul><p>1.1）服务器环境设置<br>修改服务器hostname</p><ul><li>阿里（wqkenqing）</li><li>华为（wqkenqing02）</li><li>阿里2(wqkenqing03)</li><li>虚拟机（wqkneqing04）<br><a href="http://blog.csdn.net/huangxy10/article/details/40213095" target="_blank" rel="noopener">hostname修改教程</a></li></ul><hr><p>1.2）配置语言环境（取的默认环境）<br><img src="./1475308903359.png" srcset="/daydoc/img/loading.gif" lazyload alt="Alt text"><br>1.3）<a href="https://my.oschina.net/cjun/blog/344836" target="_blank" rel="noopener">关闭防火墙</a><br>1.4）创建hadoop用户<br>1.5）上传相关文件(jdk1.7、hadoop2.7.2)</p><hr><p>1.6）配置环境变量<br>**<br>export JAVA_HOME=/usr/local/jdk1.7<br>export JRE_HOME=${JAVA_HOME}/jre<br>export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib</p><p>export PATH=${JAVA_HOME}/bin:$PATH **</p><hr><p>1.7）配置免密码登陆<br>    1)实现本机ssh免秘钥登录：</p><ul><li>$ ssh-keygen -t dsa -P ‘’ -f ~/.ssh/id_dsa</li><li>$ cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</li><li>chmod 700 ~/.ssh/authorized_keys</li></ul><hr><p>2)实现集群ssh免秘钥登录</p><ul><li>写入每一个集群机器秘钥到主NN 的authorized_keys中 ssh hadoopXXX ‘cat /home/hadoop/.ssh/id_dsa.pub’ &gt;&gt; ~/.ssh/authorized_keys</li><li>覆盖所有集群机器authorized_keys：scp ~/.ssh/authorized_keys hadoopXXX:/home/hadoop/.ssh/authorized_keys</li></ul><p>二、hadoop配置<br>2.1）配置hadoop环境<br>export HADOOP_HOME=/usr/local/hadoop/hadoop</p><p>export HIVE_HOME=/usr/local/hadoop/hive</p><p>export HBASE_HOME=/usr/local/hadoop/hbase</p><p>PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$HBASE_HOME/bin:$HIVE_HOME/bin</p><hr><p>hadoop配置文件配置<br>2.1）wqkenqing节点（以后作为name节点）<br><strong>修改 /home/hadoop/etc/hadoop/ core-site.xml</strong><br>在 <configuration> 块儿中添加：</p><property><p><name>fs.defaultFS</name></p><p><value>hdfs://wqkenqing.com:9000</value></p></property><property><p><name>hadoop.tmp.dir</name></p><p><value>file:/home/hadoop/tmp</value></p></property><property><p><name>io.file.buffer.size</name></p><p><value>131702</value></p><!-- 指定zookeeper地址 -->  <pre><code class="hljs">&lt;property&gt;      &lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;      &lt;value&gt;wqkenqing.com:2181,wqkenqing02.com:2181&lt;/value&gt;  &lt;/property&gt;  </code></pre></property>*****修改 /home/hadoop/etc/hadoop/ hdfs-site.xml**在 <configuration> 块儿中添加：<property><p><name>dfs.namenode.name.dir</name></p><p><value>file:/home/hadoop/hdfs/name</value></p></property><property><p><name>dfs.datanode.data.dir</name></p><p><value>file:/home/hadoop/hdfs/data</value></p></property><property><p><name>dfs.replication</name></p><p><value>2</value></p></property><property><p><name>dfs.namenode.secondary.http-address</name></p><p><value>wqkenqing.com:9001</value></p></property><property><p><name>dfs.webhdfs.enabled</name></p><p><value>true</value><br></property></p><hr> <!--指定hdfs的nameservice为mycluster，需要和core-site.xml中的保持一致 -->  <pre><code class="hljs">&lt;property&gt;      &lt;name&gt;dfs.nameservices&lt;/name&gt;      &lt;value&gt;wqkenqing.com&lt;/value&gt;  &lt;/property&gt;  &lt;!-- mycluster下面有两个NameNode，分别是nn1，nn2 --&gt;  &lt;property&gt;   &lt;name&gt;dfs.ha.namenodes.mycluster&lt;/name&gt;      &lt;value&gt;wqkenqing,wqkenqing02&lt;/value&gt;  &lt;/property&gt;  &lt;!-- nn1的RPC通信地址 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.namenode.rpc-address.mycluster.nn1&lt;/name&gt;      &lt;value&gt;wqkenqing:9000&lt;/value&gt;  &lt;/property&gt;  &lt;!-- nn1的http通信地址 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.namenode.http-address.mycluster.nn1&lt;/name&gt;      &lt;value&gt;h1m1:50070&lt;/value&gt;  &lt;/property&gt;  &lt;!-- nn2的RPC通信地址 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.namenode.rpc-address.mycluster.nn2&lt;/name&gt;      &lt;value&gt;wqkenqing02:9000&lt;/value&gt;  &lt;/property&gt;  &lt;!-- nn2的http通信地址 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.namenode.http-address.mycluster.nn2&lt;/name&gt;      &lt;value&gt;wqkenqing02:50070&lt;/value&gt;  &lt;/property&gt;  &lt;!-- 指定NameNode的元数据在JournalNode上的存放位置 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;      &lt;value&gt;qjournal://wqkenqing:8485;wqkenqing02:8485/mycluster&lt;/value&gt;  &lt;/property&gt;  &lt;!-- 指定JournalNode在本地磁盘存放数据的位置 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.journalnode.edits.dir&lt;/name&gt;      &lt;value&gt;/usr/lib/hadoop/journal&lt;/value&gt;  &lt;/property&gt;  &lt;!-- 开启NameNode失败自动切换 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;      &lt;value&gt;true&lt;/value&gt;  &lt;/property&gt;  &lt;!-- 配置失败自动切换实现方式 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.client.failover.proxy.provider.mycluster&lt;/name&gt;      &lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;/value&gt;  &lt;/property&gt;  &lt;!-- 配置隔离机制方法，多个机制用换行分割，即每个机制暂用一行--&gt;  &lt;property&gt;      &lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;      &lt;value&gt;          sshfence          shell(/bin/true)      &lt;/value&gt;  &lt;/property&gt;  &lt;!-- 使用sshfence隔离机制时需要ssh免登陆 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;/name&gt;      &lt;value&gt;/home/hadoop/.ssh/id_rsa&lt;/value&gt;  &lt;/property&gt;  &lt;!-- 配置sshfence隔离机制超时时间 --&gt;  &lt;property&gt;      &lt;name&gt;dfs.ha.fencing.ssh.connect-timeout&lt;/name&gt;      &lt;value&gt;30000&lt;/value&gt;  &lt;/property&gt;</code></pre><hr><p><strong>修改 /home/hadoop/etc/hadoop/ mapred-site.xml</strong><br>这个文件默认不存在，需要从 mapred-site.xml.template 复制过来<br>在 <configuration> 块儿中添加：</p><property><p><name>mapreduce.framework.name</name></p><p><value>yarn</value></p></property><property><p><name>mapreduce.jobhistory.address</name></p><p><value>wqkenqing:10020</value></p></property><property><p><name>mapreduce.jobhistory.webapp.address</name></p><p><value>wqkenqing:19888</value></p></property>*****修改 /home/hadoop/etc/hadoop/ yarn-site.xml**在 <configuration> 块儿中添加：<property><p><name>yarn.nodemanager.aux-services</name></p><p><value>mapreduce_shuffle</value></p></property><property><p><name>yarn.nodemanager.auxservices.mapreduce.shuffle.class</name></p><p><value>org.apache.hadoop.mapred.ShuffleHandler</value></p></property><property><p><name>yarn.resourcemanager.address</name></p><p><value>wqkenqing:8032</value></p></property><property><p><name>yarn.resourcemanager.scheduler.address</name></p><p><value>wqkenqing:8030</value></p></property><property><p><name>yarn.resourcemanager.resource-tracker.address</name></p><p><value>wqkenqing:8031</value></p></property><property><p><name>yarn.resourcemanager.admin.address</name></p><p><value>wqkenqing:8033</value></p></property><property><p><name>yarn.resourcemanager.webapp.address</name></p><p><value>wqkenqing:8088</value></p></property>*****修改 /home/hadoop/etc/hadoop/ slaves**<p>删除已有内容，添加：<br>wqkenqing02（data节点）</p><hr><p><a href="http://115.29.97.126:50070/" target="_blank" rel="noopener">http://115.29.97.126:50070/</a></p><hr><p><strong>启动 hadoop</strong><br>在master启动hadoop，从节点会自动启动<br><strong>初始化</strong><br>    hadoop-daemon.sh start journalnode<br>$ hdfs namenode -format<br>$ hadoop-daemon.sh start namenode<br>$ hadoop-daemon.sh start datanode<br>$ start-dfs.sh<br>$ start-yarn.sh</p><hr><p>启动报错<br><strong>java.io.IOException: All specified directories are failed to load.</strong><br>解决方式：配置文件中的地址书写有问题</p><hr><p>至此hadoop集群中的关键功能已经实现</p><ul><li>hdfs</li><li>mapreudce<br><a href="http://www.tuicool.com/articles/uAnyEfj" target="_blank" rel="noopener">集群配置参考文献</a></li></ul><hr><p>hadoop220集群运行状态：<br><img src="./1475419804382.png" srcset="/daydoc/img/loading.gif" lazyload alt="Alt text"></p><p><a href="http://f.dataguru.cn/thread-475940-1-1.html" target="_blank" rel="noopener">同步时钟参考文献</a><br>###hbase集成(尚未完成)</p><ul><li><a href="http://www.linuxidc.com/Linux/2013-06/86347p4.htm" target="_blank" rel="noopener">hadoop集群搭建参考文献</a></li><li></li></ul><hr><p>###hbase集群启动指令</p><ul><li>start-hbase.sh</li><li><a href="http://blog.csdn.net/korder/article/details/47403801" target="_blank" rel="noopener">hbase中的zookeeper使用教程</a></li></ul><p>###集群重置</p><ul><li>hadoop配置完成(ali1+ali2)</li><li>添加hbase</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb使用</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/Mongodb/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/Mongodb/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><h1 id="Mongodb"><a href="#Mongodb" class="headerlink" title="Mongodb"></a>Mongodb</h1><h2 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h2><p> <code>json</code></p><p> mongoexport –host 172.23.8.16 –port=1240 -u spark -p spark –db locateInfo –collection dataCollect –out locateInfo.json</p><p><code>csv</code><br>mongoexport –host 172.23.8.16 –port=1240 -u spark -p spark –db locateInfo –collection dataCollect  –csv -f deviceId, gnssTime –out locateInfo.dat</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/编程/bash/shell积累</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/bash/shell%E7%A7%AF%E7%B4%AF/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/bash/shell%E7%A7%AF%E7%B4%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="shell-collect"><a href="#shell-collect" class="headerlink" title="shell collect"></a>shell collect</h1><p>/Users/wqkenqing/Library/Preferences/IntelliJIdea2019.3/scratches</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/编程/bash/python_learn</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/bash/python_learn/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/bash/python_learn/</url>
      
        <content type="html"><![CDATA[<h1 id="python-learn"><a href="#python-learn" class="headerlink" title="python learn"></a>python learn</h1><p>1.print 函数详细用法</p><p>print (value,…,sep=’’,end=’\n’,file=sys.stdout,flush=False)</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/编程/scala/scala学习</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/scala/scala%E5%AD%A6%E4%B9%A0/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/scala/scala%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<hr><p> title:  scala学习<br> date:  2020-07-23<br> tags:</p><hr> <a id="more"></a>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/docker/docker</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/docker/docker/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/docker/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-积累"><a href="#docker-积累" class="headerlink" title="docker 积累"></a>docker 积累</h1><h2 id="常用操作命令"><a href="#常用操作命令" class="headerlink" title="常用操作命令"></a>常用操作命令</h2><p>docker pull XXXX</p><p>docker search nginx 搜索镜像</p><p>docker pull nginx 拉取镜像</p><p>docker images 查看镜像</p><p>docker save XXXX 导出镜象</p><h2 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">Dockerfile</span> 的组成 与常用编辑形式<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/docker/docker操作</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/docker/docker%E6%93%8D%E4%BD%9C/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/docker/docker%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>docker run -d –restart=unless-stopped  -v /data/upload/newInfo.txt:/newInfo.txt    registry.lisong.pub:5000/kafka_tmp<br>docker run -d –restart=unless-stopped  -v /Users/wqkenqing/Desktop/newInfo.txt:/newInfo.txt    kafka_tmp<br>docker run -d –restart=unless-stopped  -v /data/upload/newInfo.txt:/newInfo.txt    registry.lisong.pub:5000/kafka_tmp<br>docker run  -d  –restart=unless-stopped -v /data/upload/state_info.txt:/state_info.txt    registry.lisong.pub:5000/kafka_tmpn<br>docker run -d –restart=unless-stopped  -v /data/upload/newInfo.txt:/newInfo.txt    registry.lisong.pub:5000/kafka_tmp<br>docker run -d –restart=unless-stopped  -v /data/upload/newInfo.txt:/info.txt    registry.lisong.pub:5000/kafka_all /info.txt jzw_toll_island_infonn</p><p>docker run -d –restart=unless-stopped  -v /Users/wqkenqing/Desktop/newInfo.txt:/info.txt    kafka_all /info.txt jzw_toll_island_infonn<br>docker run   -v /Users/wqkenqing/Desktop/newInfo.txt:/info.txt    kafka_all /info.txt jzw_toll_island_infonn<br>docker run  -d –restart=unless-stopped -v /data/upload/newInfo.txt:/info.txt    registry.lisong.pub:5000/kafka_all /info.txt jzw_toll_island_infonn<br>docker run  -d –restart=unless-stopped -v /data/upload/state_info.txt:/info.txt   registry.lisong.pub:5000/kafka_all /info.txt jzw_toll_island_state<br>docker run  -d –restart=unless-stopped -v /data/upload/newInfo.txt:/info.txt    registry.lisong.pub:5000/kafka214 /info.txt jzw_toll_island_infonn<br>docker run  -d -v /Users/wqkenqing/Desktop/newInfo.txt:/info.txt    kafk214 /info.txt jzw_toll_island_infonn</p><p>214</p><p>docker run  -d –name info  –restart=unless-stopped -v /data/upload/newInfo.txt:/info.txt    registry.lisong.pub:5000/kafka214 /info.txt jzw_toll_island_infonn</p><p>docker run  -d –name info  –restart=unless-stopped -v /data/upload/newInfo.txt:/info.txt    registry.lisong.pub:5000/kafka214 /info.txt jzw_toll_island_info</p><p>docker run  -d –name state –restart=unless-stopped -v /data/upload/state_info.txt:/info.txt    registry.lisong.pub:5000/kafka214 /info.txt jzw_toll_island_state</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/docker/docker镜像</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/docker/docker%E9%95%9C%E5%83%8F/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/docker/docker%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="docker-镜像"><a href="#docker-镜像" class="headerlink" title="docker 镜像"></a>docker 镜像</h1><p><a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a></p><p><a href="https://reg-mirror.qiniu.com" target="_blank" rel="noopener">https://reg-mirror.qiniu.com</a></p><p><a href="https://dockerhub.azk8s.cn" target="_blank" rel="noopener">https://dockerhub.azk8s.cn</a></p><h2 id="my-mirror-on-aliyun"><a href="#my-mirror-on-aliyun" class="headerlink" title="my mirror on aliyun"></a>my mirror on aliyun</h2><p>registry.cn-chengdu.aliyuncs.com/kuiq_wang/daily</p><h2 id="company"><a href="#company" class="headerlink" title="company"></a>company</h2><p>registry.lisong.pub:5000<br>registry.lisong.pub:28500</p><p>{<br>  “registry-mirrors”: [“<a href="http://hub-mirror.c.163.com&quot;]">http://hub-mirror.c.163.com&quot;]</a><br>}</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/front_end/nginx部署</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/front_end/nginx%E9%83%A8%E7%BD%B2/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/front_end/nginx%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>server {<br>  listen 8089;<br>  server_name ; // 你的域名或者 ip<br>  root /root/H-ui.admin; // 你的克隆到的项目路径<br>  index index.html; // 显示首页<br>  location ~* ^.+.(jpg|jpeg|gif|png|ico|css|js|pdf|txt){<br>    root //root/H-ui.admin;<br>  } // 静态文件访问<br>}</p><p>server {<br>    listen       9001;<br>    server_name  localhost;<br>    location / {<br>        root   /root/node-project/pm2test;<br>        #index  index.html index.htm;<br>    }<br>}</p><h1 id="For-more-information-on-configuration-see"><a href="#For-more-information-on-configuration-see" class="headerlink" title="For more information on configuration, see:"></a>For more information on configuration, see:</h1><h1 id="Official-English-Documentation-http-nginx-org-en-docs"><a href="#Official-English-Documentation-http-nginx-org-en-docs" class="headerlink" title="* Official English Documentation: http://nginx.org/en/docs/"></a>* Official English Documentation: <a href="http://nginx.org/en/docs/" target="_blank" rel="noopener">http://nginx.org/en/docs/</a></h1><h1 id="Official-Russian-Documentation-http-nginx-org-ru-docs"><a href="#Official-Russian-Documentation-http-nginx-org-ru-docs" class="headerlink" title="* Official Russian Documentation: http://nginx.org/ru/docs/"></a>* Official Russian Documentation: <a href="http://nginx.org/ru/docs/" target="_blank" rel="noopener">http://nginx.org/ru/docs/</a></h1><p>user root;<br>worker_processes auto;<br>error_log /var/log/nginx/error.log;<br>pid /run/nginx.pid;</p><h1 id="Load-dynamic-modules-See-usr-share-nginx-README-dynamic"><a href="#Load-dynamic-modules-See-usr-share-nginx-README-dynamic" class="headerlink" title="Load dynamic modules. See /usr/share/nginx/README.dynamic."></a>Load dynamic modules. See /usr/share/nginx/README.dynamic.</h1><p>include /usr/share/nginx/modules/*.conf;</p><p>events {<br>    worker_connections 1024;<br>}</p><p>http {<br>    log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘<br>                      ‘$status $body_bytes_sent “$http_referer” ‘<br>                      ‘“$http_user_agent” “$http_x_forwarded_for”‘;</p><pre><code class="hljs">access_log  /var/log/nginx/access.log  main;sendfile            on;tcp_nopush          on;tcp_nodelay         on;keepalive_timeout   65;types_hash_max_size 2048;include             /etc/nginx/mime.types;default_type        application/octet-stream;# Load modular configuration files from the /etc/nginx/conf.d directory.# See http://nginx.org/en/docs/ngx_core_module.html#include# for more information.#include /etc/nginx/conf.d/*.conf;server {</code></pre><p>  listen 8089;<br>  server_name  116.196.81.123;<br>  root /root/H-ui.admin;<br>  index index.html;<br>  location ~* ^.+.(jpg|jpeg|gif|png|ico|css|js|pdf|txt){<br>    root //root/H-ui.admin;<br>  }<br>}<br>    include /etc/nginx/default.d/*.conf;</p><h1 id="Settings-for-a-TLS-enabled-server"><a href="#Settings-for-a-TLS-enabled-server" class="headerlink" title="Settings for a TLS enabled server."></a>Settings for a TLS enabled server.</h1><p>#</p><h1 id="server"><a href="#server" class="headerlink" title="server {"></a>server {</h1><h1 id="listen-443-ssl-http2-default-server"><a href="#listen-443-ssl-http2-default-server" class="headerlink" title="listen       443 ssl http2 default_server;"></a>listen       443 ssl http2 default_server;</h1><h1 id="listen-443-ssl-http2-default-server-1"><a href="#listen-443-ssl-http2-default-server-1" class="headerlink" title="listen       [::]:443 ssl http2 default_server;"></a>listen       [::]:443 ssl http2 default_server;</h1><h1 id="server-name"><a href="#server-name" class="headerlink" title="server_name  _;"></a>server_name  _;</h1><h1 id="root-usr-share-nginx-html"><a href="#root-usr-share-nginx-html" class="headerlink" title="root         /usr/share/nginx/html;"></a>root         /usr/share/nginx/html;</h1><p>#</p><h1 id="ssl-certificate-“-etc-pki-nginx-server-crt”"><a href="#ssl-certificate-“-etc-pki-nginx-server-crt”" class="headerlink" title="ssl_certificate “/etc/pki/nginx/server.crt”;"></a>ssl_certificate “/etc/pki/nginx/server.crt”;</h1><h1 id="ssl-certificate-key-“-etc-pki-nginx-private-server-key”"><a href="#ssl-certificate-key-“-etc-pki-nginx-private-server-key”" class="headerlink" title="ssl_certificate_key “/etc/pki/nginx/private/server.key”;"></a>ssl_certificate_key “/etc/pki/nginx/private/server.key”;</h1><h1 id="ssl-session-cache-shared-SSL-1m"><a href="#ssl-session-cache-shared-SSL-1m" class="headerlink" title="ssl_session_cache shared:SSL:1m;"></a>ssl_session_cache shared:SSL:1m;</h1><h1 id="ssl-session-timeout-10m"><a href="#ssl-session-timeout-10m" class="headerlink" title="ssl_session_timeout  10m;"></a>ssl_session_timeout  10m;</h1><h1 id="ssl-ciphers-HIGH-aNULL-MD5"><a href="#ssl-ciphers-HIGH-aNULL-MD5" class="headerlink" title="ssl_ciphers HIGH:!aNULL:!MD5;"></a>ssl_ciphers HIGH:!aNULL:!MD5;</h1><h1 id="ssl-prefer-server-ciphers-on"><a href="#ssl-prefer-server-ciphers-on" class="headerlink" title="ssl_prefer_server_ciphers on;"></a>ssl_prefer_server_ciphers on;</h1><p>#</p><h1 id="Load-configuration-files-for-the-default-server-block"><a href="#Load-configuration-files-for-the-default-server-block" class="headerlink" title="# Load configuration files for the default server block."></a># Load configuration files for the default server block.</h1><h1 id="include-etc-nginx-default-d-conf"><a href="#include-etc-nginx-default-d-conf" class="headerlink" title="include /etc/nginx/default.d/*.conf;"></a>include /etc/nginx/default.d/*.conf;</h1><p>#</p><h1 id="location"><a href="#location" class="headerlink" title="location / {"></a>location / {</h1><h1 id=""><a href="#" class="headerlink" title="}"></a>}</h1><p>#</p><h1 id="error-page-404-404-html"><a href="#error-page-404-404-html" class="headerlink" title="error_page 404 /404.html;"></a>error_page 404 /404.html;</h1><h1 id="location-40x-html"><a href="#location-40x-html" class="headerlink" title="location = /40x.html {"></a>location = /40x.html {</h1><h1 id="-1"><a href="#-1" class="headerlink" title="}"></a>}</h1><p>#</p><h1 id="error-page-500-502-503-504-50x-html"><a href="#error-page-500-502-503-504-50x-html" class="headerlink" title="error_page 500 502 503 504 /50x.html;"></a>error_page 500 502 503 504 /50x.html;</h1><h1 id="location-50x-html"><a href="#location-50x-html" class="headerlink" title="location = /50x.html {"></a>location = /50x.html {</h1><h1 id="-2"><a href="#-2" class="headerlink" title="}"></a>}</h1><h1 id="-3"><a href="#-3" class="headerlink" title="}"></a>}</h1><p>}</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/front_end/调研</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/front_end/%E8%B0%83%E7%A0%94/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/front_end/%E8%B0%83%E7%A0%94/</url>
      
        <content type="html"><![CDATA[<p>调研几款好用的前端框架与架构</p><ol><li>H-ui</li></ol><p>早期接触过</p><p>kafka管理</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/hy-sjksh-info-dev/docker-compose</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/hy-sjksh-info-dev/docker-compose/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/hy-sjksh-info-dev/docker-compose/</url>
      
        <content type="html"><![CDATA[{"version":"2.3","services":{"sjksh-store-info":{"image":"registry.lisong.pub:28500/hy/hy-sjksh-info-dev-v6","container_name":"hy-sjksh-info-dev","cpus":2,"mem_limit":"2g","restart":"unless-stopped","extra_hosts":["namenode:192.168.10.100","datanode1:192.168.10.101","datanode2:192.168.10.102","datanode3:192.168.10.103","namenode2:192.168.10.104"],"env_file":["common.env"],"environment":["JAVA_OPTIONS=-XX:CompressedClassSpaceSize=32m"]}}}]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/owncloud/账号</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/owncloud/%E8%B4%A6%E5%8F%B7/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/owncloud/%E8%B4%A6%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="账号管理"><a href="#账号管理" class="headerlink" title="账号管理"></a>账号管理</h1><table><thead><tr><th align="left">账号</th><th align="left">密码</th></tr></thead><tbody><tr><td align="left">home</td><td align="left">home123</td></tr><tr><td align="left">kuiq.wang</td><td align="left"></td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/ubuntu/desk_gui</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ubuntu/desk_gui/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ubuntu/desk_gui/</url>
      
        <content type="html"><![CDATA[<p>安装：</p><p>sudo apt-get install vnc4server xfce4</p><p>vncserver -geometry 1280x800 -alwaysshared :1</p><p> vncserver -kill :1</p><p> #!/bin/sh</p><h1 id="Uncomment-the-following-two-lines-for-normal-desktop"><a href="#Uncomment-the-following-two-lines-for-normal-desktop" class="headerlink" title="Uncomment the following two lines for normal desktop:"></a>Uncomment the following two lines for normal desktop:</h1><p>#unset SESSION_MANAGER<br>#exec /etc/X11/xinit/xinitrc</p><p>#[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup<br>#[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources<br>#xsetroot -solid grey<br>#vncconfig -iconic &amp;<br>#x-terminal-emulator -geometry 80x24+10+10 -ls -title “$VNCDESKTOP Desktop” &amp;<br>#x-window-manager &amp;<br>unset SESSION_MANAGER<br>unset DBUS_SESSION_BUS_ADDRESS<br>[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup<br>[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources<br>vncconfig -iconic &amp;<br>-session &amp;</p><p> sudo x11vnc -display :2 -auth ~/.vnc/passwd -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -shared -noxdamage -xrandr “resize” -rfbport 5900</p><p> sudo x11vnc -forever -bg -usepw -cursor arrow -display :2</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/ubuntu/linux自启服务</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ubuntu/linux%E8%87%AA%E5%90%AF%E6%9C%8D%E5%8A%A1/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ubuntu/linux%E8%87%AA%E5%90%AF%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">linux自启服务<br></code></pre></td></tr></table></figure><h2 id="ubuntu"><a href="#ubuntu" class="headerlink" title="ubuntu"></a>ubuntu</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/yd_server_config/README</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/yd_server_config/README/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/yd_server_config/README/</url>
      
        <content type="html"><![CDATA[<p>记录移动云服务器上部署的服务</p><table><thead><tr><th align="left">服务名</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">sjksh_store_info</td><td align="left">数据可视化模块的存储信息查询服务</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/cdh/hue</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/cdh/hue/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/cdh/hue/</url>
      
        <content type="html"><![CDATA[<h1 id="hue-使用"><a href="#hue-使用" class="headerlink" title="hue 使用"></a>hue 使用</h1><h2 id="hive-集成"><a href="#hive-集成" class="headerlink" title="hive 集成"></a>hive 集成</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> theme_click_log (user_id <span class="hljs-keyword">string</span> , theme_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>,leaf_cate_id <span class="hljs-keyword">string</span>,cate_leve1_id <span class="hljs-keyword">string</span>,<br>clk_cnt <span class="hljs-built_in">int</span>,reach_time <span class="hljs-built_in">date</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> user_item_purchase_log <span class="hljs-keyword">set</span> serdeproperties(<span class="hljs-string">'field.delim'</span>=<span class="hljs-string">','</span>);<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> theme_click_log (user_id <span class="hljs-keyword">string</span> , theme_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>,leaf_cate_id <span class="hljs-keyword">string</span>,cate_leve1_id <span class="hljs-keyword">string</span>,<br>clk_cnt <span class="hljs-built_in">int</span>,reach_time <span class="hljs-built_in">date</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> theme_item_pool (theme_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_item_purchase_log (user_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>,paytime <span class="hljs-keyword">string</span>);<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> item_embedding (item_id <span class="hljs-keyword">string</span>,emb <span class="hljs-keyword">string</span>)<span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_embedding (user_id <span class="hljs-keyword">string</span>,emb <span class="hljs-keyword">string</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> theme_click_log (user_id <span class="hljs-keyword">string</span> , theme_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>,leaf_cate_id <span class="hljs-keyword">string</span>,cate_leve1_id <span class="hljs-keyword">string</span>,<br>clk_cnt <span class="hljs-built_in">int</span>,reach_time <span class="hljs-built_in">date</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> theme_item_pool (theme_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_item_purchase_log (user_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>,paytime <span class="hljs-keyword">string</span>);<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> item_embedding (item_id <span class="hljs-keyword">string</span>,emb <span class="hljs-keyword">string</span>)<span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_embedding (user_id <span class="hljs-keyword">string</span>,emb <span class="hljs-keyword">string</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">test</span>;<br><br><br><span class="hljs-keyword">load</span> <span class="hljs-keyword">data</span> <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/data/upload/item_embedding.csv'</span> overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> item_embedding;<br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">count</span>(*) <span class="hljs-keyword">from</span> theme_click_log;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> theme_click_log (user_id <span class="hljs-keyword">string</span> , theme_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>,leaf_cate_id <span class="hljs-keyword">string</span>,cate_leve1_id <span class="hljs-keyword">string</span>,<br>clk_cnt <span class="hljs-built_in">int</span>,reach_time <span class="hljs-built_in">date</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> theme_item_pool (theme_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_item_purchase_log (user_id <span class="hljs-keyword">string</span>,item_id <span class="hljs-keyword">string</span>,paytime <span class="hljs-keyword">string</span>);<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> item_embedding (item_id <span class="hljs-keyword">string</span>,emb <span class="hljs-keyword">string</span>)<span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> user_embedding (user_id <span class="hljs-keyword">string</span>,emb <span class="hljs-keyword">string</span>) <span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>;<br><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">test</span>;<br><br><br><span class="hljs-keyword">load</span> <span class="hljs-keyword">data</span> <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/data/upload/item_embedding.csv'</span> overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> item_embedding;<br><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">count</span>(*) <span class="hljs-keyword">from</span> item_embedding;<br><br><span class="hljs-keyword">load</span> <span class="hljs-keyword">data</span> <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/data/upload/theme_item_pool.csv'</span> overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> theme_item_pool;<br><span class="hljs-keyword">load</span> <span class="hljs-keyword">data</span> <span class="hljs-keyword">local</span> inpath <span class="hljs-string">'/data/upload/user_item_purchase_log.csv'</span> overwrite <span class="hljs-keyword">into</span> <span class="hljs-keyword">table</span> user_item_purchase_log;<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> flight_info (flight_id <span class="hljs-built_in">int</span>,flight_time <span class="hljs-keyword">string</span>,area <span class="hljs-keyword">string</span>,flight_number <span class="hljs-built_in">int</span>,rise_up_airport <span class="hljs-built_in">int</span>,arrive_in_airport <span class="hljs-built_in">int</span>,rise_up_time <span class="hljs-keyword">string</span>,arrive_in_time <span class="hljs-keyword">string</span>,airplane_id <span class="hljs-built_in">int</span>,airplane_type <span class="hljs-built_in">int</span>,importance <span class="hljs-keyword">double</span>)<br><span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span><br><span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">'\t'</span>;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/hexo/spark/算子/Spark-Windos函数</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/%E7%AE%97%E5%AD%90/Spark-Windos%E5%87%BD%E6%95%B0/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/%E7%AE%97%E5%AD%90/Spark-Windos%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<hr><p> title:  spark-windows函数<br> date: 2020-7-20<br> tags: [spark,window]</p><hr><p> spark windows函数</p> <a id="more"></a><h1 id="spark-windows函数"><a href="#spark-windows函数" class="headerlink" title="spark-windows函数"></a>spark-windows函数</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/编程/bash/awk/awk</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/bash/awk/awk/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/bash/awk/awk/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">适合针对格式化文本操作<br></code></pre></td></tr></table></figure><h2 id="内置变量"><a href="#内置变量" class="headerlink" title="内置变量"></a>内置变量</h2><ul><li>FS(Field Separator)：输入字段分隔符， 默认为空白字符</li><li>OFS(Out of Field Separator)：输出字段分隔符， 默认为空白字符</li><li>RS(Record Separator)：输入记录分隔符(输入换行符)， 指定输入时的换行符</li><li>ORS(Output Record Separate)：输出记录分隔符（输出换行符），输出时用指定符号代替换行符</li><li>NF(Number for Field)：当前行的字段的个数(即当前行被分割成了几列)</li><li>NR(Number of Record)：行号，当前处理的文本行的行号。</li><li>FNR：各文件分别计数的行号</li><li>ARGC：命令行参数的个数</li><li>ARGV：数组，保存的是命令行所给定的各参数</li></ul><p>awk 其实相当是一门脚本语言,所以用法比较丰富.但一般来讲,一定程度的掌握就已经能满足我们日常使用了.至于是否需要更深入,则根据实际情况.</p><p>常规:</p><p>awk ‘{print $1 , $2}’ file.txt<br>输出file的1,2列</p><p><code>说明: awk 命令内容&#39;&#39;</code></p><h2 id="过滤记录"><a href="#过滤记录" class="headerlink" title="过滤记录"></a>过滤记录</h2><p>awk ‘$1&gt;2 ‘file.txt</p><p>$0     当前记录（这个变量中存放着整个行的内容）<br>$1~$n     当前记录的第n个字段，字段间由FS分隔<br>FS    输入字段分隔符 默认是空格或Tab<br>NF    当前记录中的字段个数，就是有多少列<br>NR    已经读出的记录数，就是行号，从1开始，如果有多个文件话，这个值也是不断累加中。<br>FNR    当前记录数，与NR不同的是，这个值会是各个文件自己的行号<br>RS    输入的记录分隔符， 默认为换行符<br>OFS    输出字段分隔符， 默认也是空格<br>ORS    输出的记录分隔符，默认为换行符<br>FILENAME    当前输入文件的名字</p><h3 id="指定分隔符"><a href="#指定分隔符" class="headerlink" title="指定分隔符"></a>指定分隔符</h3><p> awk  ‘BEGIN{FS=”:”} {print $1,$3,$6}’ /etc/passwd</p><p>亦可用 awk -F<br>指定多个分隔符</p><p>awk -F ‘[;:]’</p><h3 id="字符串匹配"><a href="#字符串匹配" class="headerlink" title="字符串匹配"></a>字符串匹配</h3><p>awk ‘$6 ~ /FIN/ || NR==1 {print NR,$4,$5,$6}’ OFS=”\t” netstat.txt</p><p>awk ‘$6 ~ /WAIT/ || NR==1 {print NR,$4,$5,$6}’ OFS=”\t” netstat.txt</p><p>awk ‘/LISTEN/‘ netstat.txt<br>awk ‘$6 ~ /FIN|TIME/ || NR==1 {print NR,$4,$5,$6}’ OFS=”\t” netstat.txt</p><p>awk ‘$6 !~ /WAIT/ || NR==1 {print NR,$4,$5,$6}’ OFS=”\t” netstat.txt</p><h4 id="if-else"><a href="#if-else" class="headerlink" title="if else"></a>if else</h4><p>awk ‘NR!=1{if($6 ~ /TIME|ESTABLISHED/) print &gt; “1.txt”;<br>else if($6 ~ /LISTEN/) print &gt; “2.txt”;<br>else print &gt; “3.txt” }’ netstat.txt</p><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/编程/python/summary/2020.3.17</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/summary/2020.3.17/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/summary/2020.3.17/</url>
      
        <content type="html"><![CDATA[<h1 id="python-summary"><a href="#python-summary" class="headerlink" title="python summary"></a>python summary</h1><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">the summary of recently knowledge which was <span class="hljs-keyword">about</span> <span class="hljs-keyword">python</span> !<br></code></pre></td></tr></table></figure><p>​    </p><h2 id="class-and-method"><a href="#class-and-method" class="headerlink" title="class and method"></a>class and method</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/front_end/接口规划/data-manager</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/front_end/%E6%8E%A5%E5%8F%A3%E8%A7%84%E5%88%92/data-manager/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/front_end/%E6%8E%A5%E5%8F%A3%E8%A7%84%E5%88%92/data-manager/</url>
      
        <content type="html"><![CDATA[<h2 id="kafka"><a href="#kafka" class="headerlink" title="kafka"></a>kafka</h2><p>添加topic<br>/data/kafka/add_topic</p><p>查询toipic</p><p>/data/kafka/select_topic</p><p>删除topic(待定)</p><p>/data/kafka/delete_topic</p><p>工具类</p><p>删除 topic List;</p><h2 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>王阁/技术/运维/yd_server_config/sjksh_store_info/docker-compose</title>
      <link href="/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/yd_server_config/sjksh_store_info/docker-compose/"/>
      <url>/daydoc/2021/04/26/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/yd_server_config/sjksh_store_info/docker-compose/</url>
      
        <content type="html"><![CDATA[{"version":"2.4","services":{"sjksh-store-info":{"image":"registry.lisong.pub:28500/hy/hy-sjksh-info-v1.5","container_name":"hy-sjksh-info","cpus":4,"mem_limit":"2g","restart":"unless-stopped","extra_hosts":["data1:10.103.22.40","data2:10.103.22.64","data3:10.103.22.65","app1:10.103.22.66","app2:10.103.22.67","app3:10.103.22.68"],"env_file":["common.env"],"environment":["JAVA_OPTIONS=-XX:CompressedClassSpaceSize=32m"]}}}]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SparkRDD算子</title>
      <link href="/daydoc/2020/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/%E7%AE%97%E5%AD%90/RDD%E7%AE%97%E5%AD%90/"/>
      <url>/daydoc/2020/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/%E7%AE%97%E5%AD%90/RDD%E7%AE%97%E5%AD%90/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><p> RDD算子合集<br>  transform</p><pre><code class="hljs">* map* flatMap* filter* distinct* union* intersection* substract* cartesian* maptoPair* flatMapToPair* combineByKey* reduceByKey* foldByKey* sortByKey* groupByKey* cogroup* substractByKey* join* fullOuterJoin* leftOuterJoin* rightOuterJoin</code></pre><p>Action<br>    * first<br>    * take</p>]]></content>
      
      
      
        <tags>
            
            <tag> spark </tag>
            
            <tag> rdd </tag>
            
            <tag> 算子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ELK-beats</title>
      <link href="/daydoc/2020/07/10/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ELK/logstash/beats/"/>
      <url>/daydoc/2020/07/10/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ELK/logstash/beats/</url>
      
        <content type="html"><![CDATA[<p>本文主要分为两大块,一是官网beat的介绍,与相应配置的说明.二是被官方收录的beat</p> <a id="more"></a><h1 id="beats"><a href="#beats" class="headerlink" title="beats"></a>beats</h1><p>elastic官网常规的beats主要有五种</p><ol><li>Filebeat 日志文件</li><li>Metricbeat 指标</li><li>Packetbeat 网络数据</li><li>Winlogbeat   windows事件日志</li><li>AuditBeat    审计数据</li><li>HeartBeat    运行时间监控</li><li>Functionbeat 无需要服务器的采集器</li></ol><h2 id="Filebeat"><a href="#Filebeat" class="headerlink" title="Filebeat"></a>Filebeat</h2>]]></content>
      
      
      
        <tags>
            
            <tag> beats </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>logstash使用</title>
      <link href="/daydoc/2020/07/09/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ELK/logstash/logstash/"/>
      <url>/daydoc/2020/07/09/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E8%BF%90%E7%BB%B4/ELK/logstash/logstash/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><h1 id="logstash使用"><a href="#logstash使用" class="headerlink" title="logstash使用"></a>logstash使用</h1><p>logstash使用管道方式进行日志的收集处理与输出</p><p>一般包括三个阶段</p><p>输入input-&gt;处理filter-&gt;输出output</p><hr><p>横线之上的内容是在logstash引入codec概念之前的主要流程,但引入codec之后则有所不同.</p><p>这里需要纠正之前的一个概念。Logstash 不只是一个input | filter | output 的数据流，<br>而是一个input | decode | filter | encode | output 的数据流！codec 就是用来 decode、encode 事件的。</p><p><code>即在接收到数据后,可以对数据进行再编码和解码后输出</code></p><p>即配置文件组成部份一般如下:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros">input &#123;<br>   <br>&#125;<br>filter &#123;<br>    <br>&#125;<br>output &#123;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>执行指令</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">logstash</span> <span class="hljs-selector-tag">-f</span> <span class="hljs-selector-tag">demo</span><span class="hljs-selector-class">.conf</span><br></code></pre></td></tr></table></figure><p><code>所以这里针对logstash主要的内容还是针对不同组件模块进行配置</code></p><h2 id="elasticsearch"><a href="#elasticsearch" class="headerlink" title="elasticsearch"></a>elasticsearch</h2><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs puppet"><span class="hljs-keyword">output</span> &#123;<br><span class="hljs-comment">#stdout &#123;  codec =&gt; rubydebug &#125;</span><br>elasticsearch &#123;<br><span class="hljs-attr">hosts</span> =&gt; [<span class="hljs-string">"127.0.0.1:9200"</span>]<br><span class="hljs-attr">template_overwrite</span> =&gt; <span class="hljs-keyword">true</span><br><span class="hljs-attr">index</span> =&gt; <span class="hljs-string">"rediscluster-%&#123;+YYYY.MM.dd&#125;"</span><br><span class="hljs-attr">workers</span> =&gt; <span class="hljs-number">5</span><br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="syslog"><a href="#syslog" class="headerlink" title="syslog"></a>syslog</h2><p>syslog.conf,rsyslog.conf</p>]]></content>
      
      
      
        <tags>
            
            <tag> logstash </tag>
            
            <tag> log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hive回顾</title>
      <link href="/daydoc/2020/06/23/%E7%8E%8B%E9%98%81/%E5%9B%9E%E9%A1%BE/hive/hive%E5%9B%9E%E9%A1%BE/"/>
      <url>/daydoc/2020/06/23/%E7%8E%8B%E9%98%81/%E5%9B%9E%E9%A1%BE/hive/hive%E5%9B%9E%E9%A1%BE/</url>
      
        <content type="html"><![CDATA[<p>DDL ,DML</p> <a id="more"></a><p> <code>hive 创建hbase内部表</code></p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs sql"> <span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> ods_uba.lin_test<br>(<br>   operate_no           <span class="hljs-keyword">string</span>,<br>   dev_no               <span class="hljs-keyword">string</span>,<br>   user_id              <span class="hljs-keyword">string</span>,<br>   start_time           <span class="hljs-keyword">string</span><br>)<br>PARTITIONED <span class="hljs-keyword">BY</span> (start_date <span class="hljs-keyword">string</span>) <br> CLUSTERED <span class="hljs-keyword">BY</span> (start_time)<br> <span class="hljs-keyword">INTO</span> <span class="hljs-number">16</span> BUCKETS<br> <span class="hljs-keyword">STORED</span> <span class="hljs-keyword">AS</span> ORC tblproperties(<span class="hljs-string">"parquet.compress"</span>=<span class="hljs-string">"SNAPPY"</span>);<br></code></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">external</span> <span class="hljs-keyword">table</span> bigdata17_user(<br>userid <span class="hljs-built_in">int</span>,<br>username <span class="hljs-keyword">string</span>,<br>fullname <span class="hljs-keyword">string</span>)  <br><span class="hljs-keyword">row</span> <span class="hljs-keyword">format</span> <span class="hljs-keyword">delimited</span> <span class="hljs-keyword">fields</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">','</span>   <br><span class="hljs-keyword">lines</span> <span class="hljs-keyword">terminated</span> <span class="hljs-keyword">by</span> <span class="hljs-string">'\n'</span>;<br></code></pre></td></tr></table></figure><h2 id="基本组成"><a href="#基本组成" class="headerlink" title="基本组成"></a>基本组成</h2><ol><li>database</li><li>表</li><li>分区</li><li>桶</li></ol><h2 id="表结构支持类型"><a href="#表结构支持类型" class="headerlink" title="表结构支持类型"></a>表结构支持类型</h2><p>hive是一个数据仓库,采用了一些类数据库的设计,但底层通过java实现,因此它各字段主要能支持的类型,基本与java的基本数据类型和一些常用对象一致.如<br> Integers</p><ul><li>TINYINT-1位的整型</li><li>SMALLINT-2位的整型</li><li>INT-4位的整型</li><li>BIGINT-8位的整型</li></ul><p>布尔类型</p><ul><li>BOOLEAN-TRUE/FALSE</li></ul><p>浮点类型</p><ul><li>FLOAT</li><li>DOUBLE</li></ul><p>定点数<br>   DECIMAL</p><p>字符串<br>   STRING<br>   VARCHAR<br>   CHAR</p><p>日期和时间<br>   TIMESTAMP<br>   DATE<br>二进制<br>   BINARY</p><p> 复杂类型</p><ul><li>结构体类型</li><li>MAP</li><li>数组</li></ul><h2 id="HIVE表的创建-管理"><a href="#HIVE表的创建-管理" class="headerlink" title="HIVE表的创建,管理"></a>HIVE表的创建,管理</h2><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><h4 id="内部表"><a href="#内部表" class="headerlink" title="内部表"></a>内部表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> page_view(viewTime <span class="hljs-built_in">INT</span>, userid <span class="hljs-built_in">BIGINT</span>,<br>                page_url <span class="hljs-keyword">STRING</span>, referrer_url <span class="hljs-keyword">STRING</span>,<br>                ip <span class="hljs-keyword">STRING</span> <span class="hljs-keyword">COMMENT</span> <span class="hljs-string">'IP Address of the User'</span>)<br><span class="hljs-keyword">COMMENT</span> <span class="hljs-string">'This is the page view table'</span><br>PARTITIONED <span class="hljs-keyword">BY</span>(dt <span class="hljs-keyword">STRING</span>, country <span class="hljs-keyword">STRING</span>)<br><span class="hljs-keyword">ROW</span> <span class="hljs-keyword">FORMAT</span> <span class="hljs-keyword">DELIMITED</span><br><span class="hljs-keyword">FIELDS</span> <span class="hljs-keyword">TERMINATED</span> <span class="hljs-keyword">BY</span> <span class="hljs-string">'1'</span><br><span class="hljs-keyword">STORED</span> <span class="hljs-keyword">AS</span> SEQUENCEFILE;<br></code></pre></td></tr></table></figure><h4 id="外部表"><a href="#外部表" class="headerlink" title="外部表"></a>外部表</h4><h3 id="展示表和分区"><a href="#展示表和分区" class="headerlink" title="展示表和分区"></a>展示表和分区</h3><h4 id="查看所有表"><a href="#查看所有表" class="headerlink" title="查看所有表"></a>查看所有表</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">tables</span><br></code></pre></td></tr></table></figure><h4 id="查看所有表的分区"><a href="#查看所有表的分区" class="headerlink" title="查看所有表的分区"></a>查看所有表的分区</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">SHOW</span> PARTITIONS <span class="hljs-built_in">table_name</span><br></code></pre></td></tr></table></figure><h4 id="查看表和表的列信息"><a href="#查看表和表的列信息" class="headerlink" title="查看表和表的列信息"></a>查看表和表的列信息</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">describe table_name</span><br></code></pre></td></tr></table></figure><h4 id="列出表的列和表的其它信息"><a href="#列出表的列和表的其它信息" class="headerlink" title="列出表的列和表的其它信息"></a>列出表的列和表的其它信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">describe</span> <span class="hljs-keyword">extended</span> table_name<br></code></pre></td></tr></table></figure><h4 id="列出表和分区的隐藏信息"><a href="#列出表和分区的隐藏信息" class="headerlink" title="列出表和分区的隐藏信息"></a>列出表和分区的隐藏信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">describe</span> <span class="hljs-keyword">extended</span> table_name <span class="hljs-keyword">PARTITION</span>(rowName=<span class="hljs-string">''</span>)<br></code></pre></td></tr></table></figure><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><h4 id="对表重命名"><a href="#对表重命名" class="headerlink" title="对表重命名"></a>对表重命名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> old_table_name <span class="hljs-keyword">RENAME</span> <span class="hljs-keyword">TO</span> new_table_name;<br></code></pre></td></tr></table></figure><h4 id="对已有表的列名进行重命名"><a href="#对已有表的列名进行重命名" class="headerlink" title="对已有表的列名进行重命名"></a>对已有表的列名进行重命名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">TABLE</span> old_table_name <span class="hljs-keyword">REPLACE</span> <span class="hljs-keyword">COLUMNS</span> (col1 <span class="hljs-keyword">TYPE</span>, ...);<br></code></pre></td></tr></table></figure><p>需要保持位置与类型相同,不然会有列丢失</p><h4 id="对已创建的表增加列"><a href="#对已创建的表增加列" class="headerlink" title="对已创建的表增加列"></a>对已创建的表增加列</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br>ALTER TABLE tab1 <span class="hljs-builtin-name">ADD</span> COLUMNS (c1 INT COMMENT <span class="hljs-string">'a new int column'</span>, c2 STRING<span class="hljs-built_in"> DEFAULT </span><span class="hljs-string">'def val'</span>);<br></code></pre></td></tr></table></figure><h3 id="删除表和分区"><a href="#删除表和分区" class="headerlink" title="删除表和分区"></a>删除表和分区</h3><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> <span class="hljs-built_in">table_name</span><br></code></pre></td></tr></table></figure><h4 id="删除分区"><a href="#删除分区" class="headerlink" title="删除分区"></a>删除分区</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> <span class="hljs-built_in">table_name</span> <span class="hljs-keyword">drop</span> <span class="hljs-keyword">PARTITION</span>()<br></code></pre></td></tr></table></figure><h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hive </tag>
            
            <tag> DDL </tag>
            
            <tag> DML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elk使用</title>
      <link href="/daydoc/2020/06/17/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/elk%E4%BD%BF%E7%94%A8/"/>
      <url>/daydoc/2020/06/17/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/elk%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><h1 id="elk使用"><a href="#elk使用" class="headerlink" title="elk使用"></a>elk使用</h1>]]></content>
      
      
      
        <tags>
            
            <tag> beats </tag>
            
            <tag> logstash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch dsl 详解</title>
      <link href="/daydoc/2020/06/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/esDSL%E8%AF%A6%E8%A7%A3/"/>
      <url>/daydoc/2020/06/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/esDSL%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><h1 id="DSL"><a href="#DSL" class="headerlink" title="DSL"></a>DSL</h1><p> dsl the full name is<br><code>Domain Specific Language</code></p><p>it is divided to two parts </p><p>Leaf query clauses:</p><p>particular query such as :term, match,range</p><p>Compound query clauses:</p><p>Compound query clauses wrap other leaf or compound queries and are used to combine multiple queries in a logical fashion (such as the bool or dis_max query), or to alter their behaviour (such as the constant_score query).</p><h2 id="Match-all-query"><a href="#Match-all-query" class="headerlink" title="Match all query"></a>Match all query</h2><p>全文查询，用于对分词的字段进行搜索。会用查询字段的分词器对查询的文本进行分词生成查询。可用于短语查询、模糊查询、前缀查询、临近查询等查询场景</p><p><code>query_all</code></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /_search<br>&#123;<br>    <span class="hljs-string">"query"</span>: &#123;<br>        <span class="hljs-string">"match_all"</span>: &#123;&#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="Full-text-queries"><a href="#Full-text-queries" class="headerlink" title="Full text queries"></a>Full text queries</h2><h3 id="match"><a href="#match" class="headerlink" title="match"></a>match</h3><h3 id="match-phrase"><a href="#match-phrase" class="headerlink" title="match_phrase"></a>match_phrase</h3><p>对句子,进行短语查询 </p><h3 id="match-phrase-prefix"><a href="#match-phrase-prefix" class="headerlink" title="match_phrase_prefix"></a>match_phrase_prefix</h3><h3 id="multi-match"><a href="#multi-match" class="headerlink" title="multi_match"></a>multi_match</h3><h3 id="common-terms"><a href="#common-terms" class="headerlink" title="common terms"></a>common terms</h3><h3 id="query-string"><a href="#query-string" class="headerlink" title="query_string"></a>query_string</h3><h3 id="simple-query-string"><a href="#simple-query-string" class="headerlink" title="simple_query_string"></a>simple_query_string</h3>]]></content>
      
      
      
        <tags>
            
            <tag> dsl </tag>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kafka极客</title>
      <link href="/daydoc/2020/06/15/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/kafka/kafka%E6%9E%81%E5%AE%A2/"/>
      <url>/daydoc/2020/06/15/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/kafka/kafka%E6%9E%81%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>kafka 极客时间<br> <a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> kakfa </tag>
            
            <tag> 极客时间 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python爬虫篇</title>
      <link href="/daydoc/2020/06/10/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/reptile/python%E7%88%AC%E8%99%AB%E7%AF%87/"/>
      <url>/daydoc/2020/06/10/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/reptile/python%E7%88%AC%E8%99%AB%E7%AF%87/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><p> <code>uses packages</code></p><ol><li>requests</li><li></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考试相关</title>
      <link href="/daydoc/2020/06/04/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%80%83%E8%AF%95/%E8%80%83%E8%AF%95%E7%9B%B8%E5%85%B3/"/>
      <url>/daydoc/2020/06/04/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%80%83%E8%AF%95/%E8%80%83%E8%AF%95%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><h2 id="一般专业："><a href="#一般专业：" class="headerlink" title="一般专业："></a>一般专业：</h2><p>思想政治理论<br>外国语<br>业务课一<br>业务课二；</p><h2 id="管理类联考专业："><a href="#管理类联考专业：" class="headerlink" title="管理类联考专业："></a>管理类联考专业：</h2><p>外国语</p><hr><p>非全日制</p><ul><li>金融</li><li>翻译</li><li>工程</li><li>护理</li><li>药学</li><li>工商管理</li><li>公共管理</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>docker启动mysql</title>
      <link href="/daydoc/2020/06/04/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/docker%E5%90%AF%E5%8A%A8mysql/"/>
      <url>/daydoc/2020/06/04/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/docker%E5%90%AF%E5%8A%A8mysql/</url>
      
        <content type="html"><![CDATA[<p>docker 的方式快速安装mysql</p> <a id="more"></a><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs docker"><br>docker <span class="hljs-keyword">run</span><span class="bash"> --net host -p 3306:3306 --name jd_user -e MYSQL_ROOT_PASSWORD=jd123456 -d mysql</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> docker </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python小结5</title>
      <link href="/daydoc/2020/06/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/summary/python5%E5%B0%8F%E7%BB%93/"/>
      <url>/daydoc/2020/06/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/summary/python5%E5%B0%8F%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>csv, json ,poi处理<br> <a id="more"></a></p><h2 id="csv"><a href="#csv" class="headerlink" title="csv"></a>csv</h2> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> csv<br></code></pre></td></tr></table></figure><p> 主要用到的方式</p><ul><li>csv.reader()</li><li>csv.writer()</li></ul><p>读csv和写csv</p><h2 id="json"><a href="#json" class="headerlink" title="json"></a>json</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> json<br><br><br><span class="hljs-comment">##针对对象</span><br><span class="hljs-comment">## 将python对象编码成json字符串, 返回json串</span><br>json.dumps()<br><span class="hljs-comment">## 将已编码的json串解码为python对象，返回python对应的数据类型</span><br>json.loads()<br><br><span class="hljs-comment">##针对文件的操作</span><br>json.dump()<br>json.load()<br><br><br><span class="hljs-comment"># 写入 JSON 数据</span><br><span class="hljs-keyword">with</span> open(<span class="hljs-string">'data.json'</span>, <span class="hljs-string">'w'</span>) <span class="hljs-keyword">as</span> f:<br>    json.dump(data, f)<br> <br><span class="hljs-comment"># 读取数据</span><br><span class="hljs-keyword">with</span> open(<span class="hljs-string">'data.json'</span>, <span class="hljs-string">'r'</span>) <span class="hljs-keyword">as</span> f:<br>    data = json.load(f)<br></code></pre></td></tr></table></figure><h2 id="elasticsearch"><a href="#elasticsearch" class="headerlink" title="elasticsearch"></a>elasticsearch</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> json </tag>
            
            <tag> xml </tag>
            
            <tag> poi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python小结4</title>
      <link href="/daydoc/2020/06/02/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/summary/python%E5%B0%8F%E7%BB%934/"/>
      <url>/daydoc/2020/06/02/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/summary/python%E5%B0%8F%E7%BB%934/</url>
      
        <content type="html"><![CDATA[<p>python 常见的connect and operate </p> <a id="more"></a><h1 id="python-小结4"><a href="#python-小结4" class="headerlink" title="python 小结4"></a>python 小结4</h1><h2 id="python-connect-redis"><a href="#python-connect-redis" class="headerlink" title="python connect redis"></a>python connect redis</h2><p>通过pip install redis 在python3中安装redis的包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><br>pool =redis.ConnectionPool(host=<span class="hljs-string">'jd_cloud'</span>, port=<span class="hljs-number">6380</span>, db=<span class="hljs-number">0</span>, password=<span class="hljs-string">'test123'</span>)<br>r = redis.Redis(connection_pool=pool)<br></code></pre></td></tr></table></figure><h2 id="python-connect-kafka"><a href="#python-connect-kafka" class="headerlink" title="python connect kafka"></a>python connect kafka</h2><h3 id="kafka-producer"><a href="#kafka-producer" class="headerlink" title="kafka producer"></a>kafka producer</h3><h3 id="kafka-consumer"><a href="#kafka-consumer" class="headerlink" title="kafka consumer"></a>kafka consumer</h3><h4 id="多种consumer"><a href="#多种consumer" class="headerlink" title="多种consumer"></a>多种consumer</h4><h2 id="python-文本处理"><a href="#python-文本处理" class="headerlink" title="python 文本处理"></a>python 文本处理</h2>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> connect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python小结3</title>
      <link href="/daydoc/2020/05/29/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/summary/python%E5%B0%8F%E7%BB%933/"/>
      <url>/daydoc/2020/05/29/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E7%BC%96%E7%A8%8B/python/summary/python%E5%B0%8F%E7%BB%933/</url>
      
        <content type="html"><![CDATA[ <a id="more"></a><h1 id="python小结3"><a href="#python小结3" class="headerlink" title="python小结3"></a>python小结3</h1><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="类与实例"><a href="#类与实例" class="headerlink" title="类与实例"></a>类与实例</h3><p>python类的声()明会在类名上加<br>os.rmdir()</p><p>eg</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span><span class="hljs-params">(object)</span>:</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><p>构造函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span><span class="hljs-params">(self,field1,field2)</span>:</span><br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h3 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h3><p>python中 私有属性是通过 <strong>来标识,用</strong>标识后则表示该属性是这个类的私有属性,则意味着直接通过一般的*.__是难以访问到的.</p><p>如果是<em>的形式,则也是声明将这个认作是私有变量的属性,但却是可以直接通过*.</em>*的形式进行访问的.</p><p>`<br>注意:<strong>的属性并不是完全不能用实例直接访问,如Student类为例通过student._Stuent</strong>name的形式也能直接访问</p><p>从这里来看,这一点是不太符合面向对象编程的精神的,也就是说python解释器不会从根本上防止你乱搞,取用哪种编程规范主要还是要靠自觉</p><p>`</p><h3 id="继承与多态"><a href="#继承与多态" class="headerlink" title="继承与多态"></a>继承与多态</h3><p>总得来讲与java类似.但因为python是动态语言,所以它符合”鸭子类型”的特点,即在多态使用时,只要具有同样的方法,即可接收调用.</p><h3 id="获取对象信息"><a href="#获取对象信息" class="headerlink" title="获取对象信息"></a>获取对象信息</h3><p>通过types模块下的type()方法来获取对象类型</p><p>通过isinstance()来判断是否是这个类,可用于测试继承,也可通过逗号分隔,测试是不是这些类其中之一<br>通过dir()获取一个对象的所有属性和方法</p><h3 id="实例属性与类属性"><a href="#实例属性与类属性" class="headerlink" title="实例属性与类属性"></a>实例属性与类属性</h3><p>python 是动态语言,所以可以在创建实例后再赋值</p><p>eg:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><br>student=Stuent()<br>student.score=<span class="hljs-number">90</span><br></code></pre></td></tr></table></figure><p>即这score是后续才赋值上去的.</p><p>这就是实例属性</p><p>而本身类需要绑定一些属性呢,这就可以直接定义在class中,即类属性.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span><span class="hljs-params">(object)</span>:</span><br>    name=<span class="hljs-string">'ken'</span><br>    age=<span class="hljs-number">18</span><br></code></pre></td></tr></table></figure><h2 id="面向对象进阶"><a href="#面向对象进阶" class="headerlink" title="面向对象进阶"></a>面向对象进阶</h2><h3 id="使用slots"><a href="#使用slots" class="headerlink" title="使用slots"></a>使用<strong>slots</strong></h3><p>因为动态语言的特性,python实例在创建后还能再绑定方法与属性. 这里如果我们想要约束只绑定某些属性时可以通过</p><p><strong>slots</strong>(a,b)的形式来操作.</p><p>#</p><p>注意:该类若被子类继承,在子类未定义<strong>slots</strong>时,子类实例是不会生效的.</p><h3 id="property"><a href="#property" class="headerlink" title="@property"></a>@property</h3><p>类似java getter</p><p>@feild.setter</p><h3 id="多重继承"><a href="#多重继承" class="headerlink" title="多重继承"></a>多重继承</h3><p>因为python是动态语言,所以能够继承多个类,但需要考虑下设计理念,即扩展继承时,扩展继承的类可以命名为**Runnable,与 XXMixIn</p><h3 id="定制类的方法"><a href="#定制类的方法" class="headerlink" title="定制类的方法"></a>定制类的方法</h3><p><strong>init</strong><br><strong>iter</strong><br><strong>str</strong></p><p>等方法,这些方法统一后面来整理</p><h3 id="枚举类"><a href="#枚举类" class="headerlink" title="枚举类"></a>枚举类</h3><h3 id="元类有些类似反射"><a href="#元类有些类似反射" class="headerlink" title="元类有些类似反射"></a>元类有些类似反射</h3><p>后面再定向研究</p><h2 id="错误与调试"><a href="#错误与调试" class="headerlink" title="错误与调试"></a>错误与调试</h2><p>try…except…finally..</p><h2 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h2><h3 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h3><p>要以读文件的模式打开一个文件对象，使用Python内置的open()函数，传入文件名和标示符：</p><p>file open 最后需要file.close </p><p>可以通过with open(“path”,’’) as f : 的写法来简写,这样写不用写f.close()</p><p>open(‘path’,’rb’) //这样写才是读文件</p><p>读时,f.read()会将文件全量写到内存里去,所以小文件这么简写还能接受,但若文件较大,内存会有较大压力.</p><p>f.read(size),则是一次读取内容的大小.</p><p>f.readlines()则是读成list的形式.</p><p>open(‘path’,’wb’)//这样获取的文件操作实例是写对象</p><p>f.write(“content”)</p><p>同样也可以用with的写法来获取对象</p><p><code>前者写对象的获取的实例,若文件存在,则会覆盖该文件</code></p><p>open(‘path’,’wba’)这样的写法是续写文件</p><h3 id="内存数据操作-StringIO-ByteIO"><a href="#内存数据操作-StringIO-ByteIO" class="headerlink" title="内存数据操作(StringIO ByteIO)"></a>内存数据操作(StringIO ByteIO)</h3><h3 id="操作文件和目录"><a href="#操作文件和目录" class="headerlink" title="操作文件和目录"></a>操作文件和目录</h3><p>os.path.join<br>os.path<br>os.path.exists()</p><p>os.mkdir()<br>os.rmdir()</p><p>os.path.abspath()</p><h2 id="常用包"><a href="#常用包" class="headerlink" title="常用包"></a>常用包</h2><p>datetime.datetime</p><p>即datetime包下的datetime类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> datetime.datetime<br><span class="hljs-keyword">or</span> <br><span class="hljs-keyword">from</span> datetime <span class="hljs-keyword">import</span> datetime<br></code></pre></td></tr></table></figure><h3 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h3><p>datetime.now()</p><h3 id="获取指定的时间"><a href="#获取指定的时间" class="headerlink" title="获取指定的时间"></a>获取指定的时间</h3><p>dt=datetime(2020,05,23,12,32)</p><p><code>转成timestamp</code><br>dt.timestamp()</p><p><code>timestamp to datetime</code></p><p>datetime.fromtimestamp(t)</p><p><code>转成格林制式时间</code><br>datetime.utcfromtimestamp(t)</p><p><code>str转成datetime</code></p><h2 id="collections"><a href="#collections" class="headerlink" title="collections"></a>collections</h2><h3 id="namedtuple"><a href="#namedtuple" class="headerlink" title="namedtuple"></a>namedtuple</h3><h3 id="deque-“双向列表”"><a href="#deque-“双向列表”" class="headerlink" title="deque (“双向列表”)"></a>deque (“双向列表”)</h3><h3 id="defaultdict"><a href="#defaultdict" class="headerlink" title="defaultdict"></a>defaultdict</h3><p>使用dict时，如果引用的Key不存在，就会抛出KeyError。如果希望key不存在时，返回一个默认值，就可以用defaultdict：</p><h3 id="OrderedDict"><a href="#OrderedDict" class="headerlink" title="OrderedDict"></a>OrderedDict</h3><p>注意，OrderedDict的Key会按照插入的顺序排列，不是Key本身排序：</p><h3 id="ChainMap-再研究"><a href="#ChainMap-再研究" class="headerlink" title="ChainMap(再研究)"></a>ChainMap(再研究)</h3><h3 id="Counter"><a href="#Counter" class="headerlink" title="Counter"></a>Counter</h3><p>Counter实际上也是dict的一个子类，上面的结果可以看出每个字符出现的次数。</p>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac python版本替换</title>
      <link href="/daydoc/2020/05/25/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/mac%20python%E7%89%88%E6%9C%AC%E6%9B%BF%E6%8D%A2/"/>
      <url>/daydoc/2020/05/25/%E7%8E%8B%E9%98%81/%E6%97%A5%E5%B8%B8/%E8%BF%90%E7%BB%B4/mac%20python%E7%89%88%E6%9C%AC%E6%9B%BF%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">mac <span class="hljs-keyword">python</span>版本替换<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mac python2 python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>es常用命令</title>
      <link href="/daydoc/2020/02/25/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/es%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/daydoc/2020/02/25/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/es/es%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>查看集群是否健康</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /_cluster/healt<br></code></pre></td></tr></table></figure><p>查看节点列表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /_cat/nodes?v<br><br>加v将表头显示出来<br></code></pre></td></tr></table></figure><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="查询所有索引"><a href="#查询所有索引" class="headerlink" title="查询所有索引"></a>查询所有索引</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /_cat/indices?v<br></code></pre></td></tr></table></figure><h3 id="查看某个索引的映射"><a href="#查看某个索引的映射" class="headerlink" title="查看某个索引的映射"></a>查看某个索引的映射</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">GET</span> /indeName/<span class="hljs-keyword">mapping</span><br></code></pre></td></tr></table></figure><h3 id="查看某个索引的设置"><a href="#查看某个索引的设置" class="headerlink" title="查看某个索引的设置"></a>查看某个索引的设置</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">GET</span> /indeName/<span class="hljs-keyword">mapping</span><br></code></pre></td></tr></table></figure><h3 id="添加一个索引"><a href="#添加一个索引" class="headerlink" title="添加一个索引"></a>添加一个索引</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs dts">PUT /indexName<br>&#123;<br>  <span class="hljs-string">"settings"</span>: &#123;<br>     <span class="hljs-string">"number_of_shards"</span>: <span class="hljs-number">3</span>,<br>     <span class="hljs-string">"number_of_replicas"</span>: <span class="hljs-number">1</span><br>   &#125;,<br>   <span class="hljs-string">"mappings"</span>: &#123;<br>     <span class="hljs-string">"man"</span>: &#123;<br>       <span class="hljs-string">"dynamic"</span>: <span class="hljs-string">"strict"</span>,<br>       <span class="hljs-string">"properties"</span>: &#123;<br>         <span class="hljs-string">"name"</span>: &#123;<br>           <span class="hljs-string">"type"</span>: <span class="hljs-string">"text"</span><br>         &#125;,<br>         <span class="hljs-string">"age"</span>: &#123;<br>           <span class="hljs-string">"type"</span>: <span class="hljs-string">"integer"</span><br>         &#125;,<br>         <span class="hljs-string">"birthday"</span>: &#123;<br>           <span class="hljs-string">"type"</span>: <span class="hljs-string">"date"</span>,<br>           <span class="hljs-string">"format"</span>: <span class="hljs-string">"yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis"</span><br>         &#125;,<br>         <span class="hljs-string">"address"</span>:&#123;<br>           <span class="hljs-string">"dynamic"</span>: <span class="hljs-string">"true"</span>,<br>           <span class="hljs-string">"type"</span>: <span class="hljs-string">"object"</span><br>         &#125;<br>       &#125;<br>     &#125;<br>   &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>dynamic关键词说明:<br>“dynamic”:”strict”  表示如果遇到陌生field会报错<br>“dynamic”: true  表示如果遇到陌生字段，就进行dynamic mapping<br>“dynamic”: “false”   表示如果遇到陌生字段，就忽略</p><hr><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><p>删除单个索引</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><br><span class="hljs-keyword">DELETE</span> /indexName<br></code></pre></td></tr></table></figure><p>删除多个</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><br>DELETE /i<span class="hljs-symbol">ndexName1</span>,i<span class="hljs-symbol">ndexName2</span><br></code></pre></td></tr></table></figure><h3 id="添加字段映射"><a href="#添加字段映射" class="headerlink" title="添加字段映射"></a>添加字段映射</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">PUT</span> /indexName/_mapping/<span class="hljs-meta">Field</span><br>&#123;<br>  <span class="hljs-string">"properties"</span>:&#123;<br>    <span class="hljs-string">"Field"</span>:&#123;<br>      <span class="hljs-string">"type"</span>:<span class="hljs-string">"text"</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="索引的别名"><a href="#索引的别名" class="headerlink" title="索引的别名"></a>索引的别名</h3><h4 id="创建索引别名"><a href="#创建索引别名" class="headerlink" title="创建索引别名"></a>创建索引别名</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">PUT</span> /indeName/_<span class="hljs-meta">alias</span>/aliasName<br></code></pre></td></tr></table></figure><p>获取索引别名</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /indexName/_alias/*<br></code></pre></td></tr></table></figure><p>查询别名对应的索引</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">GET <span class="hljs-regexp">/*/</span>_alias<span class="hljs-regexp">/aliasName</span><br></code></pre></td></tr></table></figure><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><h3 id="向索引中添加文档"><a href="#向索引中添加文档" class="headerlink" title="向索引中添加文档"></a>向索引中添加文档</h3><ol><li>自定义ID</li></ol><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs applescript">PUT /indexName/type/<span class="hljs-built_in">id</span><br>&#123;<br>  <span class="hljs-string">"Field1"</span>:<span class="hljs-string">"message"</span>,<br>  <span class="hljs-string">"Field2"</span>:<span class="hljs-string">"message"</span>,<br>  <span class="hljs-string">"Field3"</span>:<span class="hljs-string">"message"</span>,<br>  <span class="hljs-string">"Field4"</span>:<span class="hljs-string">"message"</span><br>&#125;<br><br>```  <br><br><span class="hljs-number">2.</span> 随机生成<span class="hljs-built_in">id</span><br></code></pre></td></tr></table></figure><p>POST /indexName/type<br>{<br>  “Field1”:”message”,<br>  “Field2”:”message”,<br>  “Field3”:”message”,<br>  “Field4”:”message”<br>}</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><br>后者则会自动生成id字符串<br><br><span class="hljs-number">3.</span> 修改文档<br><br>全文修改,即所有字段信息都要修改<br></code></pre></td></tr></table></figure><p>PUT /indexName/type/id<br>{<br>  “Field1”:”update message”,<br>  “Field2”:”update message”,<br>  “Field3”:”message”,<br>  “Field4”:”message”<br>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">部份修改<br></code></pre></td></tr></table></figure><p>POST /indexName/type/id/_update<br>{<br>  “doc”: {<br>    “FIELD”: “message”<br>  }<br>}</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">脚本<span class="hljs-comment">(再深入)</span><br></code></pre></td></tr></table></figure><p>POST /indexName/type/_id/_update<br>{<br>  “script”: {<br>    “lang”: “painless”,<br>    “source”: “ctx._source.age += 10”<br>  }<br>}</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript">在修改<span class="hljs-built_in">document</span>的时候，如果该文档不存在，则使用upsert操作进行初始化<br></code></pre></td></tr></table></figure><p>POST people/man/1/_update<br>{<br>  “script”: “ctx._source.age += 10”,<br>  “upsert”: {<br>    “age”: 20<br>  }<br>}</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### 删除文档<br><br><br>删除单个文档<br></code></pre></td></tr></table></figure><p>DELETE /indexName/type/id</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elm"><br>删除<span class="hljs-keyword">type</span>下所有的文档<br></code></pre></td></tr></table></figure><p>POST /indexName/type/_delete_by_query?conflicts=proceed<br>{<br>  “query”:{<br>    “match_all”:{</p><pre><code class="hljs">}</code></pre><p>  }<br>}</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### 查询文档<br><br>查询单个文档<br></code></pre></td></tr></table></figure><p>GET /indexName/type/id</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gcode"><br>批量查询文档<span class="hljs-comment">(待验证)</span><br></code></pre></td></tr></table></figure><p>GET /_mget<br>{<br>  “docs”: [<br>      {<br>        “_index”: “index1”,<br>        “_type”: “type”,<br>        “_id”: 1<br>      },<br>      {<br>        “_index”: “index2”,<br>        “_type”: “type”,<br>        “_id”: 2<br>      }<br>    ]<br>}</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">```<br><br>GET /indexName/type/_mget<br>&#123;<br><span class="hljs-string">"docs"</span>:[<br>&#123;<br>  <span class="hljs-string">"FEILD"</span>:<span class="hljs-string">"value"</span><br>&#125;,<br>&#123;<br>  <span class="hljs-string">"FEILD2"</span>:<span class="hljs-string">"value"</span><br>&#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p>查询所有文档</p><p>简单查询</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /indexName/_serach<br></code></pre></td></tr></table></figure><p>法二</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">POST <span class="hljs-meta-keyword">/people/</span>_serach<br>&#123;<br>  <span class="hljs-string">"query"</span>:&#123;<br>    <span class="hljs-string">"match_all"</span>:&#123;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查询某些字段内容</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><br>后面跟了 ?<span class="hljs-attribute">_source</span>=field1,field2<br><br>POST /people/_serach?<span class="hljs-attribute">_source</span>=field1,field2<br>&#123;<br>  <span class="hljs-string">"query"</span>:&#123;<br>    <span class="hljs-string">"match_all"</span>:&#123;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查询多个索引下的多个type</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">GET /i<span class="hljs-symbol">ndex1</span>,i<span class="hljs-symbol">ndex2</span>/type<span class="hljs-number">1</span>,type<span class="hljs-number">2</span>/_search<br></code></pre></td></tr></table></figure><p>查询所有索引下的部分type</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">GET /_all/<span class="hljs-keyword">type</span><span class="hljs-number">1</span>,<span class="hljs-keyword">type</span><span class="hljs-number">2</span>/_search<br></code></pre></td></tr></table></figure><h3 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>POST <span class="hljs-regexp">/indexName/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>:&#123;<br>    <span class="hljs-string">"match"</span>:&#123;<br>      <span class="hljs-string">"field"</span>:<span class="hljs-string">"message"</span><br>    &#125;<br>  &#125;<br>  ,<br>  <span class="hljs-string">"sort"</span>:[<br>  &#123;<br>    <span class="hljs-string">"filed"</span>:&#123;<span class="hljs-string">"order"</span>:<span class="hljs-string">"desc"</span>&#125;<br>  &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>注意</strong><br>message将会被拆分进行匹配,若message是中文,则会按切分后的每个字来匹配,若<br>message是英语,则会是按每个单词来匹配</p><p><img src="http://img.wqkenqing.ren/51ccc5cad8b8fbbbb6ef55d3106bfe43.png" srcset="/daydoc/img/loading.gif" lazyload alt=""><br><img src="http://img.wqkenqing.ren/47a3ffe716f0026c004b155836a56641.png" srcset="/daydoc/img/loading.gif" lazyload alt="示列图"></p><p>全文搜索(按准度)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> indexName/_search<br>&#123;<br>  <span class="hljs-string">"query"</span>:&#123;<br>    <span class="hljs-string">"match"</span>:&#123;<br>      <span class="hljs-string">"Field"</span>:&#123;<br>        <span class="hljs-string">"query"</span>:<span class="hljs-string">"val1 val2"</span>,<br>        <span class="hljs-string">"operator"</span>:<span class="hljs-string">"and"</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>即Fileld 中必须有val1,val2</p><p>按匹配度查询</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs groovy">GET <span class="hljs-regexp">/indexName/</span>_search<br>&#123;<br><span class="hljs-string">"query"</span>:&#123;<br>  <span class="hljs-string">"match"</span>:&#123;<br>    <span class="hljs-string">"Field"</span>:&#123;<br>      <span class="hljs-string">"query"</span>:<span class="hljs-string">"val1 val2 val3"</span><br>      <span class="hljs-string">"minimum_should_match"</span>:<span class="hljs-string">"val"</span> <span class="hljs-string">eg:</span><span class="hljs-number">20</span>%<br>    &#125;<br><br>  &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>即indexName,按Field中 val1 val2 val3 匹配度达到val即返回查询</p><h3 id="高级查询"><a href="#高级查询" class="headerlink" title="高级查询"></a>高级查询</h3><p>简单精准查询</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /indexName/_search<br>&#123;<br>  <span class="hljs-string">"query"</span>:&#123;<br>    <span class="hljs-string">"match_phrase"</span>:&#123;<br>      <span class="hljs-string">"Field"</span>:<span class="hljs-string">"val"</span><br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>即查询要完全匹配val,但若val只有一个中文,则会Field只要含有val,就会被查出</p><p>slop结合</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dts">GET <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"match_phrase"</span>: &#123;<br>      <span class="hljs-string">"name"</span>: &#123;<br>        <span class="hljs-string">"query"</span>: <span class="hljs-string">"张三"</span>,<br>        <span class="hljs-string">"slop"</span>: <span class="hljs-number">3</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>解读：slop是移动次数，上面案例表示“张”、“三”两个字可以经过最多挪动3次查询到！</p><p>rescore (重打分）</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs dts">GET <span class="hljs-meta-keyword">/forum/</span>article/_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"match"</span>: &#123;<br>      <span class="hljs-string">"content"</span>: <span class="hljs-string">"java spark"</span><br>    &#125;<br>  &#125;,<br>  <span class="hljs-string">"rescore"</span>:&#123;<br>    <span class="hljs-string">"window_size"</span>: <span class="hljs-number">50</span>,<br>    <span class="hljs-string">"query"</span>: &#123;<br>      <span class="hljs-string">"rescore_query"</span>: &#123;<br>        <span class="hljs-string">"match_phrase"</span>: &#123;<br>          <span class="hljs-string">"content"</span>: &#123;<br>            <span class="hljs-string">"query"</span>: <span class="hljs-string">"java spark"</span>,<br>            <span class="hljs-string">"slop"</span>: <span class="hljs-number">50</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>多字段匹配查询</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /indexName/_search<br>&#123;<br>  <span class="hljs-string">"query"</span>:&#123;<br>    <span class="hljs-string">"multi_match"</span>:&#123;<br>      <span class="hljs-string">"query"</span>:<span class="hljs-string">"val"</span><br>      <span class="hljs-string">"fields"</span>:[<span class="hljs-string">"val1"</span>,<span class="hljs-string">"val2"</span>]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>在多个字段中,也是模糊查询val</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs dts">GET <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"query_string"</span>: &#123;<br>      <span class="hljs-string">"query"</span>: <span class="hljs-string">"(叶良辰 AND 火) OR (赵日天 AND 风)"</span>,<br>      <span class="hljs-string">"fields"</span>: [<span class="hljs-string">"name"</span>,<span class="hljs-string">"desc"</span>]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="字段查询"><a href="#字段查询" class="headerlink" title="字段查询"></a>字段查询</h3><p>精准查询</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> /indexName/_search<br>&#123;<br><span class="hljs-string">"query"</span>:&#123;<br>  <span class="hljs-string">"term"</span>:&#123;<br>    <span class="hljs-string">"field"</span>:<span class="hljs-string">"val"</span><br>  &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>分页查询</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs dart">GET /indexName/_search<br>&#123;<br>  <span class="hljs-string">"query"</span>:&#123;<br>    <span class="hljs-string">"match_all"</span>:&#123;&#125;<br>  &#125;,<br>  <span class="hljs-string">"from"</span>:<span class="hljs-built_in">num</span>,<br>  <span class="hljs-string">"size"</span>:<span class="hljs-built_in">num</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="范围查询"><a href="#范围查询" class="headerlink" title="范围查询"></a>范围查询</h3><p>数据值型</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br>GET <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"range"</span>: &#123;<br>      <span class="hljs-string">"age"</span>: &#123;<br>        <span class="hljs-string">"gt"</span>: <span class="hljs-number">16</span>,<br>        <span class="hljs-string">"lte"</span>: <span class="hljs-number">30</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>日期类型</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs dts">GET <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"range"</span>: &#123;<br>      <span class="hljs-string">"birthday"</span>: &#123;<br>        <span class="hljs-string">"gte"</span>: <span class="hljs-string">"2013-01-01"</span>,<br>        <span class="hljs-string">"lte"</span>: <span class="hljs-string">"now"</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs"><br><br>GET book/_search<br>&#123;<br>  "query": &#123;<br>    "constant_score": &#123;<br>      "filter": &#123;<br>        "range": &#123;<br>          "date": &#123;<br>            "gt": "now-1M"<br>          &#125;<br>        &#125;<br>      &#125;,<br>      "boost": 1.2<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>“gt”: “now-1M”表示从今天开始，往前推一个月！</p><h3 id="过滤查询"><a href="#过滤查询" class="headerlink" title="过滤查询"></a>过滤查询</h3><p>法一</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs"><br><br>POST /people/man/_search<br>&#123;<br>  "query": &#123;<br>    "constant_score": &#123;<br>      "filter": &#123;<br>        "range": &#123;<br>          "age": &#123;<br>            "gte": 20,<br>            "lte": 30<br>          &#125;<br>        &#125;<br>      &#125;,<br>      "boost": 1.2<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>法二</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dts">POST <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"bool"</span>: &#123;<br>      <span class="hljs-string">"filter"</span>: &#123;<br>        <span class="hljs-string">"term"</span>: &#123;<br>          <span class="hljs-string">"age"</span>: <span class="hljs-number">18</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="布尔查询"><a href="#布尔查询" class="headerlink" title="布尔查询"></a>布尔查询</h3><p>should查询<br>注意：should相当于 或 ，里面的match也是模糊匹配</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs dts">POST <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"bool"</span>: &#123;<br>      <span class="hljs-string">"should"</span>: [<br>        &#123;<br>          <span class="hljs-string">"match"</span>: &#123;<br>            <span class="hljs-string">"name"</span>: <span class="hljs-string">"叶良辰"</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">"match"</span>: &#123;<br>            <span class="hljs-string">"desc"</span>: <span class="hljs-string">"赵日天"</span><br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>must查询<br>注意：两个条件都要满足，并且这里也会把must里面的“叶良辰”拆分成“叶”、“良”和“辰”进行查询；“赵日天”拆分成“赵”、“日”、和“天”！</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br>POST <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"bool"</span>: &#123;<br>      <span class="hljs-string">"must"</span>: [<br>        &#123;<br>          <span class="hljs-string">"match"</span>: &#123;<br>            <span class="hljs-string">"name"</span>: <span class="hljs-string">"叶良辰"</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">"match"</span>: &#123;<br>            <span class="hljs-string">"desc"</span>: <span class="hljs-string">"赵日天"</span><br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>must与filter相结合<br>这里也会把must里面的“叶良辰”拆分成“叶”、“良”和“辰”进行查询</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br>POST <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"bool"</span>: &#123;<br>      <span class="hljs-string">"must"</span>: [<br>        &#123;<br>          <span class="hljs-string">"match"</span>: &#123;<br>            <span class="hljs-string">"name"</span>: <span class="hljs-string">"叶良辰"</span><br>          &#125;<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">"match"</span>: &#123;<br>            <span class="hljs-string">"desc"</span>: <span class="hljs-string">"赵日天"</span><br>          &#125;<br>        &#125;<br>      ],<br>      <span class="hljs-string">"filter"</span>: [<br>        &#123;<br>          <span class="hljs-string">"term"</span>: &#123;<br>            <span class="hljs-string">"age"</span>: <span class="hljs-number">18</span><br>          &#125;<br>        &#125;<br>      ]<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>must_not<br>注意：下面语句是精准匹配</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dts">POST <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"bool"</span>: &#123;<br>      <span class="hljs-string">"must_not"</span>: &#123;<br>        <span class="hljs-string">"term"</span>: &#123;<br>          <span class="hljs-string">"name"</span>: <span class="hljs-string">"叶良辰"</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h3><p>根据字段类型查询</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br>GET <span class="hljs-meta-keyword">/people/</span>man/_search<br>&#123;<br>  <span class="hljs-string">"size"</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">"aggs"</span>: &#123;<br>    <span class="hljs-string">"group_by_age"</span>: &#123;<br>      <span class="hljs-string">"terms"</span>: &#123;<br>        <span class="hljs-string">"field"</span>: <span class="hljs-string">"age"</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查询总体值</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dts">POST <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"aggs"</span>: &#123;<br>    <span class="hljs-string">"grads_age"</span>: &#123;<br>      <span class="hljs-string">"stats"</span>: &#123;<br>        <span class="hljs-string">"field"</span>: <span class="hljs-string">"age"</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>查询最小值</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dts">POST <span class="hljs-meta-keyword">/people/</span>_search<br>&#123;<br>  <span class="hljs-string">"aggs"</span>: &#123;<br>    <span class="hljs-string">"grads_age"</span>: &#123;<br>      <span class="hljs-string">"min"</span>: &#123;<br>        <span class="hljs-string">"field"</span>: <span class="hljs-string">"age"</span><br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>根据国家分组，然后计算年龄平均值：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br>GET <span class="hljs-meta-keyword">/people/</span>man/_search<br>&#123;<br>  <span class="hljs-string">"size"</span>: <span class="hljs-number">0</span>,<br>  <span class="hljs-string">"aggs"</span>: &#123;<br>    <span class="hljs-string">"group_by_age"</span>: &#123;<br>      <span class="hljs-string">"terms"</span>: &#123;<br>        <span class="hljs-string">"field"</span>: <span class="hljs-string">"country"</span><br>      &#125;,<br>      <span class="hljs-string">"aggs"</span>: &#123;<br>        <span class="hljs-string">"avg_age"</span>: &#123;<br>          <span class="hljs-string">"avg"</span>: &#123;<br>            <span class="hljs-string">"field"</span>: <span class="hljs-string">"age"</span><br>          &#125;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>解决：上面的reason里面说的很清楚，将fielddata设置为true就行了：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs dts"><br>POST <span class="hljs-meta-keyword">/people/</span>_mapping/man<br>&#123;<br>  <span class="hljs-string">"properties"</span>: &#123;<br>    <span class="hljs-string">"country"</span>: &#123;<br>      <span class="hljs-string">"type"</span>: <span class="hljs-string">"text"</span>,<br>      <span class="hljs-string">"fielddata"</span>: true<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs maxima">排序查询通常没有排到我们想要的结果，因为字段分词后，有很多单词，再排序跟我们想要的结果又出入<br><br>解决办法：把需要排序的字段建立两次索引，一个排序，另一个不排序。<br><br>如下面的案例：把<span class="hljs-built_in">title</span>.raw的fielddata设置为<span class="hljs-literal">true</span>，是排序的；而<span class="hljs-built_in">title</span>的fielddata默认是<span class="hljs-literal">false</span>，可以用来搜索<br><br>index: <span class="hljs-literal">true</span> 是在<span class="hljs-built_in">title</span>.raw建立索引可以被搜索到，<br><br>fielddata: <span class="hljs-literal">true</span>是让其可以排序<br><br>PUT /blog<br>&#123;<br>  <span class="hljs-string">"mappings"</span>: &#123;<br>    <span class="hljs-string">"article"</span>: &#123;<br>      <span class="hljs-string">"properties"</span>: &#123;<br>        <span class="hljs-string">"auther"</span>: &#123;<br>          <span class="hljs-string">"type"</span>: <span class="hljs-string">"text"</span><br>        &#125;,<br>        <span class="hljs-string">"title"</span>: &#123;<br>          <span class="hljs-string">"type"</span>: <span class="hljs-string">"text"</span>,<br>          <span class="hljs-string">"fields"</span>: &#123;<br>            <span class="hljs-string">"raw"</span>:&#123;<br>              <span class="hljs-string">"type"</span>: <span class="hljs-string">"text"</span>,<br>              <span class="hljs-string">"index"</span>: <span class="hljs-literal">true</span>,<br>              <span class="hljs-string">"fielddata"</span>: <span class="hljs-literal">true</span><br>            &#125;<br>          &#125;<br>        &#125;,<br>        <span class="hljs-string">"content"</span>:&#123;<br>          <span class="hljs-string">"type"</span>: <span class="hljs-string">"text"</span>,<br>          <span class="hljs-string">"analyzer"</span>: <span class="hljs-string">"english"</span><br>        &#125;,<br>        <span class="hljs-string">"publishdate"</span>: &#123;<br>          <span class="hljs-string">"type"</span>: <span class="hljs-string">"date"</span><br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs dts">GET <span class="hljs-meta-keyword">/blog/</span>article/_search<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"match_all"</span>: &#123;&#125;<br>  &#125;,<br>  <span class="hljs-string">"sort"</span>: [<br>    &#123;<br>      <span class="hljs-string">"title.raw"</span>: &#123;<br>        <span class="hljs-string">"order"</span>: <span class="hljs-string">"desc"</span><br>      &#125;<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="scroll查询"><a href="#scroll查询" class="headerlink" title="scroll查询"></a>scroll查询</h3><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sqf">当搜索量比较大的时候，我们在短时间内不可能一次性搜索完然后展示出来<br><br>这个时候，可以使用scroll进行搜索<br><br>比如下面的案例，可以先搜索<span class="hljs-number">3</span>条数据，然后结果中会有一个<span class="hljs-variable">_scroll_id</span>，下次搜索就可以直接用这个<span class="hljs-variable">_scroll_id</span>进行搜索了<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> test_index/test_type/_search?<span class="hljs-attribute">scroll</span>=1m<br>&#123;<br>  <span class="hljs-string">"query"</span>: &#123;<br>    <span class="hljs-string">"match_all"</span>: &#123;&#125;<br>  &#125;,<br>  <span class="hljs-string">"sort"</span>: <span class="hljs-string">"_doc"</span>,<br>  <span class="hljs-string">"size"</span>: 3<br>&#125;<br></code></pre></td></tr></table></figure><p>step3 把scroll_id粘贴到下面的命令中再次搜索</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">GET</span> _search/scroll<br>&#123;<br>  <span class="hljs-string">"scroll"</span>: <span class="hljs-string">"1m"</span>,<br>  <span class="hljs-string">"scroll_id"</span>: <span class="hljs-string">"DnF1ZXJ5VGhlbkZldGNoBQAAAAAAAAA6FnZPSl9sbVR4UVVDU1NLb2wxVXJlbWcAAAAAAAAAPhZ2T0pfbG1UeFFVQ1NTS29sMVVyZW1nAAAAAAAAADsWdk9KX2xtVHhRVUNTU0tvbDFVcmVtZwAAAAAAAAA8FnZPSl9sbVR4UVVDU1NLb2wxVXJlbWcAAAAAAAAAPRZ2T0pfbG1UeFFVQ1NTS29sMVVyZW1n"</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flink学习</title>
      <link href="/daydoc/2019/07/31/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/flink/Flink/"/>
      <url>/daydoc/2019/07/31/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/flink/Flink/</url>
      
        <content type="html"><![CDATA[<p>flink内容记录</p><a id="more"></a><h2 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h2><h2 id="创建maven项目"><a href="#创建maven项目" class="headerlink" title="创建maven项目"></a>创建maven项目</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros">mvn archetype:generate \<br>    <span class="hljs-attribute">-DarchetypeGroupId</span>=org.apache.flink \<br>    <span class="hljs-attribute">-DarchetypeArtifactId</span>=flink-quickstart-java \<br>    <span class="hljs-attribute">-DarchetypeVersion</span>=1.6.1 \<br>    <span class="hljs-attribute">-DgroupId</span>=my-flink-project \<br>    <span class="hljs-attribute">-DartifactId</span>=my-flink-project \<br>    <span class="hljs-attribute">-Dversion</span>=0.1 \<br>    <span class="hljs-attribute">-Dpackage</span>=myflink \<br>    <span class="hljs-attribute">-DinteractiveMode</span>=<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><br>mvn clean package -<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Dmaven</span>.</span></span>test.skip=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">flink</span> <span class="hljs-selector-tag">run</span> <span class="hljs-selector-tag">-c</span> <span class="hljs-selector-tag">myflink</span><span class="hljs-selector-class">.demo</span><span class="hljs-selector-class">.SocketTextStreamWordCount</span> <span class="hljs-selector-tag">my-flink-project-0</span><span class="hljs-selector-class">.1</span><span class="hljs-selector-class">.jar</span> 127<span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.0</span><span class="hljs-selector-class">.1</span> 9000<br></code></pre></td></tr></table></figure><h2 id="DataStream-API"><a href="#DataStream-API" class="headerlink" title="DataStream API"></a>DataStream API</h2><p>flink程序工作解剖图<br><img src="http://img.wqkenqing.ren/FIyXNI.png" srcset="/daydoc/img/loading.gif" lazyload alt=""></p><h3 id="执行环境"><a href="#执行环境" class="headerlink" title="执行环境"></a>执行环境</h3><p>flink支持</p><ul><li>获取已经存在的flink环境</li><li>创建一个本地环境</li><li>创建一个远程环境</li></ul><h3 id="DataSource"><a href="#DataSource" class="headerlink" title="DataSource"></a>DataSource</h3><h4 id="预置source"><a href="#预置source" class="headerlink" title="预置source"></a>预置source</h4><p>Socket-based</p><ul><li>socketTextStream();</li></ul><p>File-based</p><h3 id="Transfomations"><a href="#Transfomations" class="headerlink" title="Transfomations"></a>Transfomations</h3><ul><li>map</li><li>flatMap</li><li>filter</li><li>keyBy</li><li>reduce</li><li>fold</li></ul><p>合计</p><ul><li>min</li><li>max</li><li>sum</li></ul><p>窗口</p>]]></content>
      
      
      
        <tags>
            
            <tag> flink </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hdfs命令</title>
      <link href="/daydoc/2019/07/17/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/hadoop/hdfs/hdfs%E5%91%BD%E4%BB%A4/"/>
      <url>/daydoc/2019/07/17/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/hadoop/hdfs/hdfs%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>hdfs常用命令</p><a id="more"></a><p>count</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">该命令选项显示指定路径下的文件夹数量、文件数量、文件总大小信息，如图<span class="hljs-number">4</span><span class="hljs-number">-6</span>所示。<br></code></pre></td></tr></table></figure><p><img src="http://img.wqkenqing.ren/QFvpXA.png" srcset="/daydoc/img/loading.gif" lazyload alt=""></p><p>du</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">统计目录下各文件大小<br></code></pre></td></tr></table></figure><p>touchz</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">创建空白文件<br></code></pre></td></tr></table></figure><p>-stat</p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cos">“<span class="hljs-built_in">%b</span> <span class="hljs-built_in">%n</span> <span class="hljs-built_in">%o</span> <span class="hljs-built_in">%r</span> <span class="hljs-built_in">%Y</span>”依次表示文件大小、文件名称、块大小、副本数、访问时间。<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hdfs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java八大数据类型总结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog1/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog1/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="java八大数据类型总结"><a href="#java八大数据类型总结" class="headerlink" title="java八大数据类型总结"></a>java八大数据类型总结</h2><p>[TOC]</p><p><code>负数在电脑中的存储是用（该数值的绝对值的反码+1表示）</code><br><code>最高位是符号位，1表示负数，0表示正数</code><br><code>负数换算规则:负数的二进制=负数绝对值的二进制取反码+1。</code></p><h3 id="byte类型"><a href="#byte类型" class="headerlink" title="byte类型:"></a>byte类型:</h3><pre><code class="hljs">byte类型，使用一个字节存放一个数据，一个字节占八位，所以它取值范围是:1000 0000 ~ 0111 1111(-128-127)</code></pre><h3 id="short类型"><a href="#short类型" class="headerlink" title="short类型"></a>short类型</h3><pre><code class="hljs">    short类型，使用两个字节存放一个数据，两个字节16位二进制表示，那么它的取值范围就是：1000 0000 0000 0000 ~ 0111 1111 1111 1111(-32768-32767)换算同上述byte类型</code></pre><hr><h3 id="char类型"><a href="#char类型" class="headerlink" title="char类型"></a>char类型</h3><pre><code class="hljs">char在java中占据两个字节，即用16位表示一个char类型的数据。由于char是无符号的所以其表示范围是0-65536.当计算超过其表示范围时，系统会自动将结果转换为int类型。</code></pre><h3 id="boolean类型"><a href="#boolean类型" class="headerlink" title="boolean类型:"></a>boolean类型:</h3><pre><code class="hljs">boolean类型占用一个字节，八位二进制表示。boolean类型只有两个值true和flase。</code></pre><h3 id="float类型"><a href="#float类型" class="headerlink" title="float类型"></a>float类型</h3><p>  其他特殊表示:</p><pre><code class="hljs"> 1.当指数部分和小数部分全为0时,表示0值,有+0和-0之分(符号位决定),0x00000000表示正0,0x80000000表示负0.2.指数部分全1,小数部分全0时,表示无穷大,有正无穷和负无穷,0x7f800000表示正无穷,0xff800000表示负无穷.3.指数部分全1,小数部分不全0时,表示NaN,分为QNaN和SNaN,Java中都是NaN.可以看出浮点数的取值范围是:2^(-149)~~(2-2^(-23))*2^127,也就是Float.MIN_VALUE和Float.MAX_VALUE.</code></pre><h3 id="double类型"><a href="#double类型" class="headerlink" title="double类型"></a>double类型</h3><pre><code class="hljs">double类型占8个字节，一共是64位二进制表示。数符加尾数占48位，指数符加指数占16位.取值换算方式和float的换算方式一样。但是在使用float和double时最好先分析好目标数据的精度和性能要求，如果能够使用float满足的坚决不适用double，因为double类型使用内存占用是float的两倍，运算速度远不如float。</code></pre><h3 id="short类型-1"><a href="#short类型-1" class="headerlink" title="short类型"></a>short类型</h3><pre><code class="hljs">    short类型，使用两个字节存放一个数据，两个字节16位二进制表示，那么它的取值范围就是：1000 0000 0000 0000 ~ 0111 1111 1111 1111(-32768-32767)换算同上述byte类型。short类型使用时除了要注意取值范围</code></pre><h3 id="int类型"><a href="#int类型" class="headerlink" title="int类型"></a>int类型</h3><pre><code class="hljs">int类型，在Java中使用的是四个字节保存一个数据，一共是32为二进制表示，同上述的一样,取值范围:1000 0000 0000 0000 0000 0000 0000 0000 - 0111 1111 1111 1111 1111 1111 1111 1111(-2^32~2^31)</code></pre><h3 id="long类型"><a href="#long类型" class="headerlink" title="long类型"></a>long类型</h3><pre><code class="hljs">long类型是Java的基础类型，使用8个字节存储一个数值，一共是64位二进制数。取值范围是（-2^64-2^63</code></pre><h3 id="八大常用类型的最大值与最小值"><a href="#八大常用类型的最大值与最小值" class="headerlink" title="八大常用类型的最大值与最小值"></a>八大常用类型的最大值与最小值</h3><p><code>float max=3.4028235E38float min=1.4E-45double max=1.7976931348623157E308double max=4.9E-324byte max=127byte min=-128char max=?char min=short max=32767short min=-32768int max=2147483647int min=-2147483648long max=9223372036854775807long min=-9223372036854775808</code></p><p>| 数据类型      | byte类型 |  short类型  |char类型|boolean类型|float类型|int类型|double类型|long类型|<br>| :——– | ——–:| :——:<br>|所占字节数  | 2| 2|2|8|4|4|8|8|</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>异常处理机制小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog10/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog10/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h3 id="异常处理机制小结"><a href="#异常处理机制小结" class="headerlink" title="异常处理机制小结"></a>异常处理机制小结</h3><p><img src="//img.wqkenqing.ren//file/2017/7/b89a2f8ca9684364889768d339985ef6-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="b89a2f8ca9684364889768d339985ef6-image.png"></p><p> 在 Java 中，所有的异常都有一个共同的祖先 Throwable（可抛出）。Throwable 指定代码中可用异常传播机制通过 Java 应用程序传输的任何问题的共性。<br>       Throwable： 有两个重要的子类：Exception（异常）和 Error（错误），二者都是 Java 异常处理的重要子类，各自都包含大量子类。<br>        Error（错误）:是程序无法处理的错误，表示运行应用程序中较严重问题。大多数错误与代码编写者执行的操作无关，而表示代码运行时 JVM（Java 虚拟机）出现的问题。例如，Java虚拟机运行错误（Virtual MachineError），当 JVM 不再有继续执行操作所需的内存资源时，将出现 OutOfMemoryError。这些异常发生时，Java虚拟机（JVM）一般会选择线程终止。<br>           Exception（异常）:是程序本身可以处理的异常。Exception 类有一个重要的子类 RuntimeException。RuntimeException 类及其子类表示“JVM 常用操作”引发的错误。例如，若试图使用空值对象引用、除数为零或数组越界，则分别引发运行时异常（NullPointerException、 ArithmeticException）和 ArrayIndexOutOfBoundException。</p><p><code>注意：异常和错误的区别：异常能被程序本身可以处理，错误是无法处理。</code></p><p>通常，Java的异常(包括Exception和Error)分为可查的异常（checked exceptions）和不可查的异常（unchecked exceptions）。<br>      可查异常（编译器要求必须处置的异常）：正确的程序在运行中，很容易出现的、情理可容的异常状况。可查异常虽然是异常状况，但在一定程度上它的发生是可以预计的，而且一旦发生这种异常状况，就必须采取某种方式进行处理。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java---GC机制</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog11/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog11/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h3 id="java—GC机制"><a href="#java—GC机制" class="headerlink" title="java—GC机制"></a>java—GC机制</h3><p>JVM会有一个运行时数据区来管理内存</p><ul><li>程序计数器(Program Counter Register)</li><li>虚拟机栈(VM Stack)</li><li>本地方法栈(Native Method Stack)</li><li>方法区(Method Area)</li><li>堆(Heap)</li></ul><h4 id="What-–-哪些内存需要回收？"><a href="#What-–-哪些内存需要回收？" class="headerlink" title="What? – 哪些内存需要回收？"></a>What? – 哪些内存需要回收？</h4><p>而其中程序计数器、虚拟机栈、本地方法栈是每个线程私有的内存空间，随线程而生，随线程而亡。<br>例如栈中每一个栈帧中分配多少内存基本上在类结构去诶是哪个下来时就已知了，因此这3个区域的内存分配和回收都是确定的，无需考虑内存回收的问题。</p><p>但方法区和堆就不同了，一个接口的多个实现类需要的内存可能不一样，我们只有在程序运行期间才会知道会创建哪些对象，这部分内存的分配和回收都是动态的，GC主要关注的是这部分内存。</p><hr><p>总而言之，GC主要进行回收的内存是JVM中的方法区和堆；<br>涉及到多线程(指堆)、多个对该对象不同类型的引用(指方法区)，才会涉及GC的回收。</p><hr><h4 id="When-–-什么时候回收？"><a href="#When-–-什么时候回收？" class="headerlink" title="When? – 什么时候回收？"></a>When? – 什么时候回收？</h4><p>堆</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">在面试中经常会碰到这样一个问题（事实上笔者也碰到过）：如何判断一个对象已经死去？<br><br>很容易想到的一个答案是：对一个对象添加引用计数器。每当有地方引用它时，计数器值加<span class="hljs-number">1</span>；当引用失效时，计数器值减<span class="hljs-number">1.</span>而当计数器的值为<span class="hljs-number">0</span>时这个对象就不会再被使用，判断为已死。是不是简单又直观。然而，很遗憾。这种做法是错误的！（面试时可千万别这样回答哦，我就是不假思索这样回答，然后就。。）为什么是错的呢？事实上，用引用计数法确实在大部分情况下是一个不错的解决方案，而在实际的应用中也有不少案例，但它却无法解决对象之间的循环引用问题。比如对象A中有一个字段指向了对象B，而对象B中也有一个字段指向了对象A，而事实上他们俩都不再使用，但计数器的值永远都不可能为<span class="hljs-number">0</span>，也就不会被回收，然后就发生了内存泄露。。<br></code></pre></td></tr></table></figure><p>在Java，C#等语言中，比较主流的判定一个对象已死的方法是：<Strong>可达性分析(Reachability Analysis).</Strong><br>所有生成的对象都是一个称为”GC Roots”的根的子树。从GC Roots开始向下搜索，搜索所经过的路径称为引用链(Reference Chain)，当一个对象到GC Roots没有任何引用链可以到达时，就称这个对象是不可达的（不可引用的），也就是可以被GC回收了<br><img src="./1483447208180.png" srcset="/daydoc/img/loading.gif" lazyload alt="Alt text"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">无论是引用计数器还是可达性分析，判定对象是否存活都与引用有关！那么，如何定义对象的引用呢？<br></code></pre></td></tr></table></figure><ul><li>强引用(Strong Reference):Object obj = new Object();只要强引用还存在，GC永远不会回收掉被引用的对象。</li><li>软引用(Soft Reference)：描述一些还有用但非必需的对象。在系统将会发生内存溢出之前，会把这些对象列入回收范围进行二次回收（即系统将会发生内存溢出了，才会对他们进行回收。）</li><li>弱引用(Weak Reference):程度比软引用还要弱一些。这些对象只能生存到下次GC之前。当GC工作时，无论内存是否足够都会将其回收（即只要进行GC，就会对他们进行回收。）</li><li>虚引用(Phantom Reference):一个对象是否存在虚引用，完全不会对其生存时间构成影响。</li></ul><p><Strong>方法区</strong><br>What部分我们已经提到，GC主要回收的是堆和方法区中的内存，而上面的How主要是针对对象的回收，他们一般位于堆内。那么，方法区中的东西该怎么回收呢？</p><p>关于方法区中需要回收的是一些废弃的常量和无用的类</p><ul><li>废弃的常量的回收。这里看引用计数就可以了。没有对象引用该常量就可以放心的回收了。</li><li>无用的类的回收。什么是无用的类呢？</li></ul><ul><li>该类所有的实例都已经被回收。也就是Java堆中不存在该类的任何实例；</li><li>加载该类的ClassLoader已经被回收；</li><li>该类对应的java.lang.Class对象没有任何地方被引用，无法在任何地方通过反射访问该类的方法。</li></ul><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">总而言之，对于堆中的对象，主要用可达性分析判断一个对象是否还存在引用，如果该对象没有任何引用就应该被回收。而根据我们实际对引用的不同需求，又分成了<span class="hljs-number">4</span>中引用，每种引用的回收机制也是不同的。<br>对于方法区中的常量和类，当一个常量没有任何对象引用它，它就可以被回收了。而对于类，如果可以判定它为无用类，就可以被回收了。<br></code></pre></td></tr></table></figure><h4 id="How-–-如何回收？"><a href="#How-–-如何回收？" class="headerlink" title="How? – 如何回收？"></a>How? – 如何回收？</h4><h5 id="标记-清除-Mark-Sweep-算法"><a href="#标记-清除-Mark-Sweep-算法" class="headerlink" title="标记-清除(Mark-Sweep)算法"></a>标记-清除(Mark-Sweep)算法</h5><p>分为两个阶段：首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象。<br>缺点：效率问题，标记和清除两个过程的效率都不高；空间问题，会产生很多碎片。</p><h5 id="复制算法"><a href="#复制算法" class="headerlink" title="复制算法"></a>复制算法</h5><p>将可用内存按容量划分为大小相等的两块，每次只用其中一块。当这一块用完了，就将还存活的对象复制到另外一块上面，然后把原始空间全部回收。高效、简单。<br>缺点：将内存缩小为原来的一半。</p><h5 id="标记-整理-Mark-Compat-算法"><a href="#标记-整理-Mark-Compat-算法" class="headerlink" title="标记-整理(Mark-Compat)算法"></a>标记-整理(Mark-Compat)算法</h5><p>标记过程与标记-清除算法过程一样，但后面不是简单的清除，而是让所有存活的对象都向一端移动，然后直接清除掉端边界以外的内存。</p><h5 id="分代收集-Generational-Collection-算法"><a href="#分代收集-Generational-Collection-算法" class="headerlink" title="分代收集(Generational Collection)算法"></a>分代收集(Generational Collection)算法</h5><ul><li>新生代中，每次垃圾收集时都有大批对象死去，只有少量存活，就选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；</li><li>老年代中，其存活率较高、没有额外空间对它进行分配担保，就应该使用“标记-整理”或“标记-清理”算法进行回收。<br>####一些收集器<h5 id="Serial收集器"><a href="#Serial收集器" class="headerlink" title="Serial收集器"></a>Serial收集器</h5>单线程收集器，表示在它进行垃圾收集时，必须暂停其他所有的工作线程，直到它收集结束。”Stop The World”.<h5 id="ParNew收集器"><a href="#ParNew收集器" class="headerlink" title="ParNew收集器"></a>ParNew收集器</h5>实际就是Serial收集器的多线程版本。</li><li>并发(Parallel):指多条垃圾收集线程并行工作，但此时用户线程仍然处于等待状态；</li><li>并行(Concurrent):指用户线程与垃圾收集线程同时执行，用户程序在继续运行，而垃圾收集程序运行于另一个CPU上。<h5 id="Parallel-Scavenge收集器"><a href="#Parallel-Scavenge收集器" class="headerlink" title="Parallel Scavenge收集器"></a>Parallel Scavenge收集器</h5>该收集器比较关注吞吐量(Throughout)(CPU用于用户代码的时间与CPU总消耗时间的比值)，保证吞吐量在一个可控的范围内。<h5 id="CMS-Concurrent-Mark-Sweep-收集器"><a href="#CMS-Concurrent-Mark-Sweep-收集器" class="headerlink" title="CMS(Concurrent Mark Sweep)收集器"></a>CMS(Concurrent Mark Sweep)收集器</h5>CMS收集器是一种以获得最短停顿时间为目标的收集器。<h5 id="G1-Garbage-First-收集器"><a href="#G1-Garbage-First-收集器" class="headerlink" title="G1(Garbage First)收集器"></a>G1(Garbage First)收集器</h5>从JDK1.7 Update 14之后的HotSpot虚拟机正式提供了商用的G1收集器，与其他收集器相比，它具有如下优点：并行与并发；分代收集；空间整合；可预测的停顿等。</li></ul><p>本部分主要分析了三种不同的垃圾回收算法：Mark-Sweep, Copy, Mark-Compact. 每种算法都有不同的优缺点，也有不同的适用范围。而JVM中对垃圾回收器并没有严格的要求，不同的收集器会结合多个算法进行垃圾回收。<br>#####内存分配<br>Java技术体系中所提倡的自动内存管理最终可以归结为自动化的解决2个问题：给对象分配内存以及回收分配给对象的内存。<br>#####对象优先在Eden分配<br>大多数情况下，对象在新生代Eden区分配。当Eden区没有足够的内存时，虚拟机将发起一次Minor GC。</p><ul><li>Minor GC(新生代GC):指发生在新生代的垃圾收集动作，因为Java对象大多都具备朝生夕灭的特性，所以Minor GC发生的非常频繁。</li><li>Full GC/Major GC(老年代GC):指发生在老年代的GC，出现了Major GC，经常会伴随至少一次的Minor GC。<h5 id="大对象直接进老年代"><a href="#大对象直接进老年代" class="headerlink" title="大对象直接进老年代"></a>大对象直接进老年代</h5>大对象是指需要大量连续内存空间的Java对象（例如很长的字符串以及数组）。<h5 id="长期存活的对象将进入老年代"><a href="#长期存活的对象将进入老年代" class="headerlink" title="长期存活的对象将进入老年代"></a>长期存活的对象将进入老年代</h5>JVM为每个对象定义一个对象年龄计数器。</li></ul><ul><li>如果对象在Eden出生并经历过第一次Minor GC后仍然存活，并且能够被Survivor容纳，则应该被移动到Survivor空间中，并且年龄对象设置为1；</li><li>对象在Survivor区中每熬过一次Minor GC，年龄就会增加1岁，当它的年龄增加到一定程度(默认为15岁，可通过参数-XX:MaxTenuringThreshold设置)，就会被晋升到老年代中。</li><li>要注意的是：JVM并不是永远的要求对象的年龄必须达到MaxTenuringThreshold才能晋升老年代，如果在Survivor空间中相同年龄所有对象大小的总和大于Survivor空间的一般，年龄大于等于该年龄的对象就可以直接进入老年代，无需等到MaxTenuringThreshold中要求的年龄。<h5 id="空间分配担保"><a href="#空间分配担保" class="headerlink" title="空间分配担保"></a>空间分配担保</h5></li><li>在发生Minor GC之前，虚拟机会先检查老年代最大可用的连续空间是否大于新生代所有对象总空间，如果这个条件成立，则进行Minor GC是安全的；</li><li>如果不成立，则虚拟机会查看HandlePromotionFailure设置值是否允许担保失败。如果允许，则急促检查老年代最大可用连续空间是否大于历次晋升到老年代对象的平均大小，如果大于，将尝试着进行一次Minor GC，尽管它是有风险的；</li><li>如果小于或者HandePromotionFailure设置为不允许冒险，则这时要改为进行一次Full GC.</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vim笔记</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog15/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog15/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h3 id="Vim笔记"><a href="#Vim笔记" class="headerlink" title="Vim笔记"></a>Vim笔记</h3><p>vi有三种工作模式：</p><ul><li>命令模式</li><li>插入模式</li><li>和编辑模式。<br><img src="//img.wqkenqing.ren//file/2017/7/d689c7d6faa6469a885abdb7ed9b9c52-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="d689c7d6faa6469a885abdb7ed9b9c52-image.png"></li></ul><h4 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h4><p> 命令          作用<br>a                 在光标后附加文本<br>A                 在本行行末附加文本<br>i                  在光标前插入文本<br>I                  在本行开始插入文本<br>o                 在光标下插入新行<br>O                 在光标上插入新行</p><hr><h4 id="定位命令"><a href="#定位命令" class="headerlink" title="定位命令"></a>定位命令</h4><p>命令 作用<br>h、方向左键 左移一个字符<br>j、方向下键 下移一行<br>k、方向上键 上移一行<br>l、方向右键 右移一个字符<br>$ 移至行尾<br>0 移至行首<br>H 移至屏幕上端<br>M 移至屏幕中央<br>L 移至屏幕下端<br>:set nu 设置行号<br>:set nonu 取消行号<br>gg<br>G 到第一行<br>到最后一行<br>nG 到第n行<br>:n 到第n行</p><hr><h4 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h4><p>命令 作用<br>x 删除光标所在处字符<br>nx 删除光标所在处后n个字符<br>dd 删除光标所在行，ndd删除n行<br>dG 删除光标所在行到文件末尾的内容<br>D 删除从光标所在处到行尾的内容<br>:n1,n2d 删除指定范围的行</p><hr><p>复制和剪切命令<br>命令 作用<br>yy、Y 复制当前行<br>nyy、nY 复制当前行一下n行<br>dd 剪切当前行<br>ndd 剪切当前行以下n行<br>p、P 粘贴在当前光标所在行下或行上 注：在vi中，剪切就是删除之后再粘贴</p><hr><h4 id="替换和取消命令"><a href="#替换和取消命令" class="headerlink" title="替换和取消命令"></a>替换和取消命令</h4><p>命令 作用<br>r 取代光标所在处字符<br>R 从光标所在处开始替换字符，按Esc结束<br>u 取消上一步操作 注：比如改变单个字符，先输入r，再输入需要更改的字符。比如将字符a改成b。这适合用于少量修改时使用</p><hr><h4 id="搜索和替换命令"><a href="#搜索和替换命令" class="headerlink" title="搜索和替换命令"></a>搜索和替换命令</h4><p>命令 作用<br>/string 向前搜索指定字符串<br>搜索时忽略大小写 :set ic<br>n 搜索指定字符串的下一个出现位置<br>:%s/old/new/g  全文替换指定字符串<br>:n1,n2s/old/new/g  在一定范围内替换指定字符串 注：n是从前往后，N是从后往前找<br>set noic是设置大小写敏感<br>:n1,n2s/old/new/c    替换时进行询问是否真的替换</p><p>ZZ与:wq的作用一样，都是保存退出<br>对于readonly文件，如果是root或者改文件所有者，即使该文件没有写权限，使用:wq!也能保存该修改之后的文件。<br>仅仅保存但不退出 :w<br>另存为  :w /root/file.bak</p><hr><h4 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h4><p>导入文件 :r 文件名<br>在vi中执行命令 :! 命令<br>定义快捷键 :map 快捷键  触发命令<br>范例：  :map  ^P  I#<ESC>         注：^p是这样输入的 ctrl+v+v  –&gt; ^p<br>     :map  ^B  0x<br>连续行注释 :n1,n2s/^/#/g              注：^表示行首<br>    :n1,n2s/^#//g<br>    :n1,n2s/^////g<br>替换  :ab huhuimail    <a href="mailto:huhuics@gmail.com">huhuics@gmail.com</a>         取消ab命令    :unan huhuimail<br>:r !date   在vi中加入命令执行的结果<br>快捷键插入邮箱  :map ^e <a href="mailto:ihuhuics@gmail.com">ihuhuics@gmail.com</a></p><h4 id="修改用户vim设置"><a href="#修改用户vim设置" class="headerlink" title="修改用户vim设置"></a>修改用户vim设置</h4><p>修改用户vim设置，比如能永久保存快捷键<br>vi ~/.vimrc<br>缺省这个文件是空的，然后可以写入一些快捷键</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kafka小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog17/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog17/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="kafka小结"><a href="#kafka小结" class="headerlink" title="kafka小结"></a>kafka小结</h2><p>消息系统术语<br>kafka特性</p><ul><li>分布式的</li><li>可分区的</li><li>可复制的</li></ul><p>在普通的消息系统的功上，还有自己独特的设计</p><p>Kafka将消息以topic为单位进行归纳。<br>将向Kafka topic发布消息的程序成为producers.<br>将预订topics并消费消息的程序成为consumer.<br>Kafka以集群的方式运行，可以由一个或多个服务组成，每个服务叫做一个broker.<br>producers通过网络将消息发送到Kafka集群，集群向消费者提供消息，</p><p><img src="//img.wqkenqing.ren//file/2017/7/827fdc820cae4619859042761c3b40a9-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="827fdc820cae4619859042761c3b40a9-image.png"></p><p>客户端和服务端通过TCP协议通信。Kafka提供了Java客户端，并且对多种语言都提供了支持。</p><hr><p>Topics 和Logs</p><p>先来看一下Kafka提供的一个抽象概念:topic.<br>一个topic是对一组消息的归纳。对每个topic，Kafka 对它的日志进行了分区<br><img src="//img.wqkenqing.ren//file/2017/7/bf0d2ddee1d14cb29fd54483a622d67c-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="bf0d2ddee1d14cb29fd54483a622d67c-image.png"></p><p>一个topic是对一组消息的归纳。<br>对每个topic，Kafka 对它的日志进行了分区，</p><p>每个分区都由一系列有序的、不可变的消息组成，这些消息被连续的追加到分区中。分区中的每个消息都有一个连续的序列号叫做offset,用来在分区中唯一的标识这个消息。</p><hr><h3 id="kafka常用指令收集"><a href="#kafka常用指令收集" class="headerlink" title="kafka常用指令收集"></a>kafka常用指令收集</h3><p><strong>查看topic的详细信息</strong><br>kafka-topics.sh -zookeeper 127.0.0.1:2181 -describe -topic topic name</p><p><strong>为topic增加副本</strong><br>kafka-reassign-partitions.sh -zookeeper 127.0.0.1:2181 -reassignment-json-file json/partitions-to-move.json -execute<br><strong>创建topic</strong><br>kafka-topics.sh –create –zookeeper localhost:2181 –replication-factor 1 –partitions 1 –topic name<br><strong>为topic增加partition</strong><br>kafka-topics.sh –zookeeper 127.0.0.1:2181 –alter –partitions 20 –topic name<br><strong>kafka生产者客户端命令</strong><br>kafka-console-producer.sh –broker-list localhost:9092 –topic name<br><strong>kafka消费者客户端命令</strong><br>kafka-console-consumer.sh -zookeeper localhost:2181 –from-beginning –topic name<br><strong>kafka服务启动</strong><br>kafka-server-start.sh -daemon ../config/server.properties<br><strong>删除topic</strong><br>kafka-run-class.sh kafka.admin.DeleteTopicCommand –topic testKJ1 –zookeeper 127.0.0.1:2181<br>kafka-topics.sh –zookeeper localhost:2181 –delete –topic testKJ1<br><strong>查看consumer组内消费的offset</strong><br>kafka-run-class.sh kafka.tools.ConsumerOffsetChecker –zookeeper localhost:2181 –group test –topic name</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文本处理小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog14/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog14/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="文本处理小结"><a href="#文本处理小结" class="headerlink" title="文本处理小结"></a>文本处理小结</h2><p><code>此处的文本处理主要针对的是日常工作中主要遇到的一些场景小结，小结主要围绕技能展开，但不局限于某一技术点，</code></p><h3 id="文本处理的主要类型"><a href="#文本处理的主要类型" class="headerlink" title="文本处理的主要类型"></a>文本处理的主要类型</h3><ol><li>排序</li><li>去重</li><li>合并</li><li>切割</li><li>取集</li><li>打乱排序</li><li>模糊匹配</li><li>替换</li></ol><hr><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">总得来说，目前主要的文本处理手段有linux指令、<span class="hljs-keyword">shell</span><span class="bash">脚本、java脚本、mr脚本、excel、sublime等几类，下现主要也围绕这部份展开</span><br></code></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p>目前主要涉及到的排序手段是linux中的sort指令，所以这里对sort进行展开小结<br>####sort排序<br>sort排序主要的操作有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs sort命令是在Linux里非常有用，它将文件进行排序，并将排序结果标准输出。sort命令既可以从特定的文件，也可以从stdin中获取输入。```"><br><br>#####sort 指令后面常接的Options<br><br>![3baeaf03a24f4874818f343d3893d863-image.png](&#x2F;&#x2F;img.wqkenqing.ren&#x2F;&#x2F;file&#x2F;2017&#x2F;7&#x2F;3baeaf03a24f4874818f343d3893d863-image.png)<br><br><br><br><br>##### sort原理<br>sort将文件&#x2F;文本的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。<br><br>排序有时往往伴随着去重，而sort则对应的有去重指令<br>即sort -u file:忽略相同行(这里的-u其实以对应的是unique，而unique的主要作用还是去重，所以在去重部份再展开总结)<br><br>##### sort的常用指令<br>(-n、-r、-k、-t)<br>-t:指定分隔符<br>-n:指定以按数字的大小的形式进行排序<br>-k:指定按那一列<br>-r:-r是以相反顺序<br>![5bf55dc045d846bcbe32e00202b80cbc-image.png](&#x2F;&#x2F;img.wqkenqing.ren&#x2F;&#x2F;file&#x2F;2017&#x2F;7&#x2F;5bf55dc045d846bcbe32e00202b80cbc-image.png)<br><br><br>&#96;&#96;&#96;careful<br></code></pre></td></tr></table></figure><p>-k 有一些复杂用法，即</p><p>-k选项的语法格式： FStart.CStart Modifie,FEnd.CEnd Modifier ——-Start——–,——-End——– FStart.CStart 选项 , FEnd.CEnd 选项 这个语法格式可以被其中的逗号,分为两大部分，Start部分和End部分。Start部分也由三部分组成，其中的Modifier部分就是我们之前说过的类似n和r的选项部分。我们重点说说Start部分的FStart和C.Start。C.Start也是可以省略的，省略的话就表示从本域的开头部分开始。FStart.CStart，其中FStart就是表示使用的域，而CStart则表示在FStart域中从第几个字符开始算“排序首字符”。同理，在End部分中，你可以设定FEnd.CEnd，如果你省略.CEnd，则表示结尾到“域尾”，即本域的最后一个字符。或者，如果你将CEnd设定为0(零)，也是表示结尾到“域尾”。 从公司英文名称的第二个字母开始进行排序： $ sort -t ‘ ‘ -k 1.2 facebook.txt baidu 100 5000 sohu 100 4500 google 110 5000 guge 50 3000 使用了-k 1.2，表示对第一个域的第二个字符开始到本域的最后一个字符为止的字符串进行排序。你会发现baidu因为第二个字母是a而名列榜首。sohu和 google第二个字符都是o，但sohu的h在google的o前面，所以两者分别排在第二和第三。guge只能屈居第四了。 只针对公司英文名称的第二个字母进行排序，如果相同的按照员工工资进行降序排序： $ sort -t ‘ ‘ -k 1.2,1.2 -nrk 3,3 facebook.txt baidu 100 5000 google 110 5000 sohu 100 4500 guge 50 3000 由于只对第二个字母进行排序，所以我们使用了-k 1.2,1.2的表示方式，表示我们“只”对第二个字母进行排序。（如果你问“我使用-k 1.2怎么不行？”，当然不行，因为你省略了End部分，这就意味着你将对从第二个字母起到本域最后一个字符为止的字符串进行排序）。对于员工工资进行排 序，我们也使用了-k 3,3，这是最准确的表述，表示我们“只”对本域进行排序，因为如果你省略了后面的3，就变成了我们“对第3个域开始到最后一个域位置的内容进行排序” 了。</p><hr><p>总得来说Linux的sort排序功能就能满足绝大部份应用场景</p><hr><h3 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs 排序完后，往往涉及到的场景更多的是去重```">相较于排序而言，日常中去重的手段会更多一些<br><br>#### 去重(linux方式)<br><br>linux中的去重指令首先是刚才在前文本提到的<br><br>sort -u:对文本进行排序，去重，并对重复的只保留一份。<br><br>而在日常中，结合去重可能会产生更多的应用场景，即取交集、并集等<br><br>大致来讲linux 主要的去重指令是uniq<br><br>##### uniq<br><br>uniq的Options主要有<br>![540273a5039941a39598a747888f4948-image.png](&#x2F;&#x2F;img.wqkenqing.ren&#x2F;&#x2F;file&#x2F;2017&#x2F;7&#x2F;540273a5039941a39598a747888f4948-image.png)<br><br>![10bff3119aaa49de976350596f94f4bf-image.png](&#x2F;&#x2F;img.wqkenqing.ren&#x2F;&#x2F;file&#x2F;2017&#x2F;7&#x2F;10bff3119aaa49de976350596f94f4bf-image.png)<br><br><br><br>uniq :默认只是将重复的保留一行<br><br>而通过uniq实现交集与并集主要通过-d与-u实现<br><br>uniq -d是只显示重复出现的行列<br>uniq -u是只显示不重复的列<br><br>这里要注意uniq -f -s的使用<br>uniq -f nubmber :即指定忽略多少栏位开如计重<br><br>uniq -s number:即指定忽略多少字任开始计重<br> uniq -f -s :同时出现时则按先按栏位移，再按字符移。<br><br>通过uniq实现去重要先排序<br><br>---<br>针对时常出现的应用场景提供一个思路<br>两个文本中有重复内容，但只想去掉前一个文件与后一个文件中的重复内容，保留前一个文件中的非重复内容<br>可以通过<br><br>sort file1 file2 | uniq  -d &gt;temp<br><br>sort file1 temp|uniq -u<br><br>&#96;&#96;&#96;即思路是:先将两个文件中的重复内容找出并写入临时文件，再将前一个文件与临时文件合并，排序去重，保留只出现一次的文件内容<br></code></pre></td></tr></table></figure><hr><h5 id="其它去重方式"><a href="#其它去重方式" class="headerlink" title="其它去重方式"></a>其它去重方式</h5><p>要去重，通过java方式也能轻松实现<br>即主要利用set等的非重复内容的特性。进行实现</p><h3 id="切割"><a href="#切割" class="headerlink" title="切割"></a>切割</h3><p>即将文件进行切割，出于取样，或测试的需求考虑，可能需要从大文本中切割出一些小文件来。<br>对文件的切割也有很多实现方式<br>但从实现方式上更推荐linux指令式</p><h4 id="切割linux指令式"><a href="#切割linux指令式" class="headerlink" title="切割linux指令式"></a>切割linux指令式</h4><p>涉及到切割的linux指令主要有split</p><p>split命令可以将一个大文件分割成很多个小文件，有时需要将文件分割成更小的片段，比如为提高可读性，生成日志等。</p><p><img src="./1493197221096.png" srcset="/daydoc/img/loading.gif" lazyload alt="Alt text"></p><p>具体实现都是指令式，需要注意的地方较少，不记得时则翻阅相关文档</p><h4 id="切割的其它方式"><a href="#切割的其它方式" class="headerlink" title="切割的其它方式"></a>切割的其它方式</h4><p>主要擅长的还有java方式</p><hr><h3 id="打乱排序"><a href="#打乱排序" class="headerlink" title="打乱排序"></a>打乱排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">打乱排序主要用的方式有awk与excel的方式<br></code></pre></td></tr></table></figure><h4 id="awk方式"><a href="#awk方式" class="headerlink" title="awk方式"></a>awk方式</h4><p>awk ‘BEGIN{ 100000*srand();}{ printf “%s %s\n”, rand(), $0}’  t |sort -k1n | awk ‘{gsub($1FS,””); print $0}’</p><h4 id="excel方式"><a href="#excel方式" class="headerlink" title="excel方式"></a>excel方式</h4><p>即通过在文本中再另加一列，生成随机数，然后对随机数列进行排序从列达到打乱的效果</p><hr><h3 id="模糊匹配"><a href="#模糊匹配" class="headerlink" title="模糊匹配"></a>模糊匹配</h3><p><code>文本的模糊匹配有较多应该场景,可以再多总结</code></p><p>模糊匹配主要有在shell脚本中针对contains操作</p><p>和vim中的匹配操作</p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog12/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog12/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="git小结"><a href="#git小结" class="headerlink" title="git小结"></a>git小结</h2><h3 id="常用指令小结"><a href="#常用指令小结" class="headerlink" title="常用指令小结"></a>常用指令小结</h3><ul><li>git init 初始化</li><li>git add 将工作区的变更提交至暂存区</li><li>git commit -m 将暂存区的内容提交至版本库</li><li>git log 查看记录</li><li>git reflog 操作记录</li><li>git –hard commit id 回到对应的id版本下</li><li>git status 查看状态</li><li>git log –pretty=oneline 简约查看log</li><li>git diff 查看文件与版本库中的差异</li><li>git checkout – file 文件在工作区的修改全部撤销</li><li>git remote add origin <a href="mailto:git@github.com">git@github.com</a>:michaelliao/learngit.git 添加远程库</li><li>git push -u origin master 推送分支</li><li>git clone <a href="mailto:git@github.com">git@github.com</a>:michaelliao/gitskills.git 克隆</li><li>git checkout -b dev 创建并切换分支</li><li>git branch dev 创建分支</li><li>git checkout dev  切换分支</li><li>git merge dev 合并分支</li><li>git branch -d  删除分支</li><li>git stash 紧急切分支时，将工作区的变更内容暂存起来。</li><li>git stash list 查看stash列表</li><li>git stash apply 回复当前分支stash内容</li><li>git stash pop 删除stash内容</li><li>git branch -D 强行删除</li><li>git checkout -b dev origin/dev 拉下远程分支</li><li>git push origin branch-name 推送分支</li><li>git pull 从远程库拉取更新</li><li>git push origin branch-name 将本地库中的更新推送至远程库</li><li>git branch –set-upstream branch-name origin/branch-name 建立本地分支与远程库的联系</li><li>git tag <name>用于新建一个标签，默认为HEAD，也可以指定一个commit id；打标签</li><li>git tag -a <tagname> -m “blablabla…”可以指定标签信息；</li><li>git tag -s <tagname> -m “blablabla…”可以用PGP签名标签；</li><li>git push origin <tagname></li><li>git push origin –tags</li><li>git tag -d <tagname></li><li>git push origin :refs/tags/<tagname></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JVM问题</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog19/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog19/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><p>JVM问题<br>1、堆内存溢出<br>2、持久代内存溢出<br>3、系统频繁FGC</p><p>框架使用不当<br>4、错误使用框架提供API<br>5、日志框架使用不当<br>OS内存溢出<br>6、某系统物理内存溢出<br>数据库问题<br>7、慢SQL问题</p><p>案例1、堆内存溢出<br>JVM基础知识<br>1、Jvm内存分为三个大区，young区，old区和perm区；其中young区又包含三个区：Edgn区、S0、S1区<br>2、young区和old区属于heap区，占据堆内存；perm区称为持久代，不占据堆内存。<br>堆内存溢出<br>性能问题发现过程</p><p>查看服务器上报错日志，发现有如下报错信息［java.lang.OutOfMemoryError: Java heap space］；根据报错信息确定是jvm 堆内存空间不够导致，于是使用jvm命令（下图）查看，发现此时old区内存空间已经被占满了，同时使用jvisualvm监控工具也<br>发现old区空间被占满（右图），整个heap区空间已经无法再容纳新对象进入。<br>建议<br>考虑大量数据一次性写入内存场景</p><p>持久代内存溢出<br>现象</p><p>压测某系统接口，压测前1分钟左右tps 400多，之后<br>Tps直降为零，后台报错日志：java.lang.OutOfMemoryError:PermGen space，通过jvm监控工具查看持久代（perm区）空间被占满，Old区空闲；</p><p>问题定位过程<br>通过注释代码块定位问题，考虑到perm区溢出大部分跟类对象大量创建有关，故锁定问题在序列化框架使用可能有问题；<br>对于比较棘手难解决的perm溢出问题，作者构建了一个perm区溢出的场景，可以采用如下定位方案<br>1、添加jvm dump配置<br>-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/data/dump.bin<br>2、安装eclipse mat分析工具<br>3、将dump文件导入eclipse，点击［Leak Suspects］，找到跟公司有关的代码进行分析<br>此处不过多讲解，大家可以去网上查阅资料学习<br>解决办法<br>跟开发沟通后选择去掉msgpack0.6版本框架，采用java原成序列化框架，修改后系统tps稳定在400多，gc情况正常<br>修改前后gc情况对比<br>修复前<br>类似问题如何避免</p><p>1、去掉项目无用jar包<br>2、避免大量使用类对象、大量使用反射<br>案例3、频繁FGC<br>（1）系统某接口频繁FGC<br>问题排查：<br>先查JVM内存信息找可疑对象<br>从内存对象实例信息中发现跟mysql连接有关，然后检测mysql配置信息<br> <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"></p><p>发现系统采用的是 spring框架的数据源，没有用连接池；</p><p>思考<br>使用连接池有什么好处？<br>连接复用、减少连接重复建立和销毁造成的大量资源消耗</p><p>然后换做hikaricp连接池做对比测试<br> &lt;bean id=”dataSource” class=”com.zaxxer.hikari.HikariDataSource”<br>压测半小时未出现fgc，问题得到解决<br>类似问题如何避免</p><p>1、研发规范统一DB连接池，避免研发误用<br>2、减少大对象、临时对象使用</p><p>案例4、错误使用框架提供API<br>现象<br>某系统本身业务逻辑处理能力很快（研发本机自测tps可以到达2w多），但是接入到framework框架后，TPS最高只能到达300笔/S左右，而且系统负载很低</p><p>问题排查<br>根据这种现象说明系统可能是堵在了某块方法上，根据这种情况一般采用线程dump的方式来查看系统具体哪些线程出现异常情况，通过线程dump 发现 ［TIMED_WAITING］状态的业务线程占比很高<br>根据线程dump信息，找到公司包名开头的信息，然后从下往上查看<br>线程dump信息，从信息中我们可以看到</p><p>framework.servlet.fServlet.doPost：框架api封装了servlet dopost方法做了某些操作<br>framework.servlet.fServlet.execute：框架api执行servelt<br>framework.process.fProcessor.process：框架api进行自身逻辑处理<br>framework.filter.impl.AuthFilter.before：框架使用过滤器进行用户权限过滤</p><p> 。。。。。。然后就是进行http请求操作<br>由此我们断定，就是在框架进行权限校验这块堵住了。之后跟开发沟通这块的<br>问题即可</p><p>分析思路<br>压测端 ：net  服务器  jvm<br>服务端：net  服务器 nginx tomcat jvm（应用程序）算法 db（mysql redis）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flume小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog18/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog18/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="flume小结"><a href="#flume小结" class="headerlink" title="flume小结"></a>flume小结</h2><p><code>此次flume环境的搭建是针对实际日志业务，整个过程还算顺利</code><br>针对flume的引入更多的偏向应用层面。所以更多的要熟悉相关配置与参数的设置</p><h3 id="flume的整体构思"><a href="#flume的整体构思" class="headerlink" title="flume的整体构思"></a>flume的整体构思</h3><p>采用的是flume框架中的flume-ng。整体架构如下图<br><img src="//img.wqkenqing.ren//file/2017/7/c6589103d8ba4dffaf21c52b37cc7e17-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="c6589103d8ba4dffaf21c52b37cc7e17-image.png"><br>log_product环节尚有争议，主要针对flume环节进行小结。<br>原从效率上考虑，打算在跳板机上搭建直接接入hadoop的单flume节点，因为网络权限等问题，无法直接写入所以放弃。转而改为在hadoop环境中也引入一个flume节点(flume-server)。因client是单节点，所以没有必要引入fail-over机制。因此flume-server也是单节点<br>。</p><hr><p>###<br>写入hdfs时有三个参数要注意<br>rollSize<br>rollCount<br>rollInterval<br>这三个参数对写入单个hdfs文件时的大小，行，时间。</p><hr><p>flume-ng agent -n agent1 -c conf -f flume-client.properties -Dflume.root.logger=DEBUG,console</p><p>flume-ng agent -n agent1 -c conf -f flume-client.properties -Dflume.root.logger=DEBUG,console &amp;</p><p>flume-ng agent -n a1 -c ../conf -f flume-server.properties -Dflume.root.logger=DEBUG,console &amp;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>maven小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog13/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog13/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="maven小结"><a href="#maven小结" class="headerlink" title="maven小结"></a>maven小结</h2><h3 id="什么是maven"><a href="#什么是maven" class="headerlink" title="什么是maven"></a>什么是maven</h3><p>就是一款帮助程序员构建项目的工具,我们只需要告诉Maven需要哪些Jar 包，它会帮助我们下载所有的Jar，极大提升开发效率。</p><h3 id="Maven规定的目录结构"><a href="#Maven规定的目录结构" class="headerlink" title="Maven规定的目录结构"></a>Maven规定的目录结构</h3><h3 id="Maven基本命令"><a href="#Maven基本命令" class="headerlink" title="Maven基本命令"></a>Maven基本命令</h3><ul><li><p>-v:查询Maven版本<br><code>本命令用于检查maven是否安装成功。Maven安装完成之后，在命令行输入mvn -v，若出现maven信息，则说明安装成功</code></p></li><li><p>compile：编译</p></li><li><p>test:测试项目</p></li><li><p>package:打包</p></li><li><p>clean:删除target文件夹</p></li><li><p>install:安装 将当前项目放到Maven的本地仓库中。供其他项目使用</p></li></ul><h3 id="什么是Maven仓库？"><a href="#什么是Maven仓库？" class="headerlink" title="什么是Maven仓库？"></a>什么是Maven仓库？</h3><p>Maven仓库用来存放Maven管理的所有Jar包。分为：<strong>本地仓库</strong> 和 <strong>本地仓库</strong>。</p><ul><li>本地仓库<br>Maven本地的Jar包仓库。</li><li>中央仓库<br>Maven官方提供的远程仓库。<blockquote><p>当项目编译时，Maven首先从本地仓库中寻找项目所需的Jar包，若本地仓库没有，再到Maven的中央仓库下载所需Jar包。</p></blockquote></li></ul><p>什么是“坐标”？<br>在Maven中，坐标是Jar包的唯一标识，Maven通过坐标在仓库中找到项目所需的Jar包。</p><p>如下代码中，groupId和artifactId构成了一个Jar包的坐标。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>ch.qos.logback<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>logback-classic<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.1.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p><strong>groupId</strong>:所需Jar包的项目名<br><strong>artifactId</strong>:所需Jar包的模块名<br><strong>version</strong>:所需Jar包的版本号</p><p>传递依赖 与 排除依赖</p><ul><li>传递依赖：如果我们的项目引用了一个Jar包，而该Jar包又引用了其他Jar包，那么在默认情况下项目编译时，Maven会把直接引用和简洁引用的Jar包都下载到本地。</li><li>排除依赖：如果我们只想下载直接引用的Jar包，那么需要在pom.xml中做如下配置：(将需要排除的Jar包的坐标写在中)</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>ch.qos.logback<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>logback-classic<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br></code></pre></td></tr></table></figure><p>依赖冲突<br>若项目中多个Jar同时引用了相同的Jar时，会产生依赖冲突，但Maven采用了两种避免冲突的策略，因此在Maven中是不存在依赖冲突的。<br>短路优先<br>本项目——&gt;A.jar——&gt;B.jar——&gt;X.jar<br>本项目——&gt;C.jar——&gt;X.jar<br>声明优先<br>若引用路径长度相同时，在pom.xml中谁先被声明，就使用谁。</p><p>聚合<br>什么是聚合？<br>将多个项目同时运行就称为聚合。<br>如何实现聚合？<br>只需在pom中作如下配置即可实现聚合：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crystal">&lt;modules&gt;<br>        &lt;<span class="hljs-class"><span class="hljs-keyword">module</span>&gt;../模块1&lt;/<span class="hljs-title">module</span>&gt;</span><br>        &lt;<span class="hljs-class"><span class="hljs-keyword">module</span>&gt;../模块2&lt;/<span class="hljs-title">module</span>&gt;</span><br>        &lt;<span class="hljs-class"><span class="hljs-keyword">module</span>&gt;../模块3&lt;/<span class="hljs-title">module</span>&gt;</span><br>    &lt;<span class="hljs-regexp">/modules&gt;</span><br></code></pre></td></tr></table></figure><p>继承<br>什么是继承？<br>在聚合多个项目时，如果这些被聚合的项目中需要引入相同的Jar，那么可以将这些Jar写入父pom中，各个子项目继承该pom即可。<br>如何实现继承？<br>父pom配置：将需要继承的Jar包的坐标放入标签即可。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencyManagement</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.shiro<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>shiro-spring<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.2.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependencyManagement</span>&gt;</span><br></code></pre></td></tr></table></figure><p>子pom配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>父pom所在项目的groupId<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>父pom所在项目的artifactId<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>父pom所在项目的版本号<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br></code></pre></td></tr></table></figure><hr><p>Maven本地资源库</p><blockquote><p>通常情况下，可改变默认的 .m2 目录下的默认本地存储库文件夹到其他更有意义的名称，例如<br><img src="./1489394095038.png" srcset="/daydoc/img/loading.gif" lazyload alt="Alt text"></p></blockquote><p>当你建立一个 Maven 的项目，Maven 会检查你的 pom.xml 文件，以确定哪些依赖下载。首先，Maven 将从本地资源库获得 Maven 的本地资源库依赖资源，如果没有找到，然后把它会从默认的 Maven 中央存储库 – <a href="http://repo1.maven.org/maven2/" target="_blank" rel="noopener">http://repo1.maven.org/maven2/</a> 查找下载</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Restful架构</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog16/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog16/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="Restful架构"><a href="#Restful架构" class="headerlink" title="Restful架构"></a>Restful架构</h2><h3 id="什么是RESTful架构"><a href="#什么是RESTful架构" class="headerlink" title="什么是RESTful架构"></a>什么是RESTful架构</h3><p><code>Representational State Transfer:表现层状态转化</code></p><p>REST的名称”表现层状态转化”中，省略了主语。”表现层”其实指的是”资源”（Resources）的”表现层”。</p><blockquote><p>所谓”资源”，就是网络上的一个实体，或者说是网络上的一个具体信息。它可以是一段文本、一张图片、一首歌曲、一种服务，总之就是一个具体的实在。你可以用一个URI（统一资源定位符）指向它，每种资源对应一个特定的URI。要获取这个资源，访问它的URI就可以，因此URI就成了每一个资源的地址或独一无二的识别符。</p></blockquote><p>“资源”是一种信息实体，它可以有多种外在表现形式。我们把”资源”具体呈现出来的形式，叫做它的”表现层”（Representation）。</p><p>访问一个网站，就代表了客户端和服务器的一个互动过程。在这个过程中，势必涉及到数据和状态的变化。</p><p>互联网通信协议HTTP协议，是一个无状态协议。这意味着，所有的状态都保存在服务器端。因此，如果客户端想要操作服务器，必须通过某种手段，让服务器端发生”状态转化”（State Transfer）。而这种转化是建立在表现层之上的，所以就是”表现层状态转化”。</p><p>客户端用到的手段，只能是HTTP协议。具体来说，就是HTTP协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。它们分别对应四种基本操作：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。</p><hr><p>综合上面的解释，我们总结一下什么是RESTful架构：</p><ul><li>每一个URI代表一种资源；</li><li>客户端和服务器之间，传递这种资源的某种表现层；</li><li>客户端通过四个HTTP动词，对服务器端资源进行操作，实现”表现层状态转化”。</li></ul><p>最常见的一种设计错误，就是URI包含动词。<strong>因为”资源”表示一种实体，所以应该是名词</strong>，<strong>URI不应该有动词</strong>，动词应该放在HTTP协议中。</p><p>举例来说，某个URI是/posts/show/1，其中show是动词，这个URI就设计错了，正确的写法应该是/posts/1，然后用GET方法表示show。</p><p>如果某些动作是HTTP动词表示不了的，你就应该把动作做成一种资源。比如网上汇款，从账户1向账户2汇款500元，错误的URI是：</p><p>　　POST /accounts/1/transfer/500/to/2</p><p>正确的写法是把动词transfer改成名词transaction，资源不能是动词，但是可以是一种服务：</p><p>　　POST /transaction HTTP/1.1<br>　　Host: 127.0.0.1<br>　　<br>　　from=1&amp;to=2&amp;amount=500.00</p><p>另一个设计误区，就是在URI中加入版本号：</p><p>　　<a href="http://www.example.com/app/1.0/foo" target="_blank" rel="noopener">http://www.example.com/app/1.0/foo</a></p><p>　　<a href="http://www.example.com/app/1.1/foo" target="_blank" rel="noopener">http://www.example.com/app/1.1/foo</a></p><p>　　<a href="http://www.example.com/app/2.0/foo" target="_blank" rel="noopener">http://www.example.com/app/2.0/foo</a></p><p>因为不同的版本，可以理解成同一种资源的不同表现形式，所以应该采用同一个URI。版本号可以在HTTP请求头信息的Accept字段中进行区分（参见Versioning REST Services）：<br>Accept: vnd.example-com.foo+json; version=1.0</p><p>　　Accept: vnd.example-com.foo+json; version=1.1</p><p>　　Accept: vnd.example-com.foo+json; version=2.0</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>String StringBuffer StringBuilder</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog2/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog2/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h3 id="String-StringBuffer-StringBuilder"><a href="#String-StringBuffer-StringBuilder" class="headerlink" title="String StringBuffer StringBuilder"></a>String StringBuffer StringBuilder</h3><ul><li>String s =new String(“ok”)</li><li>（1）String ok1=new String(“ok”);<br>（2）String ok2=“ok”;<br>我相信很多人都知道这两种方式定义字符串，但他们之间的差别又有多少人清楚呢。画出这两个字符串的内存示意图：</li></ul><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-keyword">String</span> ok1=<span class="hljs-keyword">new</span> <span class="hljs-keyword">String</span>(“ok”)。首先会在堆内存申请一块内存存储字符串ok,ok1指向其内存块对象。同时还会检查字符串常量池中是否含有ok字符串,若没有则添加ok到字符串常量池中。所以 <span class="hljs-keyword">new</span> <span class="hljs-keyword">String</span>()可能会创建两个对象.<br></code></pre></td></tr></table></figure><pre><code class="hljs">String ok2=“ok”。 先检查字符串常量池中是否含有ok字符串,如果有则直接指向, 没有则在字符串常量池添加ok字符串并指向它.所以这种方法最多创建一个对象，有可能不创建对象所以String ok1=new String(“ok”);//创建了两个对象String ok2=“ok”;//没有创建对象</code></pre><p><code>比较类中的数值是否相等使用equals(),比较两个包装类的引用是否指向同一个对象时用==</code></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">String</span> ok=<span class="hljs-string">"ok"</span>;<br><span class="hljs-keyword">String</span> ok1=<span class="hljs-keyword">new</span> <span class="hljs-keyword">String</span>(<span class="hljs-string">"ok"</span>);<br>System.out.<span class="hljs-built_in">println</span>(ok==ok1);<span class="hljs-comment">//fasle</span><br></code></pre></td></tr></table></figure><p>明显不是同一个对象，一个指向字符串常量池，一个指向new出来的堆内存块，new的字符串在编译期是无法确定的。所以输出false</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">String <span class="hljs-attribute">ok</span>=<span class="hljs-string">"apple1"</span>;<br>String <span class="hljs-attribute">ok1</span>=<span class="hljs-string">"apple"</span>+1;<br>System.out.println(<span class="hljs-attribute">ok</span>==ok1);//true<br></code></pre></td></tr></table></figure><pre><code class="hljs">String ok=&quot;apple1&quot;;int temp=1;String ok1=&quot;apple&quot;+temp;System.out.println(ok==ok1)</code></pre><h4 id="Intern-方法"><a href="#Intern-方法" class="headerlink" title="Intern()方法"></a>Intern()方法</h4><p>但我们可以通过intern()方法扩展常量池。<br>         intern()是扩充常量池的一个方法,当一个String实例str调用intern()方法时,java会检查常量池中是否有相同的字符串,如果有则返回其引用,如果没有则在常量池中增加一个str字符串并返回它的引用。</p><p><code>String类具有immutable(不能改变)性质,当String变量需要经常变换时,会产生很多变量值,应考虑使用StringBuffer提高效率。在开发时，注意String的创建方法</code></p><p><code>使用System.out.println(obj.hashcode())输出的时对象的哈希码，而非内存地址。在Java中是不可能得到对象真正的内存地址的，因为Java中堆是由JVM管理的不能直接操作。只能说此时打印出的Hash码表示了该对象在JAVA虚拟机中的内存位置，Java虚拟机会根据该hash码最终在真正的的堆空间中给该对象分配一个地址.但是该地址 是不能通过java提供的api获取的</code></p><ul><li>String变量连接新字符串会改变hashCode值，变量是在JVM中“连接——断开”；</li><li>StringBuffer变量连接新字符串不会改变hashCode值，因为变量的堆地址不变。</li><li>StringBuilder变量连接新字符串不会改变hashCode值，因为变量的堆地址不变。</li></ul><h4 id="比较String、StringBuffer、StringBuilder性能"><a href="#比较String、StringBuffer、StringBuilder性能" class="headerlink" title="比较String、StringBuffer、StringBuilder性能"></a>比较String、StringBuffer、StringBuilder性能</h4><ul><li>String类由于Java中的共享设计，在修改变量值时使其反复改变栈中的对于堆的引用地址，所以性能低。</li><li>StringBuilder是线性不安全的，适合于单线程操作，其性能比StringBuffer略高。</li><li>StringBuffer和StringBuilder类设计时改变其值，其堆内存的地址不变，避免了反复修改栈引用的地址，其性能高。</li></ul><p>当String使用引号创建字符串时，会先去字符串池中找，找到了就返回，找不到就在字符串池中增加一个然后返回，这样由于共享提高了性能。</p><p> 而new String()无论内容是否已经存在，都会开辟新的堆空间，栈中的堆内存也会改变。</p><p>性能简介<br>StringBuilder&gt;StringBuffer&gt;String</p><p><a href="http://www.jb51.net/article/78057.htm" target="_blank" rel="noopener">http://www.jb51.net/article/78057.htm</a></p><p>StringBuffer中的setLength与delete的效率比较</p><ul><li>前者主要是通过将底层的storage数组长度设置为0</li><li>后者则是另复制一份至另一空间，长度设为0<br>所以后则的效率会相对慢一点</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hbase</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog20/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog20/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><p>hbase shell命令                                描述<br>alter        修改列族（column family）模式<br>count    统计表中行的数量<br>create    创建表<br>describe    显示表相关的详细信息<br>delete    删除指定对象的值（可以为表，行，列对应的值，另外也可以指定时间戳的值）<br>deleteall    删除指定行的所有元素值<br>disable    使表无效<br>drop    删除表<br>enable    使表有效<br>exists    测试表是否存在<br>exit    退出hbase shell<br>get    获取行或单元（cell）的值<br>incr    增加指定表，行或列的值<br>list    列出hbase中存在的所有表<br>put    向指向的表单元添加值<br>tools    列出hbase所支持的工具<br>scan    通过对表的扫描来获取对用的值<br>status    返回hbase集群的状态信息<br>shutdown    关闭hbase集群（与exit不同）<br>truncate    重新创建指定表<br>version    返回hbase版本信息</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog21/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog21/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><p><code>the record for python</code></p><h3 id="Python-知识点"><a href="#Python-知识点" class="headerlink" title="Python 知识点"></a>Python 知识点</h3><h4 id="标识符号"><a href="#标识符号" class="headerlink" title="标识符号"></a>标识符号</h4><p>在 Python 里，标识符有字母、数字、下划线组成。<br>在 Python 中，所有标识符可以包括英文、数字以及下划线(_)，但不能以数字开头。</p><p>以下划线开头的标识符是有特殊意义的。以单下划线开头 _foo 的代表不能直接访问的类属性，需通过类提供的接口进行访问，不能用 from xxx import * 而导入；</p><p>以双下划线开头的 <strong>foo 代表类的私有成员；以双下划线开头和结尾的 __foo</strong> 代表 Python 里特殊方法专用的标识，如 <strong>init</strong>() 代表类的构造函数。</p><p>Python 可以同一行显示多条语句，方法是用分号 ; 分开，</p><h4 id="行和缩进"><a href="#行和缩进" class="headerlink" title="行和缩进"></a>行和缩进</h4><p>python 最具特色的就是用缩进来写模块。<br>缩进的空白数量是可变的，但是所有代码块语句必须包含相同的缩进空白数量，这个必须严格执行<br>因此，在 Python 的代码块中必须使用相同数目的行首缩进空格数。<br>建议你在每个缩进层次使用 单个制表符 或 两个空格 或 四个空格 , 切记不能混用</p><h4 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h4><p>Python语句中一般以新行作为为语句的结束符。<br>但是我们可以使用斜杠（ \）将一行的语句分为多行显示，</p><h4 id="Python-引号"><a href="#Python-引号" class="headerlink" title="Python 引号"></a>Python 引号</h4><p>Python 可以使用引号( ‘ )、双引号( “ )、三引号( ‘’’ 或 “”” ) 来表示字符串，引号的开始与结束必须的相同类型的。<br>其中三引号可以由多行组成，编写多行文本的快捷语法，常用语文档字符串，在文件的特定地点，被当做注释。</p><h4 id="Python注释"><a href="#Python注释" class="headerlink" title="Python注释"></a>Python注释</h4><p>python 中多行注释使用三个单引号(‘’’)或三个双引号(“””)。</p><h4 id="Python空行"><a href="#Python空行" class="headerlink" title="Python空行"></a>Python空行</h4><p>函数之间或类的方法之间用空行分隔，表示一段新的代码的开始。类和函数入口之间也用一行空行分隔，以突出函数入口的开始。<br>空行与代码缩进不同，空行并不是Python语法的一部分。书写时不插入空行，Python解释器运行也不会出错。但是空行的作用在于分隔两段不同功能或含义的代码，便于日后代码的维护或重构。<br>记住：空行也是程序代码的一部分。</p><h4 id="Python-变量类型"><a href="#Python-变量类型" class="headerlink" title="Python 变量类型"></a>Python 变量类型</h4><p>变量存储在内存中的值。这就意味着在创建变量时会在内存中开辟一个空间。<br>基于变量的数据类型，解释器会分配指定内存，并决定什么数据可以被存储在内存中。<br>因此，变量可以指定不同的数据类型，这些变量可以存储整数，小数或字符。</p><p><strong>变量赋值</strong></p><p>Python 中的变量赋值不需要类型声明。<br>每个变量在内存中创建，都包括变量的标识，名称和数据这些信息。<br>每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。<br>等号（=）用来给变量赋值。</p><h4 id="python-标准数据类型"><a href="#python-标准数据类型" class="headerlink" title="python 标准数据类型"></a>python 标准数据类型</h4><p>python 定义了一些标准类型，用于存储各种类型的数据。<br>Python有五个标准的数据类型：<br>Numbers（数字）<br>String（字符串）<br>List（列表）<br>Tuple（元组）<br>Dictionary（字典）</p><h4 id="Python数字"><a href="#Python数字" class="headerlink" title="Python数字"></a>Python数字</h4><p>数字数据类型用于存储数值。<br>他们是不可改变的数据类型，这意味着改变数字数据类型会分配一个新的对象。<br>当你指定一个值时，Number对象就会被创建：<br>您也可以使用del语句删除一些对象的引用。<br>del语句的语法是：</p><p>del var1[,var2[,var3[….,varN]]]]</p><p>您可以通过使用del语句删除单个或多个对象的引用。例如：</p><p>del var<br>del var_a, var_b</p><p>Python支持四种不同的数字类型：</p><p>int（有符号整型）</p><p>long（长整型[也可以代表八进制和十六进制]）</p><p>float（浮点型）</p><p>complex（复数）</p><h4 id="Python字符串"><a href="#Python字符串" class="headerlink" title="Python字符串"></a>Python字符串</h4><p>字符串或串(String)是由数字、字母、下划线组成的一串字符。</p><p>一般记为 :<br>s=”a1a2···an”(n&gt;=0)<br>它是编程语言中表示文本的数据类型。</p><p>python的字串列表有2种取值顺序:</p><p>从左到右索引默认0开始的，最大范围是字符串长度少1</p><p>从右到左索引默认-1开始的，最大范围是字符串开头</p><p>当使用以冒号分隔的字符串，python返回一个新的对象，结果包含了以这对偏移标识的连续的内容，左边的开始是包含了下边界。<br>上面的结果包含了s[1]的值l，而取到的最大范围不包括上边界，就是s[5]的值p。</p><p>加号（+）是字符串连接运算符，星号（*）是重复操作</p><h4 id="Python列表"><a href="#Python列表" class="headerlink" title="Python列表"></a>Python列表</h4><p>List（列表） 是 Python 中使用最频繁的数据类型。</p><h4 id="python元组"><a href="#python元组" class="headerlink" title="python元组"></a>python元组</h4><p>元组是另一个数据类型，类似于List（列表）。</p><p>元组用”()”标识。内部元素用逗号隔开。但是元组不能二次赋值，相当于只读列表</p><h4 id="Python-字典"><a href="#Python-字典" class="headerlink" title="Python 字典"></a>Python 字典</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>爬虫之nutch</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog25/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog25/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><p> <code>这阵子主要研究的爬虫方向，主要以java为语言基础,nutch为自动框架，jsoup作为自主爬虫插件开发基础，进行了一些有针对性的实站，在这些过程中，也遇到了一些问题和心得，觉得有必要总结一下</code></p><h2 id="爬虫之nutch"><a href="#爬虫之nutch" class="headerlink" title="爬虫之nutch"></a>爬虫之nutch</h2><h3 id="nutch使用体验与感悟"><a href="#nutch使用体验与感悟" class="headerlink" title="nutch使用体验与感悟"></a>nutch使用体验与感悟</h3><p>在这里之所以以nutch开篇，因为在接触爬虫之前就一直有听过它的大名，知道它是我们java语言栈中的爬虫利器，而且因为它，诞生了hadoop这一重器，后者在如今天大数据技术圈的名头，应该是无人不晓吧。所以，多种因素的促使下，让我入了nutch的坑。而本文虽是不仅针对nutch的总结，但主要还是以nutch为主。</p><p>经过一阵的实际体验,nutch给我的感觉，老实说确实是强,百科中说nutch的目的是“Nutch 致力于让每个人能很容易, 同时花费很少就可以配置世界一流的Web搜索引擎. 为了完成这一宏伟的目标, Nutch必须能够做到”,能有这么宏伟的目标，自然得有相应的实力来支撑。但就我体验来说，它确实是强，经过简单的配置后，几个简单的指令就能对页面进行抓取，但我觉得也有几个比较明显的让人体验不太好的地方</p><ol><li>对动态生成的网页内容的抓取不理想，或要通过其它的插件，但插件的引入也不如想像般顺利</li><li>版本太多，且很多版本之间的差异明显。在后面会尝试说明一下。</li><li>资料太少，有很多场景国外都没有有效的解决策略（公网检索下），国内环境就更差了，为了搜集资料我多次去过国家图书馆，逛过书店等，都没太找到特别详尽且有针对性的资料，所以nutch的整个踩坑过程是很痛苦的，我后面会将我目前调使的nutch抓取服务配置和一些踩坑进行详细的总结，我觉得，就我之前对网上的搜集资料的掌握的情况来看，接下来我给出的总结，或者能带来一些更可靠的价值。<br>综上，我对nutch的感悟是又爱又恨。爱得是它确实是能很便利的帮忙爬取一些东西，恨的是它又不完全是那么便利</li></ol><h3 id="nutch搭建与踩坑回顾"><a href="#nutch搭建与踩坑回顾" class="headerlink" title="nutch搭建与踩坑回顾"></a>nutch搭建与踩坑回顾</h3><p>前文中已经提到过nutch有很多版本，目前最新版本2.3.1，它的多个版本间是有很多差异的，比如1.X的版本间的持久层是没有抽象出来的，所以1.X版本的持久化形式比较单一。而2.X版本中持久层被抽象出来，通过一不同的配置即可实现多元的持久层存储。如mysql、hbase、avro等。但在2.3.X开始就不支持mysql，官网是明确公示过，或者说从2.2.X开始就不支持了，但就实际操作来看2.2.X还是能适配mysql的，而2.3.X在我的实际操作中是不行的。另在这里说一下，我的持久层主要以mysql为主，后面可能还会再试试hbase，而一开始不采用hbase不是我没尝试，而是尝试过，发现nutch目前适配的hbase版本太低，而我服务器上已经搭建的hbase集群环境的版本相对高了不少，无法适配。我想没有必要为此就针对hbase的版本进行更替，所以采用mysql作为持久层，<strong>这是坑一</strong>。<br>在使用nutch之前，对其是一点都不了解的，或者说对爬虫需求也都是不熟悉的。所以，对其的功能是寄于厚望，一开始就配一个网站的首页url，就设置多线程，多层抓取。但经过多次实站后，发现有些网站中一部份或大部份都不能抓取。再随着深入观察发现，很多是动态生成的内容。更甚者，有些内容的加载是页面加载后，再发送ajax来加载页面的一些关键内容。而原本考虑nutch是支持插件扩展的，原想直接通过检索，求助于互联网，希望直接就能找到一款ajax扩展的插件，然而，几经周折，都未成行。<strong>这是坑二</strong></p><p>其它还有一些小坑，具体我在下面搭建环节具体结细节处再提，虽小，但影响也挺大，而且比较坑人。以上都是主要通过人力暂未能直接解决的坑。所以先列出来，下面，我回顾下我的nutch搭建环节，其中会给出一些小坑与相应的解决方案</p><h4 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h4><p>nutch的搭建分为分布式与单机版，我目前主要涉猎的是nutch单机版。具体的版本选择，我尝试过nutch1.2与nutch1.7以上的所有版本，1.X与2.X的主要差异在于2.X将持久层给抽象出来了。总得来说nuthc2.x的实用性相对高些。而我以我目前具体使用的版本2.2.1为例，进行介绍<br>step 1.获取nutch2.2.1 <a href="http://archive.apache.org/dist/" target="_blank" rel="noopener">http://archive.apache.org/dist/</a><br>这个url能定位到apache很多软件和历史版本。进入这里，然后找到nutch，下载相应的版本（该连接有时可能打不开，翻墙试试）。<br>step 2. 对ivy下的ivy.xml与ivysetting.xml进行修改。<br>这里就有之前提到的坑一了，这里可能配置对持久层的依赖了。我这以mysql配置。</p><p>修改${APACHE_NUTCH_HOME}/ivy/ivy.xml文件</p><p>将以下行的注释取消</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs org"><br>修改以下行。从默认的<br>&#96;&#96;&#96;   org&#x3D;&quot;org.apache.gora&quot;  name&#x3D;&quot;gora-core&quot;  rev&#x3D;&quot;0.3&quot;  conf&#x3D;&quot;*-&gt;default&quot;&#x2F;&gt;<br></code></pre></td></tr></table></figure><p>改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs org"><br>取消以下行的注释<br>&#96;&#96;&#96;  org&#x3D;&quot;org.apache.gora&quot;  name&#x3D;&quot;gora-sql&quot;  rev&#x3D;&quot;0.1.1-incubating&quot;  conf&#x3D;&quot;*-&gt;default&quot; &#x2F;&gt;<br></code></pre></td></tr></table></figure><p>如果按默认的不做修改，将会在抓取网页时遇到以下错误。</p><p><img src="//img.wqkenqing.ren//file/2017/8/e8f001bf53174dd985d3ffd36c6fb32d-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="e8f001bf53174dd985d3ffd36c6fb32d-image.png"></p><p>然后配置ivysetting.xml，这个文件类似maven的.setting.xml文件，主要修改相应的软件仓库源，默认地址可能会出现下载缓慢的情况，建议换成国内源，贴一个我配的阿里的。<br><img src="//img.wqkenqing.ren//file/2017/8/ffc49faa6d304b2694313bd5c206ee94-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="ffc49faa6d304b2694313bd5c206ee94-image.png"></p><p>速度杠杠的。<br>这时就可以进行编译了，通过终端进nutch文件地址进执行ant</p><p>然后配置持久层的配置文件，gora.properties<br><img src="//img.wqkenqing.ren//file/2017/8/33e8c343b9854449897c28dd5177409f-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="33e8c343b9854449897c28dd5177409f-image.png"></p><p>接下来配另mysql的映射文件gora-sql-mapping.xml，可以这么说，这个地方出现的坑是我遇到的坑最多的地方之一。因为我是事后总结，平日也有工任务，所以，在出现坑的时侯，我首要的考虑的是解决的它，所以解决这些问题后，可能能记得是大致是什么状况，但无法具体复现，我在这以总结，提练式的对这些小坑进行叙述，就不贴具体的错误日志了。</p><p>首先，文件中的默认配置id的大小是512.这个对于以unicode，准确的说以utf8为编码格式的mysql来说是过长的，会在inject就报sql初始化错误，id too long<br><strong>解决方式</strong><br>将id的长度改小，我设置的是180，nutch默认一般以target url拼接成id，所以一般来讲，180的id是妥妥够用的。</p><p>类似的问题还会出现一些如text ,content过长的问题，初次搭建我这先建议改小试试，后面还有根治的方式。</p><p>修改了gora-sql-mapping.xml文件后，执行抓取指令，以bin/nutch crawl urlfile  -threads number -deepth num 这是nutch 普遍用的一个指行指令，这个指令执行时会默认将数据持久化到webpage的表中，这种方式缺点是不太灵活，复杂任务的时候不好操作。</p><p>另一种bin/crawl urlfile -crawlId name (这个name会作为对应的表名组成部份) “solrrl” “num”用于指定解析程度<br>这种方式相对而言更灵活，后面我主要采用这种方式。这里有个小细节，bin/crawl 这个脚本是可以尝试更改的，它默认执行任务时只创建了50，而这种方式无法像上面那样指定创建线程数，所以我更改了crawl文件的初始值，将参数调值2000.所以可以根据自己需求，酌情更改。</p><p>bin/nutch parse 有些fetch 任务执行完成后，parse数据同步至数据库时可能会产生一些错误，那么可以通过这个指令尝试进行解析。<br>示例：bin/nutch parse -crawlId name -all<br>这里容易出现前面提到过的一个问题，就是在解析时，content 或text 中的内容格式不对，或text 内容中出现在了emoji等情况，都可能使解析任务中断。我经过一翻调整，算是有一个统一解决方案：在这里贴出来参考<br>1、将数据库编码格式设置为utf8mb4；<br>2、将text和content的gora-mapping.xml文件中添加jdbc-type=“text” 或jdbc-type=”blob”的设置，即指明其数据库中对应的类型，避免长度等问题<br>3、上两者结合的一个情况，text存入文中的内容有编码格式，相对读取轻松，blob以二进制形式存放，取值需要转码，所以在不出错的情况下优先设为text，而这时，数据库设为utf8mb4时就不要在jdbc url 中设置utf8格式了，这样反而会出现问题。<br><img src="//http://img.wqkenqing.ren//file/2017/9/ae5a036dcc9c45a29fdfa0ed2d345eca-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="ae5a036dcc9c45a29fdfa0ed2d345eca-image.png"></p><p>至此 nutch日常的主要使用指令就这两个，还有些 如果bin/nutch fetch bin/nutch gernate<br>这些相对出错较少，出错的影响和对策网上也相对较多，就不再缀述了。</p><hr><p>至此爬虫服务的总结就要告一段落了，这篇文章体量相对较大，我是断断续续逐步完成的，所以，后面更多是凭回忆出的之前深刻影响且在网上少有明确解决方案的一些问题，给出我的解决方式，所以，如果这篇总结针对的算是nutch使用过程中，尝试更进一步的助力，而非特别基础的。如果看到此篇文章的你对nutch还有其它的一些问题，可以尝试留言，我们一起探讨。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop总结(第一版---HDFS篇)</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog24/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog24/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h1 id="Hadoop总结-第一版—HDFS篇"><a href="#Hadoop总结-第一版—HDFS篇" class="headerlink" title="Hadoop总结(第一版—HDFS篇)"></a>Hadoop总结(第一版—HDFS篇)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 接触hadoop生态也有大半年了，一直碎片化的查阅，学习了一些博客和书籍。随着使用的深入，对一些常用的模块有较熟练的使用，也有写过一些日常小结，但对hadoop本身背后的原理没有系统性的学习，回顾来看，就提升曲线来说，现在亟需总结这环节，这也是本文的由来```">## 什么是hadoop？<br>&gt;hadoop是稳定的，高容错的，可大规模布署的分布式文件，存储，并行编程框架。<br>&#96;&#96;&#96;本文默认是已经有hadoop使用经验,所以暂不涉及具体的hadoop生态的各组件的部署和调优细节，后续单开文章来总结。但在具体讲解时会涉及说参数配置会对相关组件参生影响<br></code></pre></td></tr></table></figure><p>具体而言，hadoop核心组件内容有：<strong>hdfs</strong>、<strong>mapredcue</strong>。所以接下来的总结主要针对这两在核心组件展开</p><h2 id="HDFS篇"><a href="#HDFS篇" class="headerlink" title="HDFS篇"></a>HDFS篇</h2><h3 id="什么是HDFS？"><a href="#什么是HDFS？" class="headerlink" title="什么是HDFS？"></a>什么是HDFS？</h3><p><strong>分布式文件系统</strong>：分布式文件系统是一种允许文件通过网络在多台主机上分享的 文件的系统，可让多机器上的多用户分享文件和存储空间<br>HDFS:（Hadoop Distribute File System）即hadoop分布式文件系统  主要用于适合运行在通用硬件上的分布式文件系统，特点是高度容错，适合布署在廉价服务器上，具有高吞吐量的数据访问等特点  1. 保存多个副本，且提供容错机制，副本丢失或宕机自动恢复。默认存3份。  2. 运行在廉价的机器上。  3. 适合大数据的处理。多大？多小？HDFS默认会将文件分割成block，64M为1个block。然后将block按键值对存储在HDFS上，并将键值对的映射存到内存中。如果小文件太多，那内存的负担会很重。  4. 适用于一次写入、多次查询的情况  5. 不支持并发写情况，小文件不合适。因为小文件也占用一个块，小文件越多（1000个1k文件）块越 多，NameNode压力越大。<br><code>hdfs得部署在linux系统上</code></p><h3 id="HDFS的具体内容"><a href="#HDFS的具体内容" class="headerlink" title="HDFS的具体内容"></a>HDFS的具体内容</h3><p>文件、节点、数据块 HDFS主要是是围绕着这三个关键词设计的.</p><h4 id="数据块"><a href="#数据块" class="headerlink" title="数据块"></a><strong>数据块</strong></h4><ul><li>Block：在HDFS中，每个文件都是采用的分块的方式存储，每个block放在不同的dataNode节点上，每个block的标识是一个三元组(block id , numBytes,generationStamp),block id 具有唯一性，具体分配是由namenode节点设置，然后在datanode上建立对应的Block文件，同时建立对应的block meta文件(问题是block meta文件存放位，block size可以通过配置文件设置，所以修改block size会对以前持续化的数据有何影响?）</li><li>Packet:是HDFS文件在DFSClient与DataNode之间通信的过程中文件的形式(一般一个Block对应多个Packet)</li><li>Chunk:是通过程中具体传输的文件单位，发送过程以Packet的方式进行，但 一个packet包含多个Chunk,同时对于每个chunk进行checksum计算，生成checksum bytes。</li></ul><p><strong>Packet</strong><br>Packet的结构：数据包和heatbeat包  一个Packet数据包的组成结构主要分为 Packet Header 、PacketData  Packet Header 中又分为：<br><img src="//img.wqkenqing.ren/.qiniudns.com/file/2017/7/10eed6bcc563463ea0b8cd5adf99adec-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="10eed6bcc563463ea0b8cd5adf99adec-image.png"><br>Packet Data部分是一个Packet的实际数据部分。<br>主要内容有</p><ul><li>一个4字节校验</li><li>Checksum</li><li>Chunk部分，Chunk部分最大为512字节<br><img src="//img.wqkenqing.ren//file/2017/7/c68e61da1e8148ab99b43fe8e3f5408e-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="c68e61da1e8148ab99b43fe8e3f5408e-image.png"><br>Packet创建过程：首先将字节流数据写入一个buffer缓冲区中，也就是从偏移量为25的位置（checksumStart）开 始写Packet数据Chunk的Checksum部分，从偏移量为533的位置（dataStart）开始写Packet数据的Chunk Data部分，直到一个Packet创建完成为止。</li></ul><p><code>注意：当写一个文件的最后一个Block的最后一个Packet时，如果一个Packet的大小未能达到最大长度，也就是上图对应的缓冲区 中，Checksum与Chunk Data之间还保留了一段未被写过的缓冲区位置，在发送这个Packet之前，会检查Chunksum与Chunk Data之间的缓冲区是否为空白缓冲区（gap），如果有则将Chunk Data部分向前移动，使得Chunk Data 1与Chunk Checksum N相邻，然后才会被发送到DataNode节点</code></p><h4 id="hdsf架构-主要组成是节点）"><a href="#hdsf架构-主要组成是节点）" class="headerlink" title="hdsf架构(主要组成是节点）"></a>hdsf架构(主要组成是节点）</h4><p>主要的构成角色有：Client、NameNode、SecondayNameNode、DataNode<br><img src="//img.wqkenqing.ren//file/2017/7/5ba6f1ec6b9c4b0982dc2ce73ff9c444-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="5ba6f1ec6b9c4b0982dc2ce73ff9c444-image.png"></p><ul><li>Client：系统使用者，调用HDFS API操作文件；与NN交互获取文件元数据;与DN交互进行数据读写, 注意：写数据时文件切分由Client完成</li><li>Namenode：Master节点 （也称元数据节点）是系统唯一的管理者。负责元数据的管理(名称空间和数据块映射信息);配置副本策略；处理客户端请求</li><li>Datanode：数据存储节点(也称Slave节点)，存储实际的数据；执行数据块的读写；汇报存储信息给NN</li><li>Secondary NameNode：备胎，namenode的工作量；是NameNode的冷备份；合并fsimage和fsedits然后再发给namenode</li></ul><p><code>careful:</code> 注意：在hadoop 2.x 版本，当启用 hdfs ha 时，将没有这一角色<br><strong>热冷备份说明</strong>：<br>热备份：b是a的热备份，如果a坏掉。那么b马上运行代替a的工作  冷备份：b是a的冷备份，如果a坏掉。那么b不能马上代替a工作。但是b上存储a的一些信息，减少a坏掉之后的损失<br><strong>hdfs构架原则</strong></p><ol><li>元数据与数据分离：文件本身的属性（即元数据）与文件所持有的数据分离</li><li>主/从架构：一个HDFS集群是由一个NameNode和一定数目的DataNode组成</li><li>一次写入多次读取：HDFS中的文件在任何时间只能有一个Writer。当文件被创建，接着写入数据，最后，一旦文件被关闭，就不能再修改。</li><li>移动计算比移动数据更划算：数据运算，越靠近数据，执行运算的性能就越好，由于hdfs数据分布在不同机器上，要让网络的消耗最低，并提高系统的吞吐量，最佳方式是将运算的执行移到离它要处理的数据更近的地方，而不是移动数据</li></ol><p><strong>针对第四条的解释</strong>：<br>在上文中交代到hdfs中的文件是以block的形式存放在集群中，所以一个文件可以是被切分成很多block存放在集群的机器中针对第四条，移动计算比移动数据更划算，是因为，从理论上讲，集群的计算能力是很方便扩展的，如服务器的硬件提升，或增加服务器等。但网络带宽等资源却很容易达到瓶颈或增加经济负担，所以将计算转移至每个block就近的机器进行计算，会比将所有的block合到一个机器上再进行计算要划算，所以，叫移动计算要比移动数据划算</p><h5 id="NameNode"><a href="#NameNode" class="headerlink" title="NameNode"></a>NameNode</h5><p>NameNode是整个文件系统的管理与计算节点，是HDFS中最复杂的一个实体，它与管理着HDFS文件系统中最重要的两个关系</p><ol><li>HDFS文件系统中的文件目录树，以及文件的数据块索引，即每个文件对应的数据块列表  数据块和数据节点的对应关系，即某一块数据块保存在哪些数据节点的信息  <strong>第一个关系</strong>即目录树、元数据和数据块的索引信息持久化到物理存储中，具体的实现是保存在命名空间的镜像fsimage和编辑日志edits中，<strong>careful</strong>：在fsimage中，并没有记录每一个block对应到那几个Datanodes的对应表信息</li><li><strong>第二个关系是</strong>在NameNode启动后，每个DataNode对本地的磁盘进行扫描，将本DataNode上保存的block信息上报至NameNode,Namenode在接收到每个Datanode的块信息汇报后，将接收到的块信息，以及其所在的Datanode信息等保存在内存中。HDFS就是通过这种块信息汇报的方式来完成 block -&gt; Datanodes list的对应表构建（<strong>careful</strong>）<br>类似于数据库中的检查点，为了避免edits日志过大，在Hadoop1.X 中，SecondaryNameNode会按照时间阈值（比如24小时）或者edits大小阈值（比如1G），周期性的将fsimage和edits的合 并，然后将最新的fsimage推送给NameNode。而在Hadoop2.X中，这个动作是由Standby NameNode来完成.<br>由此可看出，这两个文件一旦损坏或丢失，将导致整个HDFS文件系统不可用<br>在hadoop1.X为了保证这两种元数据文件的高可用性，一般的做法，将dfs.namenode.name.dir设置成以逗号分隔的多个目录，这多个目录至少不要在一块磁盘上，最好放在不同的机器上，比如：挂载一个共享文件系统<br>fsimage\edits 是序列化后的文件，想要查看或编辑里面的内容，可通过 hdfs 提供的 oiv\oev 命令，<br>命令: hdfs oiv （offline image viewer） 用于将fsimage文件的内容转储到指定文件中以便于阅读,，如文本文件、XML文件，该命令需要以下参数：</li></ol><p>-i (必填参数) –inputFile <arg> 输入FSImage文件<br>-o (必填参数) –outputFile <arg> 输出转换后的文件，如果存在，则会覆盖<br>-p (可选参数） –processor <arg> 将FSImage文件转换成哪种格式： (Ls|XML|FileDistribution).默认为Ls<br>示例：hdfs oiv -i /data1/hadoop/dfs/name/current/fsimage_0000000000019372521 -o /home/hadoop/fsimage.txt<br>命令：hdfs oev (offline edits viewer 离线edits查看器）的缩写， 该工具只操作文件因而并不需要hadoop集群处于运行状态。<br>示例: hdfs oev -i edits_0000000000000042778-0000000000000042779 -o edits.xml<br>支持的输出格式有binary（hadoop使用的二进制格式）、xml（在不使用参数p时的默认输出格式）和stats（输出edits文件的统计信息）<br>由此可以总结到：NameNode管理着DataNode，接收DataNode的注册、心跳、数据块提交等信息的上报，并且在心跳中发送数据块<strong>复制</strong>、<strong>删除</strong>、<strong>恢复</strong>等指令；同时，NameNode还为客户端对<strong>文件系统目录树的操作</strong>和对<strong>文件数据读写</strong>、对<strong>HDFS系统进行管理提供支持</strong><br>另 Namenode 启动后会进入一个称为<strong>安全模式</strong>的特殊状态。处于安全模式 的 Namenode 是不会进行数据块的复制的。 Namenode 从所有的 Datanode 接收心跳信号和块状态报告。 块状态报告包括了某个 Datanode 所有的数据 块列表。每个数据块都有一个指定的最小副本数。当 Namenode 检测确认某 个数据块的副本数目达到这个最小值，那么该数据块就会被认为是副本安全 (safely replicated) 的；在一定百分比（这个参数可配置）的数据块被 Namenode 检测确认是安全之后（加上一个额外的 30 秒等待时间）， Namenode 将退出安全模式状态。接下来它会确定还有哪些数据块的副本没 有达到指定数目，并将这些数据块复制到其他 Datanode 上。  ##### Secondary NameNode  在HA cluster中又称为standby node<br>主要作用：  1.如上文提到的合并fsimage和eits日志，将eits日志文件大小控制在一个限度下  大致流程如下  namenode 响应 Secondary namenode 请求，将 edit log 推送给 Secondary namenode ， 开始重新写一个新的 edit log  Secondary namenode 收到来自 namenode 的 fsimage 文件和 edit log  Secondary namenode 将 fsimage 加载到内存，应用 edit log ， 并生成一 个新的 fsimage 文件  Secondary namenode 将新的 fsimage 推送给 Namenode  Namenode 用新的 fsimage 取代旧的 fsimage ， 在 fstime 文件中记下检查 点发生的时<br><img src="//img.wqkenqing.ren//file/2017/7/aed541bebcc04fb79e2de3c504b7ee46-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="aed541bebcc04fb79e2de3c504b7ee46-image.png"></p><h4 id="HDFS写文件-1-x-默认的block大小是64M-2-X版本默认block的大小是-128M"><a href="#HDFS写文件-1-x-默认的block大小是64M-2-X版本默认block的大小是-128M" class="headerlink" title="HDFS写文件  1.x 默认的block大小是64M 2.X版本默认block的大小是 128M "></a>HDFS写文件  1.x 默认的block大小是64M 2.X版本默认block的大小是 128M <img src="//img.wqkenqing.ren//file/2017/7/d0c33b33bfbc41e8a493553395e52ef0-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="d0c33b33bfbc41e8a493553395e52ef0-image.png"></h4><p>如上图所示  + Client预先设置的block参数切分FIle</p><ul><li>CLient向NameNode发送写数据请求，</li><li>NameNode，记录block信息，并返回可用的DataNode(具体的返回规则参考下文)</li><li>client向DataNode发送block1；发送过程是以流式写入具体流程是</li></ul><ol><li><p>将64M的block1按64k的packet划分</p></li><li><p>然后将第一个packet发送给host2</p></li><li><p>host2接收完后，将第一个packet发送给host1，同时client想host2发送第二个packet</p></li><li><p>host1接收完第一个packet后，发送给host3，同时接收host2发来的第二个packet</p></li><li><p>以此类推，如图红线实线所示，直到将block1发送完毕</p></li><li><p>host2,host1,host3向NameNode，host2向Client发送通知，说“消息发送完了”。</p></li><li><p>client收到host2发来的消息后，向namenode发送消息，说我写完了。这样就真完成了。</p></li><li><p>发送完block1后，再向host7，host8，host4发送block2  当客户端向 HDFS 文件写入数据的时候，一开始是写到本地临时文件中。假设该文件的副 本系数设置为 3 ，当本地临时文件累积到一个数据块的大小时，客户端会从 Namenode 获取一个 Datanode 列表用于存放副本。然后客户端开始向第一个 Datanode 传输数据，第一个 Datanode 一小部分一小部分 (4 KB) 地接收数据，将每一部分写入本地仓库，并同时传输该部分到列表中 第二个 Datanode 节点。第二个 Datanode 也是这样，一小部分一小部分地接收数据，写入本地 仓库，并同时传给第三个 Datanode 。最后，第三个 Datanode 接收数据并存储在本地。因此， Datanode 能流水线式地从前一个节点接收数据，并在同时转发给下一个节点，数据以流水线的 方式从前一个 Datanode 复制到下一个<br><img src="//img.wqkenqing.ren//file/2017/7/2c77aaad2f684820bf8a6b475b79d2f1-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="2c77aaad2f684820bf8a6b475b79d2f1-image.png"></p><p>写入的过程，按hdsf默认设置，1T文件，我们需要3T的存储，3T的网络流量  在执行读或写的过程中，NameNode和DataNode通过HeartBeat进行保存通信，确定DataNode活着。如果发现DataNode死掉了，就将死掉的DataNode上的数据，放到其他节点去。读取时，要读其他节点去  挂掉一个节点，没关系，还有其他节点可以备份；甚至，挂掉某一个机架，也没关系；其他机架上，也有备份</p><h5 id="hdfs读文件"><a href="#hdfs读文件" class="headerlink" title="hdfs读文件"></a>hdfs读文件</h5><p><img src="//img.wqkenqing.ren//file/2017/7/8fb62c84f57a4203a2dbedf5f68920d9-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="8fb62c84f57a4203a2dbedf5f68920d9-image.png"></p><p>客户端通过调用FileSystem对象的open()方法来打开希望读取的文件，对于HDFS来说，这个对象时分布文件系统的一个实例；  DistributedFileSystem通过使用RPC来调用NameNode以确定文件起始块的位置，同一Block按照重复数会返回多个位置，这些位置按照Hadoop集群拓扑结构排序，距离客户端近的排在前面  前两步会返回一个FSDataInputStream对象，该对象会被封装成DFSInputStream对象，DFSInputStream可以方便的管理datanode和namenode数据流，客户端对这个输入流调用read()方法  存储着文件起始块的DataNode地址的DFSInputStream随即连接距离最近的DataNode，通过对数据流反复调用read()方法，将数据从DataNode传输到客户端  到达块的末端时，DFSInputStream会关闭与该DataNode的连接，然后寻找下一个块的最佳DataNode，这些操作对客户端来说是透明的，客户端的角度看来只是读一个持续不断的流  一旦客户端完成读取，就对FSDataInputStream调用close()方法关闭文件读取</p><h5 id="block持续化结构"><a href="#block持续化结构" class="headerlink" title="block持续化结构"></a>block持续化结构</h5><p>DataNode节点上一个Block持久化到磁盘上的物理存储结构，如下图所示：  <img src="//img.wqkenqing.ren//file/2017/7/df10f0ac586f4baebc2587842aec5675-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="df10f0ac586f4baebc2587842aec5675-image.png"></p><p>每个Block文件（如上图中blk_1084013198文件）都对应一个meta文件（如上图中blk_1084013198_10273532.meta文件），Block文件是一个一个Chunk的二进制数据（每个Chunk的大小是512字节），而meta文件是与每一个Chunk对应的Checksum数据，是序列化形式存储  —  至上我们大致了解了HDFS。正如上文提到的Hadoop的特点，高可能，高容错性。若光从上文提到的特性可能还不足以说明，如NameNode环节就提到了NameNode的重要作用，但若NameNode出现了故障，对整个机集会是毁灭性的打击，于是Hadoop也引入其它的一些手段来保存高可用，高容错。接下来我们就来探讨下</p><h3 id="Hadoop-HA的引入"><a href="#Hadoop-HA的引入" class="headerlink" title="Hadoop HA的引入"></a>Hadoop HA的引入</h3><p>HA：High Available即高可用性集群，是保证业务连续性的有效解决方案，一般有两个或两个以上的节点，且分为活动节点及备用节点。  在HA具体实现方法不同的情况下，HA框架的流程是一致的, 不一致的就是如何存储和管理日志。在Active NN和Standby NN之间要有个共享的存储日志的地方，Active NN把EditLog写到这个共享的存储日志的地方，Standby NN去读取日志然后执行，这样Active和Standby NN内存中的HDFS元数据保持着同步。一旦发生主从切换Standby NN可以尽快接管Active NN的工作; 默认并未启用 hdfs ha。<br>SPOF方案回顾：</p></li><li><p>Secondary NameNode：它不是HA，它只是阶段性的合并edits和fsimage，以缩短集群启动的时间。当NN失效的时候，Secondary NN并无法立刻提供服务，Secondary NN甚至无法保证数据完整性：如果NN数据丢失的话，在上一次合并后的文件系统的改动会丢失</p></li><li><p>Backup NameNode (HADOOP-4539)：它在内存中复制了NN的当前状态，算是Warm Standby，可也就仅限于此，并没有failover等。它同样是阶段性的做checkpoint，也无法保证数据完整性<br>3. 手动把name.dir指向NFS（Network File System），这是安全的Cold Standby，可以保证元数据不丢失，但集群的恢复则完全靠手动<br>4. Facebook AvatarNode：Facebook有强大的运维做后盾，所以Avatarnode只是Hot Standby，并没有自动切换，当主NN失效的时候，需要管理员确认，然后手动把对外提供服务的虚拟IP映射到Standby NN，这样做的好处是确保不会发生脑裂的场景。其某些设计思想和Hadoop 2.0里的HA非常相似，从时间上来看，Hadoop 2.0应该是借鉴了Facebook的做法 <img src="//img.wqkenqing.ren//file/2017/7/32ec8d45379b4e4d99505b03b1b33e61-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="32ec8d45379b4e4d99505b03b1b33e61-image.png"></p></li></ol><p>5. PrimaryNN 与StandbyNN之间通过NFS来共享FsEdits、FsImage文件，这样主备NN之间就拥有了一致的目录树和block信息；而block的 位置信息，可以根据DN向两个NN上报的信息过程中构建起来。这样再辅以虚IP，可以较好达到主备NN快速热切的目的。但是显然，这里的NFS又引入了新的SPOF<br>6. 在主备NN共享元数据的过程中，也有方案通过主NN将FsEdits的内容通过与备NN建立的网络IO流，实时写入备NN，并且保证整个过程的原子性。这种方案，解决了NFS共享元数据引入的SPOF，但是主备NN之间的网络连接又会成为新的问题</p><h4 id="hadoop2-X-ha-原理-hadoop2-x之后，Clouera提出了QJM-Qurom-Journal-Manager，这是一个基于Paxos算法实现的HDFS-HA方案，它给出了一种较好的解决思路和方案-示意图如下："><a href="#hadoop2-X-ha-原理-hadoop2-x之后，Clouera提出了QJM-Qurom-Journal-Manager，这是一个基于Paxos算法实现的HDFS-HA方案，它给出了一种较好的解决思路和方案-示意图如下：" class="headerlink" title="hadoop2.X ha 原理:  hadoop2.x之后，Clouera提出了QJM/Qurom Journal Manager，这是一个基于Paxos算法实现的HDFS HA方案，它给出了一种较好的解决思路和方案,示意图如下："></a>hadoop2.X ha 原理:  hadoop2.x之后，Clouera提出了QJM/Qurom Journal Manager，这是一个基于Paxos算法实现的HDFS HA方案，它给出了一种较好的解决思路和方案,示意图如下：</h4><p><img src="//img.wqkenqing.ren//file/2017/7/bc057fbb4b4047928bf06b7a43364335-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="bc057fbb4b4047928bf06b7a43364335-image.png"></p><ul><li><p>基本原理就是用2N+1台 JN 存储EditLog，每次写数据操作有大多数（&gt;=N+1）返回成功时即认为该次写成功，数据不会丢失了。当然这个算法所能容忍的是最多有N台机器挂掉，如果多于N台挂掉，这个算法就失效了。这个原理是基于Paxos算法</p></li><li><p>在HA架构里面SecondaryNameNode这个冷备角色已经不存在了，为了保持standby NN时时的与主Active NN的元数据保持一致，他们之间交互通过一系列守护的轻量级进程JournalNode  + 任何修改操作在 Active NN上执行时，JN进程同时也会记录修改log到至少半数以上的JN中，这时 Standby NN 监测到JN 里面的同步log发生变化了会读取 JN 里面的修改log，然后同步到自己的的目录镜像树里面，<br><img src="//img.wqkenqing.ren//file/2017/7/608621d2ab52466db89e8a95d165f6e7-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="608621d2ab52466db89e8a95d165f6e7-image.png"></p><p>当发生故障时，Active的 NN 挂掉后，Standby NN 会在它成为Active NN 前，读取所有的JN里面的修改日志，这样就能高可靠的保证与挂掉的NN的目录镜像树一致，然后无缝的接替它的职责，维护来自客户端请求，从而达到一个高可用的目的  QJM方式来实现HA的主要优势：<br>1. 不需要配置额外的高共享存储，降低了复杂度和维护成本<br>2. 消除spof<br>3. 系统鲁棒性(Robust:健壮)的程度是可配置<br>4. JN不会因为其中一台的延迟而影响整体的延迟，而且也不会因为JN的数量增多而影响性能（因为NN向JN发送日志是并行的）  datanode的fencing: 确保只有一个NN能命令DN。HDFS-1972中详细描述了DN如何实现fencing<br>1. 每个NN改变状态的时候，向DN发送自己的状态和一个序列号<br>2. DN在运行过程中维护此序列号，当failover时，新的NN在返回DN心跳时会返回自己的active状态和一个更大的序列号。DN接收到这个返回则认为该NN为新的active  3. 如果这时原来的active NN恢复，返回给DN的心跳信息包含active状态和原来的序列号，这时DN就会拒绝这个NN的命令  客户端fencing：确保只有一个NN能响应客户端请求，让访问standby nn的客户端直接失败。在RPC层封装了一层，通过FailoverProxyProvider以重试的方式连接NN。通过若干次连接一个NN失败后尝试连接新的NN，对客户端的影响是重试的时候增加一定的延迟。客户端可以设置重试此时和时间  Hadoop提供了ZKFailoverController角色，部署在每个NameNode的节点上，作为一个deamon进程, 简称zkfc，<br><img src="//img.wqkenqing.ren//file/2017/7/3cfc6fc17a8e47509465442f6eaf7c14-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="3cfc6fc17a8e47509465442f6eaf7c14-image.png"></p><p>FailoverController主要包括三个组件:<br>1. HealthMonitor: 监控NameNode是否处于unavailable或unhealthy状态。当前通过RPC调用NN相应的方法完成<br>2. ActiveStandbyElector: 管理和监控自己在ZK中的状态<br>3. ZKFailoverController 它订阅HealthMonitor 和ActiveStandbyElector 的事件，并管理NameNode的状态  ZKFailoverController主要职责：      1. 健康监测：周期性的向它监控的NN发送健康探测命令，从而来确定某个NameNode是否处于健康状态，如果机器宕机，心跳失败，那么zkfc就会标记它处于一个不健康的状态<br>2. 会话管理：如 果NN是健康的，zkfc就会在zookeeper中保持一个打开的会话，如果NameNode同时还是Active状态的，那么zkfc还会在 Zookeeper中占有一个类型为短暂类型的znode，当这个NN挂掉时，这个znode将会被删除，然后备用的NN，将会得到这把锁，升级为主 NN，同时标记状态为Active<br>3. 当宕机的NN新启动时，它会再次注册zookeper，发现已经有znode锁了，便会自动变为Standby状态，如此往复循环，保证高可靠，需要注意，目前仅仅支持最多配置2个NN<br>4. master选举：如上所述，通过在zookeeper中维持一个短暂类型的znode，来实现抢占式的锁机制，从而判断那个NameNode为Active状态  <strong>hadoop2.x Federation</strong>：  单Active NN的架构使得HDFS在集群扩展性和性能上都有潜在的问题，当集群大到一定程度后，NN进程使用的内存可能会达到上百G，NN成为了性能的瓶颈  常用的估算公式为1G对应1百万个块，按缺省块大小计算的话，大概是64T (这个估算比例是有比较大的富裕的，其实，即使是每个文件只有一个块，所有元数据信息也不会有1KB/block)  为了解决这个问题,Hadoop 2.x提供了HDFS Federation, 示意图如下：<br><img src="//img.wqkenqing.ren//file/2017/7/e5015b90accf4fe6a7729afe692ffa64-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="e5015b90accf4fe6a7729afe692ffa64-image.png"></p><p>多个NN共用一个集群里的存储资源，每个NN都可以单独对外提供服务  每个NN都会定义一个存储池，有单独的id，每个DN都为所有存储池提供存储  DN会按照存储池id向其对应的NN汇报块信息，同时，DN会向所有NN汇报本地存储可用资源情况  如果需要在客户端方便的访问若干个NN上的资源，可以使用客户端挂载表，把不同的目录映射到不同的NN，但NN上必须存在相应的目录  设计优势：  改动最小，向前兼容；现有的NN无需任何配置改动；如果现有的客户端只连某台NN的话  分离命名空间管理和块存储管理  客户端挂载表：通过路径自动对应NN、使Federation的配置改动对应用透明  (与上面ha方案中介绍的最多2个NN冲突？)  至此hadoop中的hdfs高可用特性，高容错的实现又有了更深理解，但针对hdfs还一层设计实现<strong>机架感知</strong></p><h4 id="机架感知"><a href="#机架感知" class="headerlink" title="机架感知"></a>机架感知</h4><p>分布式的集群通常包含非常多的机器，由于受到机架槽位和交换机网口的限制，通常大型的分布式集群都会跨好几个机架，由多个机架上的机器共同组成一个分布 式集群。机架内的机器之间的网络速度通常都会高于跨机架机器之间的网络速度，并且机架之间机器的网络通信通常受到上层交换机间网络带宽的限制。  具体到hadoop集群，由于hadoop的HDFS对数据文件的分布式存放是按照分块block存储，每个block会有多个副本(默认为3)，并且为了数据的安全和高效，所以hadoop默认对3个副本的存放策略为：<br>在本地机器的hdfs目录下存储一个block  在另外一个rack的某个datanode上存储一个block<br>在该机器的同一个rack下的某台机器上存储最后一个block<br>这样的策略可以保证对该block所属文件的访问能够优先在本rack下找到，如果整个rack发生了异常，也可以在另外的rack上找到该block的副本。这样足够的高效，并且同时做到了数据的容错。<br>hadoop对机架的感知并非是自适应的，亦即，hadoop集群分辨某台slave机器是属于哪个rack并非是只能的感知的，而是需要 hadoop的管理者人为的告知hadoop哪台机器属于哪个rack，这样在hadoop的namenode启动初始化时，会将这些机器与rack的对 应信息保存在内存中，用来作为对接下来所有的HDFS的写块操作分配datanode列表时（比如3个block对应三台datanode）的选择 datanode策略，做到hadoop allocate block的策略：尽量将三个副本分布到不同的rack。<br>具体实现本文不在深究，在此附上网上的一些解决方式<br><a href="http://www.cnblogs.com/cloudma/articles/hadoop-topology.html" target="_blank" rel="noopener">机架感知实现1</a>  <a href="http://blog.csdn.net/magicdreaming/article/details/7629773" target="_blank" rel="noopener">机架感知实现2</a></p></li></ul><hr><p>至此对hdfs的理解与总结告一段落，后续有了新的理解再进行补充</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java中枚举的使用</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog3/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog3/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h3 id="java中枚举的使用"><a href="#java中枚举的使用" class="headerlink" title="java中枚举的使用"></a>java中枚举的使用</h3><p><strong>enum</strong> 的全称为 enumeration 是 JDK 1.5  中引入的新特性，存放在 java.lang 包中。</p><ol><li><p>原始的接口定义常量</p></li><li><p>语法（定义）</p></li><li><p>遍历、switch 等常用操作</p></li><li><p>enum 对象的常用方法介绍</p></li><li><p>给 enum 自定义属性和方法</p></li><li><p>EnumSet，EnumMap 的应用</p></li><li><p>enum 的原理分析</p></li><li><p>总结</p></li></ol><hr><p>原始的接口定义常量</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">IConstants</span> </span>&#123;<br>    <span class="hljs-keyword">String</span> MON = <span class="hljs-string">"Mon"</span>;<br>    <span class="hljs-keyword">String</span> TUE = <span class="hljs-string">"Tue"</span>;<br>    <span class="hljs-keyword">String</span> WED = <span class="hljs-string">"Wed"</span>;<br>    <span class="hljs-keyword">String</span> THU = <span class="hljs-string">"Thu"</span>;<br>    <span class="hljs-keyword">String</span> FRI = <span class="hljs-string">"Fri"</span>;<br>    <span class="hljs-keyword">String</span> SAT = <span class="hljs-string">"Sat"</span>;<br>    <span class="hljs-keyword">String</span> SUN = <span class="hljs-string">"Sun"</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr><p><strong>语法（定义）</strong><br> 创建枚举类型要使用 enum 关键字，隐含了所创建的类型都是 java.lang.Enum 类的子类（java.lang.Enum 是一个抽象类）。枚举类型符合通用模式 Class Enum&lt;E extends Enum<E>&gt;，而 E 表示枚举类型的名称。枚举类型的每一个值都将映射到 protected Enum(String name, int ordinal) 构造函数中，在这里，每个值的名称都被转换成一个字符串，并且序数设置表示了此设置被创建的顺序。</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs haxe"><span class="hljs-keyword">package</span> com.hmw.test;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 枚举测试类</span><br><span class="hljs-comment"> * @author &lt;a href="mailto:hemingwang0902@126.com"&gt;何明旺&lt;/a&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">EnumTest</span> &#123;</span><br>    MON, TUE, WED, THU, FRI, SAT, SUN;<br>&#125;<br>这段代码实际上调用了<span class="hljs-number">7</span>次 Enum(<span class="hljs-keyword">String</span> name, int ordinal)：<br><br><span class="hljs-keyword">new</span> <span class="hljs-type">Enum</span>&lt;EnumTest&gt;(<span class="hljs-string">"MON"</span>,<span class="hljs-number">0</span>);<br><span class="hljs-keyword">new</span> <span class="hljs-type">Enum</span>&lt;EnumTest&gt;(<span class="hljs-string">"TUE"</span>,<span class="hljs-number">1</span>);<br><span class="hljs-keyword">new</span> <span class="hljs-type">Enum</span>&lt;EnumTest&gt;(<span class="hljs-string">"WED"</span>,<span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><hr><p><strong>遍历、switch 等常用操作</strong></p><p>public class Test {<br>    public static void main(String[] args) {<br>        for (EnumTest e : EnumTest.values()) {<br>            System.out.println(e.toString());<br>        }</p><pre><code class="hljs">    System.out.println(&quot;----------------我是分隔线------------------&quot;);    EnumTest test = EnumTest.TUE;    switch (test) {    case MON:        System.out.println(&quot;今天是星期一&quot;);        break;    case TUE:        System.out.println(&quot;今天是星期二&quot;);        break;    // ... ...    default:        System.out.println(test);        break;    }}}</code></pre><hr><p><strong>enum 对象的常用方法介绍</strong><br>int compareTo(E o)<br>          比较此枚举与指定对象的顺序。</p><p>Class<E> getDeclaringClass()<br>          返回与此枚举常量的枚举类型相对应的 Class 对象。</p><p>String name()<br>          返回此枚举常量的名称，在其枚举声明中对其进行声明。</p><p>int ordinal()<br>          返回枚举常量的序数（它在枚举声明中的位置，其中初始常量序数为零）。</p><p>String toString()</p><pre><code class="hljs">返回枚举常量的名称，它包含在声明中。</code></pre><p>static &lt;T extends Enum<T>&gt; T valueOf(Class<T> enumType, String name)<br>          返回带指定名称的指定枚举类型的枚举常量。</p><hr><p><strong>给 enum 自定义属性和方法</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cs">给 <span class="hljs-keyword">enum</span> 对象加一下 <span class="hljs-keyword">value</span> 的属性和 getValue() 的方法：<br><br>package com.hmw.test;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 枚举测试类</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * @author &lt;a href="mailto:hemingwang0902@126.com"&gt;何明旺&lt;/a&gt;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> EnumTest &#123;<br>    MON(<span class="hljs-number">1</span>), TUE(<span class="hljs-number">2</span>), WED(<span class="hljs-number">3</span>), THU(<span class="hljs-number">4</span>), FRI(<span class="hljs-number">5</span>), SAT(<span class="hljs-number">6</span>) &#123;<br>        @Override<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> boolean <span class="hljs-title">isRest</span>(<span class="hljs-params"></span>)</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;,<br>    SUN(<span class="hljs-number">0</span>) &#123;<br>        @Override<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> boolean <span class="hljs-title">isRest</span>(<span class="hljs-params"></span>)</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> <span class="hljs-keyword">value</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-title">EnumTest</span>(<span class="hljs-params"><span class="hljs-keyword">int</span> <span class="hljs-keyword">value</span></span>)</span> &#123;<br>        <span class="hljs-keyword">this</span>.<span class="hljs-keyword">value</span> = <span class="hljs-keyword">value</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getValue</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">value</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> boolean <span class="hljs-title">isRest</span>(<span class="hljs-params"></span>)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> &#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] args</span>)</span> &#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">"EnumTest.FRI 的 value = "</span> + EnumTest.FRI.getValue());<br>    &#125;<br>&#125;<br>输出结果：<br>EnumTest.FRI 的 <span class="hljs-keyword">value</span> = <span class="hljs-number">5</span><br></code></pre></td></tr></table></figure><hr><p><strong>EnumSet，EnumMap 的应用</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span> &#123;</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">String</span>[] args)</span> </span>&#123;<br>        <span class="hljs-comment">// EnumSet的使用</span><br>        EnumSet&lt;EnumTest&gt; weekSet = EnumSet.allOf(EnumTest.class);<br>        <span class="hljs-keyword">for</span> (EnumTest day : weekSet) &#123;<br>            System.out.<span class="hljs-built_in">println</span>(day);<br>        &#125;<br><br>        <span class="hljs-comment">// EnumMap的使用</span><br>        EnumMap&lt;EnumTest, <span class="hljs-keyword">String</span>&gt; weekMap = <span class="hljs-keyword">new</span> EnumMap(EnumTest.class);<br>        weekMap.<span class="hljs-built_in">put</span>(EnumTest.MON, <span class="hljs-string">"星期一"</span>);<br>        weekMap.<span class="hljs-built_in">put</span>(EnumTest.TUE, <span class="hljs-string">"星期二"</span>);<br>        <span class="hljs-comment">// ... ...</span><br>        <span class="hljs-keyword">for</span> (Iterator&lt;Entry&lt;EnumTest, <span class="hljs-keyword">String</span>&gt;&gt; iter = weekMap.entrySet().iterator(); iter.hasNext();) &#123;<br>            Entry&lt;EnumTest, <span class="hljs-keyword">String</span>&gt; entry = iter.next();<br>            System.out.<span class="hljs-built_in">println</span>(entry.<span class="hljs-built_in">getKey</span>().name() + <span class="hljs-string">":"</span> + entry.getValue());<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><p>原理分析<br>        enum 的语法结构尽管和 class 的语法不一样，但是经过编译器编译之后产生的是一个class文件。该class文件经过反编译可以看到实际上是生成了一个类，该类继承了java.lang.Enum<E>。EnumTest 经过反编译(javap com.hmw.test.EnumTest 命令)之后得到的内容如下：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">com</span>.<span class="hljs-title">hmw</span>.<span class="hljs-title">test</span>.<span class="hljs-title">EnumTest</span> <span class="hljs-title">extends</span> <span class="hljs-title">java</span>.<span class="hljs-title">lang</span>.<span class="hljs-title">Enum</span>&#123;</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> com.hmw.test.EnumTest MON;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> com.hmw.test.EnumTest TUE;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> com.hmw.test.EnumTest WED;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> com.hmw.test.EnumTest THU;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> com.hmw.test.EnumTest FRI;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> com.hmw.test.EnumTest SAT;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> com.hmw.test.EnumTest SUN;<br>    <span class="hljs-keyword">static</span> &#123;&#125;;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getValue</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">isRest</span><span class="hljs-params">()</span></span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> com.hmw.test.EnumTest[] values();<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> com.hmw.test.<span class="hljs-function">EnumTest <span class="hljs-title">valueOf</span><span class="hljs-params">(java.lang.<span class="hljs-keyword">String</span>)</span></span>;<br>    com.hmw.test.EnumTest(java.lang.<span class="hljs-keyword">String</span>, <span class="hljs-keyword">int</span>, <span class="hljs-keyword">int</span>, com.hmw.test.EnumTest);<br>&#125;<br></code></pre></td></tr></table></figure><p>所以，实际上 enum 就是一个 class，只不过 java 编译器帮我们做了语法的解析和编译而已。<br>总结<br>    可以把 enum 看成是一个普通的 class，它们都可以定义一些属性和方法，不同之处是：enum 不能使用 extends 关键字继承其他类，因为 enum 已经继承了 java.lang.Enum（java是单一继承）。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sed &amp; awk小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog23/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog23/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h1 id="sed-amp-awk小结"><a href="#sed-amp-awk小结" class="headerlink" title="sed &amp; awk小结"></a>sed &amp; awk小结</h1><p><code>一直想认真掌握sed与awk已经很久了，但一直未找个以特别详细的资料和时间来做这件事，正好这两天受到启发，转而翻墙搜索国外资源，有了很大的收获，趁次机会攻克下来</code></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>sed与awk总得来说是两样东西，本身无直接关联，做在日常使用时两者经常使用到，并且常常混合使用，所以此次小结放在一起，分总式结构进行小结</p><h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><p>sed相较awk更偏于工具一点，全称应该是strem editor (即流式编辑器)。面向的是一行一行内容</p><h3 id="使用形式"><a href="#使用形式" class="headerlink" title="使用形式"></a>使用形式</h3><p>sed [-nefr] [动作]<br>选项与参数：<br>-n ：使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN 的数据一般都会被列出到终端上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。<br>-e ：直接在命令列模式上进行 sed 的动作编辑；<br>-f ：直接将 sed 的动作写在一个文件内， -f filename 则可以运行 filename 内的 sed 动作；<br>-r ：sed 的动作支持的是延伸型正规表示法的语法。(默认是基础正规表示法语法)<br>-i ：直接修改读取的文件内容，而不是输出到终端。</p><p>动作说明： [n1[,n2]]function<br>n1, n2 ：不见得会存在，一般代表『选择进行动作的行数』，举例来说，如果我的动作是需要在 10 到 20 行之间进行的，则『 10,20[动作行为] 』</p><p><strong>function：</strong><br>a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～<br>c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！<br>d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚；<br>i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；<br>p ：列印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～<br>s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦！</p><hr><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><p><code>尝试看awk已有些时日，整体效率不太好，但大体也有思路，现对awk进行一些简单总结，后面则进行实例操作</code><br>awk的细节小点比较多，一次或无法完全总结全，但总体感觉下来发现熟悉大体模式，具体细节可以再通过即时检索解决</p><h3 id="awk命令的基本格式是"><a href="#awk命令的基本格式是" class="headerlink" title="awk命令的基本格式是:"></a>awk命令的基本格式是:</h3><blockquote><p><code>awk &#39;/search_pattern/ { action_to_t[](http://)ake_on_matches; another_action; }&#39; file_to_parse</code></p></blockquote><p>其中searach 与action都可省略其中之一，若action省略，那么action默认为print操作<br>如何search省略，那么默认action针对的是每一行如<br><img src="//img.wqkenqing.ren//file/2017/7/b193032f8daa40faaffc84b673b46885-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="b193032f8daa40faaffc84b673b46885-image.png"><br><img src="//img.wqkenqing.ren//file/2017/7/06ddb1ad717c434e939c3d0461b2d937-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="06ddb1ad717c434e939c3d0461b2d937-image.png"></p><hr><p>附几个操作实例如<br><img src="//img.wqkenqing.ren//file/2017/7/1b777aa53595428e9d56e0b66052f48c-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="1b777aa53595428e9d56e0b66052f48c-image.png"></p><p><img src="//img.wqkenqing.ren//file/2017/7/a1e8b526c4a042b48e0e161e6eae35fe-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="a1e8b526c4a042b48e0e161e6eae35fe-image.png"></p><p><img src="//img.wqkenqing.ren//file/2017/7/de2e1925530d410ba52f25ff0781f0b5-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="de2e1925530d410ba52f25ff0781f0b5-image.png"></p><p><strong>这里是以空白区分了列，通过$后加不同的数字，表示不同的列，$0表示这一行，$1表示第一列</strong>，类推。</p><h3 id="awk的内置变量"><a href="#awk的内置变量" class="headerlink" title="awk的内置变量"></a>awk的内置变量</h3><ul><li><p><strong>FILENAME</strong>:当前输入文件的名称</p></li><li><p><strong>FNR</strong>:当前输入文件数</p></li><li><p><strong>FS</strong>:当前环境中的分隔符，默认是空白</p></li><li><p><strong>NF</strong>:输入文件的每行对应的列数</p></li><li><p><strong>NR</strong>:当前是第几个记录</p></li><li><p><strong>OFS</strong>:列输出时的分隔符，默认是空白</p></li><li><p><strong>ORS</strong>:记录输出时的分隔符，默认是新起一行</p></li><li><p><strong>RS</strong>输入记录中的分隔符，默认是newline character</p><p>正如以上内置变量的存在，所以，awk在正式使用进可能面临更多复杂情况，而之前那种简单模式可以无法应对。于是，常用的awk的使用形态扩充为</p></li></ul><blockquote><p>awk ‘BEGIN { action; }<br>/search/ { action; }<br>END { action; }’ input_file</p></blockquote><p>这里引入了BEGIN与END两个部份，用于做一些初始化或善后处理。<br><img src="//img.wqkenqing.ren//file/2017/7/8a8d39f410944dcc9584c7052e2e46a4-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="8a8d39f410944dcc9584c7052e2e46a4-image.png"></p><p><img src="//img.wqkenqing.ren//file/2017/7/3fb8e3723fbd439990cd8e000c673c9b-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="3fb8e3723fbd439990cd8e000c673c9b-image.png"></p><h3 id="awk的一些常见的匹配操作"><a href="#awk的一些常见的匹配操作" class="headerlink" title="awk的一些常见的匹配操作"></a>awk的一些常见的匹配操作</h3><ul><li>awk ‘/sa/‘ file</li><li>awk ‘$2 ~ /^sa/‘ file<br>$number表示只匹配该列<br>~ 表示“是”<br>!~表示“不是”</li></ul><hr><p>至此一这就总结了一些较为基础的awk使用，就一般工作而言，已经能应对很多场景了。<br>后续我会再进行更为详细的总结<br>待续<del>~</del></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MapReduce的核心思想</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog26/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog26/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><p><code>mapreduce在hadoop中更多的承担的是计算的角色</code></p><h2 id="什么是MapReduce？"><a href="#什么是MapReduce？" class="headerlink" title="什么是MapReduce？"></a>什么是MapReduce？</h2><p>mapreduce源于谷歌公司为研究大规模数据处理而研发出的一种并行计算模型和方法。<br>它将并行编程中的难点和有相对门槛的方法进行高度封装，而给开发者一套接口，让开发者理专注于自己的业务逻辑，即可让自己的代码运行在分布式集群中，大大降低了开发一些并发程序的门槛。从字面上就可以知道，MapReduce分为Map(映射)、Reduce(规约)</p><h2 id="MapReduce的核心思想"><a href="#MapReduce的核心思想" class="headerlink" title="MapReduce的核心思想"></a>MapReduce的核心思想</h2><p>MapReduce主要是两种经典函数：</p><ul><li>映射（Mapping）将一个整体按某种规则映射成N份。并对这N份进行同一种操作。</li><li>规约（Reducing）将N份文件，按某种策略进行合并。</li></ul><h2 id="MapReduce的角色与动作"><a href="#MapReduce的角色与动作" class="headerlink" title="MapReduce的角色与动作"></a>MapReduce的角色与动作</h2><p>　 MapReduce包含四个组成部分，分别为<strong>Client</strong>、<strong>JobTracker</strong>、<strong>TaskTracker</strong>和<strong>Task</strong>，下面我们详细介绍这四个组成部分。</p><ul><li>Client：作业提交的发起者， 每一个 Job 都会在用户端通过 Client 类将应用程序以及配置参数 Configuration 打包成 JAR 文件存储在 HDFS，并把路径提交到 JobTracker 的 master 服务，然后由 master 创建每一个 Task（即 MapTask 和 ReduceTask） 将它们分发到各个 TaskTracker 服务中去执行。</li><li>JobTracker：初始化作业，分配作业，与TaskTracker通信，协调整个作业 JobTracke负责资源监控和作业调度。JobTracker 监控所有TaskTracker 与job的健康状况，一旦发现失败，就将相应的任务转移到其他节点；同时，JobTracker 会跟踪任务的执行进度、资源使用量等信息，并将这些信息告诉任务调度器，而调度器会在资源出现空闲时，选择合适的任务使用这些资源。在Hadoop 中，任务调度器是一个可插拔的模块，用户可以根据自己的需要设计相应的调度器。</li><li>TaskTracker：TaskTracker 会周期性地通过Heartbeat 将本节点上资源的使用情况和任务的运行进度汇报给JobTracker，同时接收JobTracker 发送过来的命令并执行相应的操作（如启动新任务、杀死任务等）。TaskTracker 使用“slot”等量划分本节点上的资源量。“slot”代表计算资源（CPU、内存等）。一个Task 获取到一个slot 后才有机会运行，而Hadoop 调度器的作用就是将各个TaskTracker 上的空闲slot 分配给Task 使用。slot 分为Map slot 和Reduce slot 两种，分别供Map Task 和Reduce Task 使用。TaskTracker 通过slot 数目（可配置参数）限定Task 的并发度。</li><li>Task ： Task 分为Map Task 和Reduce Task 两种，均由TaskTracker 启动。HDFS 以固定大小的block 为基本单位存储数据，而对于MapReduce 而言，其处理单位是split。</li><li>Map Task 执行过程如下图 所示：由该图可知，Map Task 先将对应的split 迭代解析成一个个key/value 对，依次调用用户 自定义的map() 函数进行处理，最终将临时结果存放到本地磁盘上, 其中临时数据被分成若干个partition，每个partition 将被一个Reduce Task 处理。<br><img src="http://img.wqkenqing.ren//file/2017/10/09d902f773ff4e30b1cf995705d4f03c-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="09d902f773ff4e30b1cf995705d4f03c-image.png"></li></ul><pre><code class="hljs">Reduce Task 执行过程下图所示。该过程分为三个阶段![2f9ff84d09cf424cb8a1c4d24db637c0-image.png](http://img.wqkenqing.ren//file/2017/10/2f9ff84d09cf424cb8a1c4d24db637c0-image.png)</code></pre><p><strong>提交作业</strong></p><ul><li>在作业提交之前，需要对作业进行配置</li><li>程序代码，主要是自己书写的MapReduce程序</li><li>输入输出路径</li><li>其他配置，如输出压缩等</li><li>配置完成后，通过JobClient来提交</li></ul><p><strong>作业的初始化</strong></p><ul><li>客户端提交完成后，JobTracker会将作业加入队列，然后进行调度，默认的调度方法是FIFO调试方式<br><strong>任务的分配</strong></li><li>TaskTracker和JobTracker之间的通信与任务的分配是通过心跳机制完成的。</li><li>TaskTracker会主动向JobTracker询问是否有作业要做，如果自己能做，那么就会申请作业任务，这个任务可以使Map，也可能是Reduce任务<br><strong>任务的执行</strong></li><li>申请到任务后，TaskTracker会做如下事情：</li><li>拷贝代码到本地</li><li>拷贝任务的信息到本地</li><li>启动Jvm运行任务<br><strong>状态与任务的更新</strong></li><li>任务在运行过程中，首先会将自己的状态汇报给TaskTracker，然后由TaskTracker汇总报给JobTracker</li><li>任务进度是通过计数器来实现的。</li></ul><p><strong>作业的完成</strong></p><ul><li>JobTracker 是在接受到最后一个任务运行完成后，才会将任务标志为成功</li><li>此时会做删除中间结果等善后处理工作<br><img src="http://img.wqkenqing.ren//file/2017/10/8fba570574f6491c96b51698743466b2-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="8fba570574f6491c96b51698743466b2-image.png"></li></ul><h3 id="MapReduce任务执行流程与数据处理流程详解"><a href="#MapReduce任务执行流程与数据处理流程详解" class="headerlink" title="MapReduce任务执行流程与数据处理流程详解"></a>MapReduce任务执行流程与数据处理流程详解</h3><p><code>就任务流程而言，上文中有些或已经涉及，有些也介绍的比较详细了。但就整体而言，不是特别具体，或这个整体性，所以在此我们再集中总结一下，即使重复内容，就也当加深印象吧。</code></p><h4 id="任务执行流程详解"><a href="#任务执行流程详解" class="headerlink" title="任务执行流程详解"></a>任务执行流程详解</h4><ol><li>通过jobClient提交当mapreduce的job提交至JobTracker<br>,提交的具体信息大致会有，conf配置内容，path，相关的Map，Reduce函数等。（数据的切片会在client上完成）</li><li>JobTracker中的Master服务会完成创建一个Task（MapTask与ReduceTask），并将这个任务加载至任务队列中，等待TaskTracker来获取。同进JobTracker会处于一种监听状态，监听所有TaskTracker与Job的健康情况。面对故障时，提供服务转移等。同时它还会记录任务的执行进度，资源的使用情况，提交至任务调度器，由调度器进行资源的调度。</li><li>TaskTracker会主动向jobTacker去询问是否有任务，如果有，就会申请到作业，作业可以是map,也可以是reduce任务。TaskTracker获取的不仅是任务，还有相关的处理代码也会copy一份至本地，然后TaskTracker再针对所分配的split进行处理。TaskTracker还会周期性地通过HearBeat将本节点上的资源的使用情况和任务的进行进度汇报给JobTracker，同时接收JobTracker发过来的相关命令并执行，</li><li>当TaskTracker中的任务完成后会上报给JobTracker,而当最后一个TaskTracker完成后，JobTracker才会将任务标志为成功，并执行一些如删除中间结果等善后工作。</li></ol><hr><p><code>从这里我们知道了mapreduce中任务执行流程，但mapreduce作为hadoop的计算框架，它对数据的处理流程我们还没明确涉及，所以接下来我们再深入了解下具体的数据处理流程</code></p><h4 id="数据处理流程详解"><a href="#数据处理流程详解" class="headerlink" title="数据处理流程详解"></a>数据处理流程详解</h4><p>这里的数据处理流程，主要指的是mapreduce执行后，Task中对split的任务具体处理的这一流程，其中还包括，数据的切片，mapTask完成后将中间结果上传等动作。下面我们来具体讨论<br>当jobClient向JobTracker提交了任务后，数据处理流程也随之开始</p><ul><li>在Client端将输入源的数据进行切片(split)，具体的切片机制参考后面</li><li>JobTracker中的MRAppMaster将每个Split信息计算出需要的MapTask的实例数量，然后向集群申请机器启动相应数量的mapTask进程</li><li>进程启动后，根据给定的数据切片范围进行数据处理，主要流程为<br>a)通过inputFormat来获取RecordReader读取数据，并形成输入的KV对<br>b)将输入KV对传递给用户定义的map（）方法，做逻辑处理，并map()方法的输出的kv对手机到缓存中(这里用到了缓存机制)<br>简而言之map中输入时要做的事是<br>1.反射构造InputFormat.<br>2.反射构造InputSplit.<br>3.创建RecordReader.<br>4.反射创建MapperRunner</li></ul><p><img src="http://img.wqkenqing.ren//file/2017/10/3a461434b0604118aad45a4d38cf3649-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="3a461434b0604118aad45a4d38cf3649-image.png"></p><p>而map输出时相对复杂，主要涉及到的有Partitioner，shuffle，sort，combiner等概念，我们就来一一讨论。<br>在map（）方法执行后，map阶段是会有处理的数据输出，正常来说，就是每个split对应的每一行。如上图MapRunner的next为false时，对输入数据的map完成，这时对存内中这些map的数据，会对其进行sort,如果我们事先设置的有combiner那么，还会对sort完的数据执行combiner(<strong>一个类reduce操作，不过是对本地数据的reduce，使用它的原则是combiner的输入不会影响到reduce计算的最终输入，例如：如果计算只是求总数，最大值，最小值可以使用combiner，但是做平均值计算使用combiner的话，最终的reduce计算结果就会出错。</strong>)，然后开始map的内容spill到磁盘中，如果频繁的spill对磁盘会带来较大的损耗和效率影响。所以引入了一个写缓冲区的概念，即每一个Map Task都拥有一个“环形缓冲区”作为Mapper输出的写缓冲区。写缓冲区大小默认为100MB（通过属性io.sort.mb调整），当写缓冲区的数据量达到一定的容量限额时（默认为80%，通过属性io.sort.spill.percent调整），后台线程开始将写缓冲区的数据溢写到本地磁盘。在数据溢写的过程中，只要写缓冲区没有被写满，Mappper依然可以将数据写出到缓冲区中；否则Mapper的执行过程将被阻塞，直到溢写结束。<br>溢写以循环的方式进行（即写缓冲区的数据量大致限额时就会执行溢写），可以通过属性mapred.local.dir指定写出的目录。<br>spill结束前 溢写线程将数据最终写出到本地磁盘之前，首先根据Reducer的数目对这部分数据进行分区（即每一个分区中的数据会被传送至同一个Reducer进行处理，分区数目与Reducer数据保持一致）即 <strong>partition</strong>，partition是一个类inputSplit()的操作，即根据有多少个ReduceTask生成多少个partition,并通过jobTracker指定给相应的ReduceTask。<br>当spill完成后，本地磁盘中会有多个溢出文件存在。在MapTask结束前，这些文件会根据相应的分区进行合并，并排序，合并可能发生多次，具体由<strong>io.sort.factor控制一次最多合并多少个文件。</strong></p><p>如果溢写文件个数超过3（通过属性min.num.spills.for.combine设置），会对合并且分区排序后的结果执行Combine过程（如果MapReduce有设置Combiner），而且combine过程在不影响最终结果的前提下可能会被执行多次；否则不会执行Combine过程（相对而言，Combine开销过大）。</p><p>注意：Map Task执行过程中，Combine可能出现在两个地方：写缓冲区溢写过程中、溢写文件合并过程中。</p><p>注意：Mapper的一条输出结果（由key、value表示）写出到写缓冲区之前，已经提前计算好相应的分区信息，即分区的过程在数据写入写缓冲区之前就已经完成，溢写过程实际是写缓冲区数据排序的过程（先按分区排序，如果分区相同时，再按键值排序）。</p><p>这里涉及到MapReduce的两个组件：Comparator、Partitioner。<br>(由于篇幅的原因，这里暂不引入对这两个组件的源码分析，和自定义方式，后面有机会则单开文章讨论)</p><p>在将map输出结果作为reducTask中的输入时，会涉及到磁盘写入，网络传输等资源的限制，所以对出于节省资源的考虑，可以在对map的输出结果进行压缩。默认情况下，压缩是不被开启的，可以通过属性<strong>mapred.compress.map.output</strong>、<strong>mapred.map.output.compression.codec</strong>进行相应设置。</p><p>当MapTask任务结束后，被指定的分区ReduceTask会立即开始执行，即开始拷贝对应MapTask分区中的输出结果。<br>Reduce Task的这个阶段被称为“Copy Phase”。Reduce Task拥有少量的线程用于并行地获取Map Tasks的输出结果，默认线程数为5，可以通过属性mapred.reduce.parallel.copies进行设置。<br>同样：如果Map Task的输出结果足够小，它会被拷贝至Reduce Task的缓冲区中；否则拷贝至磁盘。当缓冲区中的数据达到一定量（由属性mapred.job.shuffle.merge.percent、mapred.inmem.merge.threshold），这些数据将被合并且溢写到磁盘。如果Combine过程被指定，它将在合并过程被执行，用来减少需要写出到磁盘的数据量。</p><p>随着拷贝文件中磁盘上的不断积累，一个后台线程会将它们合并为更大地、有序的文件，用来节省后期的合并时间。如果Map Tasks的输出结合使用了压缩机制，则在合并的过程中需要对数据进行解压处理。</p><p>当Reduce Task的所有Map Tasks输出结果均完成拷贝，Reduce Task进入“Sort Phase”（更为合适地应该被称为“Merge Phase”，排序在Map阶段已经被执行），该阶段在保持原有顺序的情况下进行合并。这种合并是以循环方式进行的，循环次数与合并因子（io.sort.factor）有关。<br>sort phase 通常不是合并成一个文件，而是略过磁盘操作，直接将数据合并输入至Reduce方法中 这次合并的数据可以结合内存、磁盘两部分进行操作），即“Reduce Phase”。</p><p>通常这里还有一个“Group”的阶段，这个阶段决定着哪些键值对属于同一个键。如果没有特殊设置，只有在Map Task输出时那些键完全一样的数据属于同一个键，但这是可以被改变的。</p><p>描述至这里终于能引用mapreduce中相当重要的一个概念，即shuffle。这个词在这里该怎么定义，我暂未找到个一个比较满意的答案，但我比较喜欢有人把这个比作是搓完牌一桌子人，在下一局开始前的整个过程。<br>即Shuffle操作，涉及到数据的partition、sort、[combine]、spill、[comress]、[merge]、copy、[combine]、merge、group，而这些操作不但决定着程序逻辑的正确性，也决定着MapReduce的运行效率。</p><p>shuffle完后进入了ReduceTask的reduce()方法中<br>在Reduce Phase的过程中，它处理的是所有Map Tasks输出结果中某一个分区中的所有数据，这些数据整体表现为一个根据键有序的输入，对于每一个键都会相应地调用一次Reduce Function（同一个键对应的值可能有多个，这些值将作为Reduce Function的参数）</p><p>至此MapReduce的逻辑过程基本描述完成，虽然洋洋洒洒可能会有数千字，但本文的出发点就不是简析，而更多是自我概念原理部份的总结，所以力求整个流程完整详细。后面我配上一些网络图片，方便大家快速理解，结合文字加深印象。<br><img src="http://img.wqkenqing.ren//file/2017/10/b26c54ff10ad4e2b9832a960ef4aab90-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="b26c54ff10ad4e2b9832a960ef4aab90-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/a179f15b88cc403b8bd84d7963823762-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="a179f15b88cc403b8bd84d7963823762-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/4a5b5498dd764087ade380db394e6f84-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="4a5b5498dd764087ade380db394e6f84-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/74ed215c305747a49348430782e5636a-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="74ed215c305747a49348430782e5636a-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/b55be177bd514ce79b7444c2dd3ddcfb-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="b55be177bd514ce79b7444c2dd3ddcfb-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/286bb24da172471793924b2b9b7c857c-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="286bb24da172471793924b2b9b7c857c-image.png"><br><img src="http://img.wqkenqing.ren//file/2017/10/68bbc5f114f3496d886402cbb0da8fc1-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="68bbc5f114f3496d886402cbb0da8fc1-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/38d8bf9498274367b22856f62a8f7fcf-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="38d8bf9498274367b22856f62a8f7fcf-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/7b7e5da815064fdfa0d060910f8dfb9b-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="7b7e5da815064fdfa0d060910f8dfb9b-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/a4ac8a6f758b4bdfb5e1a752a02f0654-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="a4ac8a6f758b4bdfb5e1a752a02f0654-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/9e91f8a6b0ab488abbad0714487fe10f-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="9e91f8a6b0ab488abbad0714487fe10f-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/87a4d55fff15408c87f94029b8fb2aea-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="87a4d55fff15408c87f94029b8fb2aea-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/eb099e53d6fa44a5b76410040f41f3ae-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="eb099e53d6fa44a5b76410040f41f3ae-image.png"></p><p><img src="http://img.wqkenqing.ren//file/2017/10/98aac8b77be64d53b276f7a112aba12d-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="98aac8b77be64d53b276f7a112aba12d-image.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>反射小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog6/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog6/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="反射小结"><a href="#反射小结" class="headerlink" title="反射小结"></a>反射小结</h2><h3 id="什么是反射"><a href="#什么是反射" class="headerlink" title="什么是反射"></a>什么是反射</h3><p>反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。<br><code>对于反射我的理解是：正java的核心思想，万物对象，那么类的类也可被描述，如类也会有名，属性，方法的特性。皆是对类的类型的一种描述。在jvm中反射机制的存在让java也拥有了动态的特性，即我们可以在运行时才确定类的类型，即相应的方法与属性</code></p><h3 id="反射的功能"><a href="#反射的功能" class="headerlink" title="反射的功能"></a>反射的功能</h3><ul><li>在运行时获取其类的相关特性，如名称，属性，方法</li><li>可以构造一个类的对象</li><li>动态代理</li></ul><h3 id="反射的三种形式"><a href="#反射的三种形式" class="headerlink" title="反射的三种形式"></a>反射的三种形式</h3><ol><li>Class.forName(“ “);通过Class的静态方法加载相应的相对路径，获得指定的类的类型</li><li>类.class获取类的类型</li><li>实例.getClass();</li></ol><p><code>要访问私有属性，要设置setAccessible</code><br>Class cls ~~<br>Field file =cls.getDeclaredFields();</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>List学习</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog4/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog4/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h3 id="List学习"><a href="#List学习" class="headerlink" title="List学习"></a>List学习</h3><p> <code>ArrayList不是线程安全的，只能用在单线程环境下，多线程环境下可以考虑用Collections.synchronizedList(List l)函数返回一个线程安全的ArrayList类，也可以使用concurrent并发包下的CopyOnWriteArrayList类</code></p><p>ArrayList实现了Serializable接口，因此它支持序列化，能够通过序列化传输，实现了RandomAccess接口，支持快速随机访问，实际上就是通过下标序号进行快速访问，实现了Cloneable接口，能被克隆。</p><p>每个ArrayList实例都有一个容量，该容量是指用来存储列表元素的数组的大小。它总是至少等于列表的大小。随着向ArrayList中不断添加元素，其容量也自动增长。自动增长会带来数据向新数组的重新拷贝，因此，如果可预知数据量的多少，可在构造ArrayList时指定其容量。在添加大量元素前，应用程序也可以使用ensureCapacity操作来增加ArrayList实例的容量，这可以减少递增式再分配的数量。<br>每个ArrayList实例都有一个容量，该容量是指用来存储列表元素的数组的大小。它总是至少等于列表的大小。随着向ArrayList中不断添加元素，其容量也自动增长。自动增长会带来数据向新数组的重新拷贝，因此，如果可预知数据量的多少，可在构造ArrayList时指定其容量。在添加大量元素前，应用程序也可以使用ensureCapacity操作来增加ArrayList实例的容量，这可以减少递增式再分配的数量。<br>从上述代码中可以看出，数组进行扩容时，会将老数组中的元素重新拷贝一份到新的数组中，每次数组容量的增长大约是其原容量的1.5倍。这种操作的代价是很高的，因此在实际使用时，我们应该尽量避免数组容量的扩张。当我们可预知要保存的元素的多少时，要在构造ArrayList实例时，就指定其容量，以避免数组扩容的发生。或者根据实际需求，通过调用ensureCapacity方法来手动增加ArrayList实例的容量。</p><p>Object oldData[] = elementData;//为什么要用到oldData[]<br>乍一看来后面并没有用到关于oldData， 这句话显得多此一举！但是这是一个牵涉到内存管理的类， 所以要了解内部的问题。 而且为什么这一句还在if的内部，这跟elementData = Arrays.copyOf(elementData, newCapacity); 这句是有关系的，下面这句Arrays.copyOf的实现时新创建了newCapacity大小的内存，然后把老的elementData放入。好像也没有用到oldData，有什么问题呢。问题就在于旧的内存的引用是elementData， elementData指向了新的内存块，如果有一个局部变量oldData变量引用旧的内存块的话，在copy的过程中就会比较安全，因为这样证明这块老的内存依然有引用，分配内存的时候就不会被侵占掉，然后copy完成后这个局部变量的生命期也过去了，然后释放才是安全的。不然在copy的的时候万一新的内存或其他线程的分配内存侵占了这块老的内存，而copy还没有结束，这将是个严重的事情。 关于ArrayList和Vector区别如下：</p><pre><code class="hljs">ArrayList在内存不够时默认是扩展50% + 1个，Vector是默认扩展1倍。Vector提供indexOf(obj, start)接口，ArrayList没有。Vector属于线程安全级别的，但是大多数情况下不使用Vector，因为线程安全需要更大的系统开销。</code></pre><p> ArrayList还给我们提供了将底层数组的容量调整为当前列表保存的实际元素的大小的功能。它可以通过trimToSize方法来实现。代码如下：</p><p>关于ArrayList的源码，给出几点比较重要的总结：</p><pre><code class="hljs">1、注意其三个不同的构造方法。无参构造方法构造的ArrayList的容量默认为10，带有Collection参数的构造方法，将Collection转化为数组赋给ArrayList的实现数组elementData。2、注意扩充容量的方法ensureCapacity。ArrayList在每次增加元素（可能是1个，也可能是一组）时，都要调用该方法来确保足够的容量。当容量不足以容纳当前的元素个数时，就设置新的容量为旧的容量的1.5倍加1，如果设置后的新容量还不够，则直接新容量设置为传入的参数（也就是所需的容量），而后用Arrays.copyof()方法将元素拷贝到新的数组（详见下面的第3点）。从中可以看出，当容量不够时，每次增加元素，都要将原来的元素拷贝到一个新的数组中，非常之耗时，也因此建议在事先能确定元素数量的情况下，才使用ArrayList，否则建议使用LinkedList。3、ArrayList的实现中大量地调用了Arrays.copyof()和System.arraycopy()方法。我们有必要对这两个方法的实现做下深入的了解。</code></pre><p><a href="http://www.cnblogs.com/ITtangtang/p/3948555.html" target="_blank" rel="noopener">http://www.cnblogs.com/ITtangtang/p/3948555.html</a></p><p>. LinkedList是用链表结构存储数据的，很适合数据的动态插入和删除，随机访问和遍历速度比较慢。另外，接口中没有定义的方法get，remove，insertList，专门用于操作表头和表尾元素，可以当作堆栈、队列和双向队列使用。LinkedList没有同步方法。如果多个线程同时访问一个List，则必须自己实现访问同步。一种解决方法是在创建 List时构造一个同步的List：<br>             List list = Collections.synchronizedList(new LinkedList(…));</p><p>查看Java源代码，发现当数组的大小不够的时候，<br>需要重新建立数组，然后将元素拷贝到新的数组内，ArrayList和Vector的扩展数组的大小不同。</p><p><a href="http://www.tuicool.com/articles/iQZBFb" target="_blank" rel="noopener">http://www.tuicool.com/articles/iQZBFb</a></p><p><a href="http://www.cnblogs.com/azai/archive/2010/12/09/1901272.html" target="_blank" rel="noopener">http://www.cnblogs.com/azai/archive/2010/12/09/1901272.html</a></p><hr><h4 id="简化"><a href="#简化" class="headerlink" title="简化"></a>简化</h4><ul><li><p>Collections.synchronizedList(List l)</p></li><li><p>Serializable 、RandomAccess 、Cloneable</p></li><li><p>ensureCapacity</p><p>从上面的源码剖析可以看出这三种List实现的一些典型适用场景，如果经常对数组做随机插入操作，特别是插入的比较靠前，那么LinkedList的性能优势就非常明显，而如果都只是末尾插入，则ArrayList更占据优势，如果需要线程安全，则使用Vector或者创建线程安全的ArrayList。</p></li></ul><p>在使用基于数组实现的ArrayList 和Vector 时我们要指定初始容量，因为我们在源码中也看到了，在添加时首先要进行容量的判断，如果容量不够则要创建新数组，还要将原来数组中的数据复制到新数组中，这个过程会减低效率并且会浪费资源。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java中IO小结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog7/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog7/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h3 id="java中IO小结"><a href="#java中IO小结" class="headerlink" title="java中IO小结"></a>java中IO小结</h3><h4 id="File"><a href="#File" class="headerlink" title="File"></a>File</h4><p>File类,相关api</p><ul><li>createNewFiles();</li><li>mkdir();</li><li>mkdirs()</li></ul><hr><h3 id="IO流"><a href="#IO流" class="headerlink" title="IO流"></a>IO流</h3><p>按方向，分输入，输出流in、out<br>流当中有缓冲区，即stream.read(),可以一次性读取stream.read(Byte[]byte);<br>针对缓冲流还有两个方法<br>mark与reset<br>markSupported 判断该输入流能支持mark 和 reset 方法。</p><p>mark用于标记当前位置；在读取一定数量的数据(小于readlimit的数据)后使用reset可以回到mark标记的位置。</p><p>FileInputStream不支持mark/reset操作；BufferedInputStream支持此操作；</p><p>mark(readlimit)的含义是在当前位置作一个标记，制定可以重新读取的最大字节数，也就是说你如果标记后读取的字节数大于readlimit，你就再也回不到回来的位置了。</p><p>通常InputStream的read()返回-1后，说明到达文件尾，不能再读取。除非使用了mark/reset。</p><h4 id="流的类型"><a href="#流的类型" class="headerlink" title="流的类型"></a>流的类型</h4><ul><li>FileInputStream</li><li>ObjectInputStream</li><li>DataInputStream</li><li>BufferedInputStream</li><li>BufferedReader</li><li>ByteArrayInputStream</li><li>CharArrayReader</li><li>Console</li><li>FileReader</li><li>PipedInputStream</li><li>PipedReader</li><li>PushbackInputStream</li><li>StringReader</li></ul><table><thead><tr><th align="left">流的名称</th><th align="right">说明</th></tr></thead><tbody><tr><td align="left">FileInputStream</td><td align="right">FileInputStream 从文件系统中的某个文件中获得输入字节。</td></tr><tr><td align="left">ObjectInputStream</td><td align="right">ObjectInputStream 对以前使用 ObjectOutputStream 写入的基本数据和对象进行反序列化。</td></tr><tr><td align="left">DataInputStream</td><td align="right">数据输入流允许应用程序以与机器无关方式从底层输入流中读取基本 Java 数据类型。</td></tr><tr><td align="left">BufferedInputStream</td><td align="right">BufferedInputStream 为另一个输入流添加一些功能，即缓冲输入以及支持 mark 和 reset 方法的能力</td></tr><tr><td align="left">ByteArrayInputStream</td><td align="right">ByteArrayInputStream 包含一个内部缓冲区，该缓冲区包含从流中读取的字节。</td></tr><tr><td align="left">CharArrayReader</td><td align="right">此类实现一个可用作字符输入流的字符缓冲区</td></tr><tr><td align="left">Console</td><td align="right">此类包含多个方法，可访问与当前 Java 虚拟机关联的基于字符的控制台设备（如果有）。</td></tr><tr><td align="left">FileReader</td><td align="right">用来读取字符文件的便捷类</td></tr><tr><td align="left">PushbackInputStream</td><td align="right">PushbackInputStream 为另一个输入流添加性能，即“推回 (push back)”或“取消读取 (unread)”一个字节的能力。</td></tr></tbody></table><blockquote><p>Java I/O默认是不缓冲流的，所谓“缓冲”就是先把从流中得到的一块字节序列暂存在一个被称为buffer的内部字节数组里，然后你可以一下子取到这一整块的字节数据，没有缓冲的流只能一个字节一个字节读，效率孰高孰低一目了然。有两个特殊的输入流实现了缓冲功能，一个是我们常用的BufferedInputStream</p></blockquote><hr><h4 id="一些小结"><a href="#一些小结" class="headerlink" title="一些小结"></a>一些小结</h4><p><strong>带array的流自带缓冲区。支持mark与reset方法</strong><br><strong>其他的要套缓冲流</strong></p><p> 存在readLine()方法的流</p><ul><li><code>BufferReader</code></li></ul><p>read(char[],0,len)的理解<br>将len从0位开始装入char[]中，然后通过String.valueOf(char[])转换成字符串</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java中的形参与实参的理解</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog8/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog8/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h2 id="java中的形参与实参的理解"><a href="#java中的形参与实参的理解" class="headerlink" title="java中的形参与实参的理解"></a>java中的形参与实参的理解</h2><h4 id="值传递："><a href="#值传递：" class="headerlink" title="值传递："></a>值传递：</h4><p>方法调用时，实际参数把它的值传递给对应的形式参数，函数接收的是原始值的一个copy，此时内存中存在两个相等的基本类型，即实际参数和形式参数，后面方法中的操作都是对形参这个值的修改，不影响实际参数的值。</p><h4 id="引用传递："><a href="#引用传递：" class="headerlink" title="引用传递："></a>引用传递：</h4><p>也称为传地址。方法调用时，实际参数的引用(地址，而不是参数的值)被传递给方法中相对应的形式参数，函数接收的是原始值的内存地址；<br>在方法执行中，形参和实参内容相同，指向同一块内存地址，方法执行中对引用的操作将会影响到实际对象。</p><p><code>*值传递：方法调用时，实际参数将它的值传递给对应的形式参数，函数接收到的是原始值的副本，此时内存中存在两个相等的基本类型，若方法中对形参执行处理操作，并不会影响实际参数的值。</code></p><p><code>*引用传递：方法调用时，实际参数的引用（是指地址，而不是参数的值）被传递给方法中相应的形式参数，函数接收到的是原始值的内存地址，在方法中，形参与实参的内容相同，方法中对形参的处理会影响实参的值。</code></p><p>1）形参为基本类型时，对形参的处理不会影响实参。<br>2）形参为引用类型时，对形参的处理会影响实参。<br>3）String,Integer,Double等immutable类型的特殊处理，可以理解为值传递，形参操作不会影响实参对象。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>map总结</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog9/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/oldblog/blog9/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h3 id="map总结"><a href="#map总结" class="headerlink" title="map总结"></a>map总结</h3><p>Hashtable<br>├-HashMap<br>└-WeakHashMap</p><p>通用Map，用于在应用程序中管理映射，通常在 java.util 程序包中实现</p><ul><li>HashMap</li><li>Hashtable</li><li>Properties</li><li>LinkedHashMap</li><li>IdentityHashMap</li><li>TreeMap</li><li>WeakHashMap</li><li>ConcurrentHashMap</li></ul><p><strong>HashMap</strong></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart">最常用的<span class="hljs-built_in">Map</span>,它根据键的HashCode 值存储数据,根据键可以直接获取它的值，具有很快的访问速度。HashMap最多只允许一条记录的键为<span class="hljs-built_in">Null</span>(多条会覆盖);允许多条记录的值为 <span class="hljs-built_in">Null</span>。非同步的。<br></code></pre></td></tr></table></figure><p><strong>Hashtable</strong></p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs processing">与 <span class="hljs-keyword">HashMap</span>类似,不同的是:<span class="hljs-built_in">key</span>和value的值均不允许为<span class="hljs-keyword">null</span>;它支持线程的同步，即任一时刻只有一个线程能写Hashtable,因此也导致了Hashtale在写入时会比较慢。<br>LinkedHashMap<br><br>保存了记录的插入顺序，在用Iterator遍历LinkedHashMap时，先得到的记录肯定是先插入的.在遍历的时候会比<span class="hljs-keyword">HashMap</span>慢。<span class="hljs-built_in">key</span>和value均允许为空，非同步的。<br></code></pre></td></tr></table></figure><p><strong>TreeMap</strong></p><p><img src="//img.wqkenqing.ren//file/2017/7/d98ba033b20b4f48a430419e96e98fa3-image.png" srcset="/daydoc/img/loading.gif" lazyload alt="d98ba033b20b4f48a430419e96e98fa3-image.png"></p><pre><code class="hljs">+ 增强for循环使用方便，但性能较差，不适合处理超大量级的数据。+ 迭代器的遍历速度要比增强for循环快很多，是增强for循环的2倍左右。+ 使用entrySet遍历的速度要比keySet快很多，是keySet的1.5倍左右。</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>sparkstreaming 窗口操作</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/stream2/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/stream2/</url>
      
        <content type="html"><![CDATA[<p>sparkstreaming时间窗口设置</p><a id="more"></a><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>通过sparkstreaming设置窗口函数,可达到如,每10秒计算前30秒内数据的效果</p><p>如上 主要有两个参数</p><ol><li>窗口大小</li><li>滑动距离</li></ol><p>val windowedWordCounts = pairs.reduceByKeyAndWindow(_ + _, Seconds(30), Seconds(10))</p><p>如上</p><h2 id="常用api"><a href="#常用api" class="headerlink" title="常用api"></a>常用api</h2><table><thead><tr><th align="left">Transformation</th><th align="center">Meaning</th></tr></thead><tbody><tr><td align="left">window(windowLength, slideInterval)</td><td align="center">Return a new DStream which is computed based on windowed batches of the source DStream.</td></tr><tr><td align="left">countByWindow(windowLength,slideInterval)</td><td align="center">Return a sliding window count of elements in the stream.</td></tr><tr><td align="left">reduceByWindow(func, windowLength,slideInterval)</td><td align="center"></td></tr><tr><td align="left">reduceByKeyAndWindow(func,windowLength, slideInterval, [numTasks])</td><td align="center"></td></tr><tr><td align="left">reduceByKeyAndWindow(func, invFunc,windowLength, slideInterval, [numTasks])</td><td align="center"></td></tr><tr><td align="left">countByValueAndWindow(windowLength,slideInterval, [numTasks])</td><td align="center"></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> sparkstreaming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宽窄依赖</title>
      <link href="/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/%E5%AE%BD%E7%AA%84%E4%BE%9D%E8%B5%96/"/>
      <url>/daydoc/2019/07/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/%E5%AE%BD%E7%AA%84%E4%BE%9D%E8%B5%96/</url>
      
        <content type="html"><![CDATA[<p>spark依赖说明</p><a id="more"></a><h2 id="种类"><a href="#种类" class="headerlink" title="种类"></a>种类</h2><p>spark的依赖关系大致有两类</p><ul><li>narrow dependency</li><li>wide dependency</li></ul><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><h3 id="narrow-dependency"><a href="#narrow-dependency" class="headerlink" title="narrow dependency"></a>narrow dependency</h3><p>父Partition ===&gt; 子partition 多对一或一对一   flatMap ,mapToPair ,map ,filter等算子<br>父partition ===&gt; 子partition 一对多          reduce ,group by 等.</p><h3 id="stage"><a href="#stage" class="headerlink" title="stage"></a>stage</h3><p>当一个dag串联遇到宽依赖时形成stage.一个stage对应一个task.这个task的并行度由最后一个依赖决定.应该就是说由wide dependency 的具体并行度决度.如<br>reduce ,partition=3.就3的并行度.这里的参数可以设置.</p><p>wide dependency 必定对应的有shuffle.但shuffle不一定是wide dependency  如sort orderby</p><p>join 即可能发生shuffle也可能不,具体看情况.</p><h3 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h3><p>一个stage划分好后.一条数据的具体运算逻辑是会一直走完所有计算逻辑后才会落地.这是与mapreduce的区别<br>mapreduce是计算逻辑走完落地,再启动,计算又落地.</p><p>所以说spark的效率比mapreduce高也是有这个原因.dag串联后,运算优先.</p>]]></content>
      
      
      
        <tags>
            
            <tag> spark dependency </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>updateStateByKey&amp;mapStateWithKey</title>
      <link href="/daydoc/2019/07/15/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/stream/"/>
      <url>/daydoc/2019/07/15/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/stream/</url>
      
        <content type="html"><![CDATA[<p>spark中如何实现全局count</p><a id="more"></a><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>两种方式都可以实现对同一key的累计统计</p><p>区别<br>updateStateByKey会返回无增量数据的状态,所以会相对较大的数据资源开销<br>mapStateWithKey 相当于增量统计</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>updateStateByKey :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Function2&lt;List&lt;Integer&gt;, Optional&lt;Integer&gt;, Optional&lt;Integer&gt;&gt; updateFunctionByUpdate() &#123;<br>       Function2&lt;List&lt;Integer&gt;, Optional&lt;Integer&gt;, Optional&lt;Integer&gt;&gt; updateFunction = (values, s1) -&gt; &#123;<br>           Integer newSum = <span class="hljs-number">0</span>;<br>           <span class="hljs-keyword">if</span> (s1.isPresent()) &#123;<br>               newSum = s1.get();<br>           &#125;<br><br>           Iterator&lt;Integer&gt; i = values.iterator();<br>           <span class="hljs-keyword">while</span> (i.hasNext()) &#123;<br>               newSum += i.next();<br>           &#125;<br>           <span class="hljs-keyword">return</span> Optional.of(newSum);<br>       &#125;;<br>       <span class="hljs-keyword">return</span> updateFunction;<br>   &#125;<br></code></pre></td></tr></table></figure><p>mapStateWithKey :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Function3&lt;String, Optional&lt;Integer&gt;, State&lt;Integer&gt;, Tuple2&lt;String, Integer&gt;&gt; updateFunctionByMap() &#123;<br>       Function3&lt;String, Optional&lt;Integer&gt;, State&lt;Integer&gt;, Tuple2&lt;String, Integer&gt;&gt; updateFunction2 = (word, one,<br>                                                                                                        state) -&gt; &#123;<br>           <span class="hljs-keyword">int</span> sum = one.or(<span class="hljs-number">0</span>) + (state.exists() ? state.get() : <span class="hljs-number">0</span>);<br>           Tuple2&lt;String, Integer&gt; output = <span class="hljs-keyword">new</span> Tuple2&lt;String, Integer&gt;(word, sum);<br>           state.update(sum);<br>           <span class="hljs-keyword">return</span> output;<br>       &#125;;<br>       <span class="hljs-keyword">return</span> updateFunction2;<br>   &#125;<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> sparkstream </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>flume记录</title>
      <link href="/daydoc/2019/06/19/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flume/Flume/"/>
      <url>/daydoc/2019/06/19/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/%E5%A4%A7%E6%95%B0%E6%8D%AE/flume/Flume/</url>
      
        <content type="html"><![CDATA[<p>flume几种source and sink实际操作</p><a id="more"></a><h2 id="soruce"><a href="#soruce" class="headerlink" title="soruce"></a>soruce</h2><p>flume自身就支持多种source.<br>chanel这里暂用mem<br>sink to hdfs</p><p>简单测试几种source</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs properties"><br><span class="hljs-comment"># 配置Agent</span><br><span class="hljs-meta">a1.sources</span> = <span class="hljs-string">r1</span><br><span class="hljs-meta">a1.sinks</span> = <span class="hljs-string">k1</span><br><span class="hljs-meta">a1.channels</span> = <span class="hljs-string">c1</span><br><br><span class="hljs-comment"># 配置Source</span><br><span class="hljs-meta">a1.sources.r1.type</span> = <span class="hljs-string">exec</span><br><span class="hljs-meta">a1.sources.r1.channels</span> = <span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sources.r1.deserializer.outputCharset</span> = <span class="hljs-string">UTF-8</span><br><br><span class="hljs-comment"># 配置需要监控的日志输出目录</span><br><span class="hljs-meta">a1.sources.r1.command</span> = <span class="hljs-string">tail</span><br><br><span class="hljs-comment"># 配置Sink</span><br><span class="hljs-meta">a1.sinks.k1.type</span> = <span class="hljs-string">hdfs</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.useLocalTimeStamp</span> = <span class="hljs-string">true</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.path</span> = <span class="hljs-string">hdfs://namenode:9000/flume/events/%Y-%m</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.filePrefix</span> = <span class="hljs-string">%Y-%m-%d-%H</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.fileSuffix</span> = <span class="hljs-string">.log</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.minBlockReplicas</span> = <span class="hljs-string">1</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.fileType</span> = <span class="hljs-string">DataStream</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.writeFormat</span> = <span class="hljs-string">Text</span><br><span class="hljs-comment">#a1.sinks.k1.hdfs.rollInterval = 86400</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.rollSize</span> =<span class="hljs-string">0</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.rollCount</span> =<span class="hljs-string">0</span><br><span class="hljs-comment">#a1.sinks.k1.hdfs.idleTimeout = 0</span><br><br><span class="hljs-comment"># 配置Channel</span><br><span class="hljs-meta">a1.channels.c1.type</span> = <span class="hljs-string">memory</span><br><span class="hljs-meta">a1.channels.c1.capacity</span> = <span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c1.transactionCapacity</span> = <span class="hljs-string">100</span><br><br><span class="hljs-comment"># 将三者连接</span><br><span class="hljs-meta">a1.sources.r1.channel</span> = <span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sinks.k1.channel</span> = <span class="hljs-string">c1</span><br></code></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>flume-ng agent -c /etc/flume-ng/conf/ -f kafka.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f demo2.conf -n a1 -Dflume.root.logger=INFO,console<br>16228</p><h2 id="解决Flume采集数据时在HDFS上产生大量小文件的问题"><a href="#解决Flume采集数据时在HDFS上产生大量小文件的问题" class="headerlink" title="解决Flume采集数据时在HDFS上产生大量小文件的问题"></a>解决Flume采集数据时在HDFS上产生大量小文件的问题</h2><p>以上conf为例</p><p>a1为agent的名称<br>demo.conf为flume配置文件的名称<br>-c指向log4j.properties文件和flume_env.sh文件所在目录。<br>–Dflume.root.logger=INFO,console 在终端输出运行日志</p><p>查阅flume配置参数，如下：</p><p>rollSize<br>默认值：1024，当临时文件达到该大小（单位：bytes）时，滚动成目标文件。如果设置成0，则表示不根据临时文件大小来滚动文件。</p><p>rollCount<br>默认值：10，当events数据达到该数量时候，将临时文件滚动成目标文件，如果设置成0，则表示不根据events数据来滚动文件。</p><p>round<br>默认值：false，是否启用时间上的”舍弃”，类似于”四舍五入”，如果启用，则会影响除了%t的其他所有时间表达式；</p><p>roundValue<br>默认值：1，时间上进行“舍弃”的值；</p><p>roundUnit</p><p>默认值：seconds，时间上进行”舍弃”的单位，包含：second,minute,hour</p><p>当设置了round、roundValue、roundUnit参数收，需要在sink指定的HDFS路径上指定按照时间生成的目录的格式，例如有需求，每采集1小时就在HDFS目录上生成一个目录，里面存放这1小时内采集到的数据。</p><h2 id="flume-file-to-avro"><a href="#flume-file-to-avro" class="headerlink" title="flume file to avro"></a>flume file to avro</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">#########a1 agent#####</span><br><span class="hljs-meta">a1.sources</span> = <span class="hljs-string">r1</span><br><span class="hljs-meta">a1.sinks</span> = <span class="hljs-string">k1</span><br><span class="hljs-meta">a1.channels</span> = <span class="hljs-string">c1</span><br><br><span class="hljs-comment"># 配置Source</span><br><span class="hljs-meta">a1.sources.r1.type</span> = <span class="hljs-string">exec</span><br><span class="hljs-meta">a1.sources.r1.channels</span> = <span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sources.r1.deserializer.outputCharset</span> = <span class="hljs-string">UTF-8</span><br><span class="hljs-meta">a1.sources.r1.command</span> = <span class="hljs-string">cat  /data/upload/theme_item_pool.csv</span><br><br><span class="hljs-comment"># 配置需要监控的日志输出目录</span><br><span class="hljs-meta">a1.channels.c1.type</span> = <span class="hljs-string">memory</span><br><span class="hljs-meta">a1.channels.c1.capacity</span> = <span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c1.transactionCapacity</span> = <span class="hljs-string">100</span><br><br><span class="hljs-meta">a1.sinks.k1.type</span> = <span class="hljs-string">avro</span><br><span class="hljs-meta">a1.sinks.k1.hostname</span> = <span class="hljs-string">namenode</span><br><span class="hljs-meta">a1.sinks.k1.port</span> = <span class="hljs-string">4444</span><br><span class="hljs-meta">a1.sinks.k1.requiredAcks</span> = <span class="hljs-string">1</span><br><span class="hljs-meta">a1.sinks.k1.channel</span> = <span class="hljs-string">c1</span><br></code></pre></td></tr></table></figure><h2 id="flume-avro-to-kafka"><a href="#flume-avro-to-kafka" class="headerlink" title="flume avro to kafka"></a>flume avro to kafka</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">#########a1 agent#####</span><br><span class="hljs-meta">a1.sources</span> = <span class="hljs-string">r1</span><br><span class="hljs-meta">a1.sinks</span> = <span class="hljs-string">k1</span><br><span class="hljs-meta">a1.channels</span> = <span class="hljs-string">c1</span><br><br><span class="hljs-comment"># 配置Source</span><br><span class="hljs-meta">a1.sources.r1.type</span> = <span class="hljs-string">exec</span><br><span class="hljs-meta">a1.sources.r1.channels</span> = <span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sources.r1.deserializer.outputCharset</span> = <span class="hljs-string">UTF-8</span><br><span class="hljs-meta">a1.sources.r1.command</span> = <span class="hljs-string">cat  /data/upload/theme_item_pool.csv</span><br><br><span class="hljs-comment"># 配置需要监控的日志输出目录</span><br><span class="hljs-meta">a1.channels.c1.type</span> = <span class="hljs-string">memory</span><br><span class="hljs-meta">a1.channels.c1.capacity</span> = <span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c1.transactionCapacity</span> = <span class="hljs-string">100</span><br><br><span class="hljs-meta">a1.sinks.k1.type</span> = <span class="hljs-string">avro</span><br><span class="hljs-meta">a1.sinks.k1.hostname</span> = <span class="hljs-string">namenode</span><br><span class="hljs-meta">a1.sinks.k1.port</span> = <span class="hljs-string">4444</span><br><span class="hljs-meta">a1.sinks.k1.requiredAcks</span> = <span class="hljs-string">1</span><br><span class="hljs-meta">a1.sinks.k1.channel</span> = <span class="hljs-string">c1</span><br></code></pre></td></tr></table></figure><h2 id="avro-source"><a href="#avro-source" class="headerlink" title="avro source"></a>avro source</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">#test avro sources</span><br><span class="hljs-meta">a1.sources</span>=<span class="hljs-string">r1</span><br><span class="hljs-meta">a1.channels</span>=<span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sinks</span>=<span class="hljs-string">k1</span><br><br><span class="hljs-meta">a1.sources.r1.type</span> = <span class="hljs-string">avro</span><br><span class="hljs-meta">a1.sources.r1.channels</span>=<span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sources.r1.bind</span>=<span class="hljs-string">localhost</span><br><span class="hljs-meta">a1.sources.r1.port</span>=<span class="hljs-string">55555</span><br><br><span class="hljs-comment">#Use a channel which buffers events in memory</span><br><span class="hljs-meta">a1.channels.c1.type</span> = <span class="hljs-string">memory</span><br><span class="hljs-meta">a1.channels.c1.capacity</span>=<span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c1.transactionCapacity</span> = <span class="hljs-string">100</span><br><br><span class="hljs-comment">#sink配置</span><br><span class="hljs-meta">a1.sinks.k1.type</span> = <span class="hljs-string">hdfs</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.useLocalTimeStamp</span> = <span class="hljs-string">true</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.path</span> = <span class="hljs-string">hdfs://namenode:8020/flume/events/%Y-%m</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.filePrefix</span> = <span class="hljs-string">%Y-%m-%d-%H</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.fileSuffix</span> = <span class="hljs-string">.log</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.minBlockReplicas</span> = <span class="hljs-string">1</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.fileType</span> = <span class="hljs-string">DataStream</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.writeFormat</span> = <span class="hljs-string">Text</span><br><span class="hljs-comment">#a1.sinks.k1.hdfs.rollInterval = 86400</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.rollSize</span> =<span class="hljs-string">0</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.rollCount</span> =<span class="hljs-string">0</span><br><span class="hljs-comment">#a1.sinks.k1.hdfs.idleTimeout = 0</span><br><span class="hljs-meta">a1.sinks.k1.channel</span> = <span class="hljs-string">c1</span><br></code></pre></td></tr></table></figure><h2 id="avro-to-file"><a href="#avro-to-file" class="headerlink" title="avro to file"></a>avro to file</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">#test avro sources</span><br><span class="hljs-meta">a1.sources</span>=<span class="hljs-string">r1</span><br><span class="hljs-meta">a1.channels</span>=<span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sinks</span>=<span class="hljs-string">k1</span><br><br><span class="hljs-meta">a1.sources.r1.type</span> = <span class="hljs-string">exec</span><br><span class="hljs-meta">a1.sources.r1.channels</span> = <span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sources.r1.deserializer.outputCharset</span> = <span class="hljs-string">UTF-8</span><br><span class="hljs-meta">a1.sources.r1.command</span> =<span class="hljs-string">curl http://192.168.10.104:8088/ws/v1/cluster/apps</span><br><br><span class="hljs-comment">#Use a channel which buffers events in memory</span><br><span class="hljs-meta">a1.channels.c1.type</span> = <span class="hljs-string">memory</span><br><span class="hljs-meta">a1.channels.c1.capacity</span>=<span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c1.transactionCapacity</span> = <span class="hljs-string">100</span><br><br><span class="hljs-comment">#sink配置</span><br><br><span class="hljs-meta">a1.sinks.k1.type</span>=<span class="hljs-string">file_roll</span><br><br><span class="hljs-meta">a1.sinks.k1.channel</span>=<span class="hljs-string">c1</span><br><br><span class="hljs-meta">a1.sinks.k1.sink.directory</span>=<span class="hljs-string">/data/hadoop/flume-ng/config/log</span><br></code></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment">### 多个sink</span><br><br><span class="hljs-comment">#test avro sources</span><br><span class="hljs-meta">a1.sources</span>=<span class="hljs-string">r1</span><br><span class="hljs-meta">a1.channels</span>=<span class="hljs-string">c1 c2</span><br><span class="hljs-meta">a1.sinks</span>=<span class="hljs-string">k1 k2</span><br><br><br><span class="hljs-meta">a1.sources.r1.type</span> = <span class="hljs-string">netcat</span><br><span class="hljs-meta">a1.sources.r1.bind</span>=<span class="hljs-string">192.168.10.101</span><br><span class="hljs-meta">a1.sources.r1.port</span>=<span class="hljs-string">55555</span><br><span class="hljs-meta">a1.sources.r1.channels</span> = <span class="hljs-string">c1 c2</span><br><br><span class="hljs-comment">#Use a channel which buffers events in memory</span><br><span class="hljs-meta">a1.channels.c1.type</span> = <span class="hljs-string">memory</span><br><span class="hljs-meta">a1.channels.c1.capacity</span>=<span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c1.transactionCapacity</span> = <span class="hljs-string">100</span><br><br><span class="hljs-comment">###channel2</span><br><span class="hljs-meta">a1.channels.c2.type</span> = <span class="hljs-string">memory</span><br><span class="hljs-meta">a1.channels.c2.capacity</span>=<span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c2.transactionCapacity</span> = <span class="hljs-string">100</span><br><br><br><span class="hljs-comment">#sink配置</span><br><br><span class="hljs-comment">#a1.sinks.k1.type=logger</span><br><span class="hljs-meta">a1.sinks.k1.type</span>=<span class="hljs-string">file_roll</span><br><span class="hljs-meta">a1.sinks.k1.channel</span>=<span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sinks.k1.sink.directory</span>=<span class="hljs-string">/data/hadoop/flume-ng/config/log</span><br><br><span class="hljs-comment">###sink2</span><br><span class="hljs-meta">a1.sinks.k2.type</span> = <span class="hljs-string">org.apache.flume.sink.kafka.KafkaSink</span><br><span class="hljs-meta">a1.sinks.k2.brokerList</span> = <span class="hljs-string">namenode:9092</span><br><span class="hljs-meta">a1.sinks.k2.topic</span> = <span class="hljs-string">carstream</span><br><span class="hljs-meta">a1.sinks.k2.batchSize</span> = <span class="hljs-string">100</span><br><span class="hljs-meta">a1.sinks.k2.requiredAcks</span> = <span class="hljs-string">1</span><br><span class="hljs-meta">a1.sinks.k2.channel</span>=<span class="hljs-string">c2</span><br></code></pre></td></tr></table></figure><h2 id="目录变化"><a href="#目录变化" class="headerlink" title="目录变化"></a>目录变化</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs properties"><br><span class="hljs-meta">a1.sources</span>=<span class="hljs-string">r1</span><br><span class="hljs-meta">a1.channels</span>=<span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sinks</span>=<span class="hljs-string">k1</span><br><br><span class="hljs-meta">a1.sources.r1.type</span> = <span class="hljs-string">spooldir</span><br><span class="hljs-meta">a1.sources.r1.spoolDir</span> = <span class="hljs-string">/data/hadoop/flume-ng/config/log</span><br><span class="hljs-meta">a1.sources.r1.fileHeader</span> = <span class="hljs-string">true</span><br><span class="hljs-meta">a1.sources.r1.channels</span> = <span class="hljs-string">c1</span><br><br><span class="hljs-comment">#Use a channel which buffers events in memory</span><br><span class="hljs-meta">a1.channels.c1.type</span> = <span class="hljs-string">memory</span><br><span class="hljs-meta">a1.channels.c1.capacity</span>=<span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c1.transactionCapacity</span> = <span class="hljs-string">100</span><br><br><span class="hljs-meta">a1.sinks.k1.type</span>=<span class="hljs-string">logger</span><br><span class="hljs-meta">a1.sinks.k1.channel</span>=<span class="hljs-string">c1</span><br></code></pre></td></tr></table></figure><h2 id="tailDir"><a href="#tailDir" class="headerlink" title="tailDir"></a>tailDir</h2><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs properties"><br><span class="hljs-comment"># in this case called 'a1'</span><br><br><span class="hljs-meta">a1.sources</span> = <span class="hljs-string">s1</span><br><span class="hljs-meta">a1.channels</span> = <span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sinks</span> = <span class="hljs-string">k1</span><br><br><span class="hljs-comment"># For each one of the sources, the type is defined</span><br><span class="hljs-meta">a1.sources.s1.type</span> = <span class="hljs-string">org.apache.flume.source.taildir.TaildirSource</span><br><span class="hljs-meta">a1.sources.s1.positionFile</span> = <span class="hljs-string">/opt/cdhmoduels/apache-flume-1.5.0-cdh5.3.6-bin/taidir/dirsource/taildir_position.json</span><br><span class="hljs-meta">a1.sources.s1.filegroups</span> = <span class="hljs-string">f1</span><br><span class="hljs-meta">a1.sources.s1.filegroups.f1</span> = <span class="hljs-string">/data/hadoop/flume-ng/log/</span><br><br><span class="hljs-comment"># The channel can be defined as follows.</span><br><span class="hljs-meta">a1.sources.s1.channels</span> = <span class="hljs-string">c1</span><br><span class="hljs-meta">a1.sinks.k1.channel</span> = <span class="hljs-string">c1</span><br><br><span class="hljs-comment"># Each sink's type must be defined</span><br><span class="hljs-meta">a1.sinks.k1.type</span> = <span class="hljs-string">hdfs</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.path</span> = <span class="hljs-string">/flume/event/taildir</span><br><span class="hljs-meta">a1.sinks.k1.hdfs.filePrefix</span> = <span class="hljs-string">hive-log</span><br><span class="hljs-comment">#Specify the channel the sink should use</span><br><br><span class="hljs-comment"># Each channel's type is defined.</span><br><span class="hljs-meta">a1.channels.c1.type</span> = <span class="hljs-string">memory</span><br><br><span class="hljs-comment"># Other config values specific to each type of channel(sink or source)</span><br><span class="hljs-comment"># can be defined as well</span><br><span class="hljs-comment"># In this case, it specifies the capacity of the memory channel</span><br><span class="hljs-meta">a1.channels.c1.capacity</span> = <span class="hljs-string">1000</span><br><span class="hljs-meta">a1.channels.c1.transactionCapacity</span> = <span class="hljs-string">1000</span><br></code></pre></td></tr></table></figure><h2 id="操作记录"><a href="#操作记录" class="headerlink" title="操作记录"></a>操作记录</h2><p>flume-ng avro-client -c conf -H localhost -p 55555  -F /data/upload/trip_coord.csv</p><p>/data/upload/trip_coord.csv</p><p>flume-ng agent -c /etc/flume-ng/conf/ -f avro.conf -n a1 -Dflume.root.logger=INFO,console</p><p>flume-ng agent -c /etc/flume-ng/conf/ -f avro2.conf -n a1 -Dflume.root.logger=INFO,console</p><p>flume-ng agent -c /etc/flume-ng/conf/ -f curl.conf -n a1 -Dflume.root.logger=INFO,console</p><p>flume-ng agent -c /etc/flume-ng/conf/ -f self2.conf -n a1 -Dflume.root.logger=INFO,console</p><p>flume-ng agent -c /etc/flume-ng/conf/ -f kafka.conf -n a1 -Dflume.root.logger=INFO,console</p><p>flume-ng agent -c /etc/flume-ng/conf/ -f tcp_logger.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f avro3.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f tcp_hdfs.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f avro.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f avro2.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f tcp.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f tcp4.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f syslog.conf -n a1 -Dflume.root.logger=INFO,console</p><p>flume-ng agent -c /etc/flume-ng/conf/ -f http_logger.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f api_logger.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f api_logger_twosink.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f kafka.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f demo4.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f tcp.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f tcp_two_sink.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f spool.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f taildir.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f udp.conf -n a1 -Dflume.root.logger=INFO,console<br>flume-ng agent -c /etc/flume-ng/conf/ -f udp_two_sink.conf -n a1 -Dflume.root.logger=INFO,console</p><hr><p>2020-7-22</p><p>docker run –restart=unless-stopped  -d -p 9200:9200 -p 9300:9300 -e “discovery.type=single-node”  –name=”hankoues” elasticsearch:7.1.0</p><p>docker pull docker.io/cerebro<br>docker pull docker.io/cerebro</p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Yarn配置细节</title>
      <link href="/daydoc/2019/06/13/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/Yarn%E9%85%8D%E7%BD%AE/"/>
      <url>/daydoc/2019/06/13/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/Yarn%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h1 id="Yarn配置细节"><a href="#Yarn配置细节" class="headerlink" title="Yarn配置细节"></a>Yarn配置细节</h1><p>##内存,核数设置</p><!-- more --><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br>      <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.resource.memory-mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>4096<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.scheduler.minimum-allocation-mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>1024<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.scheduler.maximum-allocation-mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>3072<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!--该配置用于配置任务请求时的资源. --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.app.mapreduce.am.resource.mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>2048<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.app.mapreduce.am.command-opts<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>-Xmx3276m<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.resource.cpu-vcores<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.scheduler.maximum-allocation-vcores<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>flume记录</title>
      <link href="/daydoc/2019/06/13/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/flume%E8%AE%B0%E5%BD%95/"/>
      <url>/daydoc/2019/06/13/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/flume%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>此处简介</p><a id="more"></a><h1 id="flume记录"><a href="#flume记录" class="headerlink" title="flume记录"></a>flume记录</h1><h2 id="from-kafka"><a href="#from-kafka" class="headerlink" title="from kafka"></a>from kafka</h2><!-- more --><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs stylus">a1<span class="hljs-selector-class">.sources</span> = source1<br><br>a1<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.type</span> = org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flume</span><span class="hljs-selector-class">.source</span><span class="hljs-selector-class">.kafka</span>.KafkaSource<br><br>a1<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.channels</span> = c1<br><br>a1<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.batchSize</span> = <span class="hljs-number">5000</span><br><br>a1<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.batchDurationMillis</span> = <span class="hljs-number">2000</span><br>a1<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.zookeeperConnect</span> = localhost:<span class="hljs-number">2181</span><br><br><span class="hljs-selector-id">#a1</span><span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.kafka</span><span class="hljs-selector-class">.brokerList</span> = localhost:<span class="hljs-number">9092</span><br>a1<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.kafka</span><span class="hljs-selector-class">.bootstrap</span><span class="hljs-selector-class">.servers</span> = localhost:<span class="hljs-number">9092</span><br>a1<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.topic</span> = flumetest<br>a1<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.source1</span><span class="hljs-selector-class">.kafka</span><span class="hljs-selector-class">.consumer</span><span class="hljs-selector-class">.group</span><span class="hljs-selector-class">.id</span> = custom<span class="hljs-selector-class">.g</span>.id<br><br><br><br>a1<span class="hljs-selector-class">.channels</span> = c1<br><br>a1<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span><span class="hljs-selector-class">.type</span> = memory<br><br>a1<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span><span class="hljs-selector-class">.capacity</span> = <span class="hljs-number">10000</span><br><br>a1<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span><span class="hljs-selector-class">.transactionCapacity</span> = <span class="hljs-number">10000</span><br><br>a1<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span><span class="hljs-selector-class">.byteCapacityBufferPercentage</span> = <span class="hljs-number">20</span><br><br>a1<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span><span class="hljs-selector-class">.byteCapacity</span> = <span class="hljs-number">800000</span><br><br><br><br>a1<span class="hljs-selector-class">.sinks</span> = k1<br><br>a1<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span><span class="hljs-selector-class">.type</span> = file_roll<br><br>a1<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span><span class="hljs-selector-class">.channel</span> = c1<br><br>a1<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span><span class="hljs-selector-class">.sink</span><span class="hljs-selector-class">.directory</span> = /home/hadoop/testfile/flume<br></code></pre></td></tr></table></figure><p>这里也有版本匹配的问题.经过多番尝试,这里的组合版本是flume1.6+kafka_2.11-2.2.0.tgz<br>其它版本可能会有request header 问题.<br>另外还遇到了指定topic 和 zookeeper的问题.</p><p>执行语句:flume-ng agent -n a1 -c conf -f kafka.properties -Dflume.root.logger=INFO,console</p><h2 id="flume-采集到kafka"><a href="#flume-采集到kafka" class="headerlink" title="flume 采集到kafka"></a>flume 采集到kafka</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs stylus">agent.sources=r1<br>agent.sinks=k1<br>agent.channels=c1<br><br>agent<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.r1</span>.type=exec<br>agent<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.r1</span>.command=tail /root/tomcat/logs/catalina.out<br>agent<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.r1</span>.restart=true<br>agent<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.r1</span>.batchSize=<span class="hljs-number">1000</span><br>agent<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.r1</span>.batchTimeout=<span class="hljs-number">3000</span><br>agent<span class="hljs-selector-class">.sources</span><span class="hljs-selector-class">.r1</span>.channels=c1<br><br>agent<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span>.type=memory<br>agent<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span>.capacity=<span class="hljs-number">102400</span><br>agent<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span>.transactionCapacity=<span class="hljs-number">1000</span><br><br>agent<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span>.byteCapacity=<span class="hljs-number">134217728</span><br>agent<span class="hljs-selector-class">.channels</span><span class="hljs-selector-class">.c1</span>.byteCapacityBufferPercentage=<span class="hljs-number">80</span><br><br>agent<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span>.channel=c1<br>agent<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span>.type=org<span class="hljs-selector-class">.apache</span><span class="hljs-selector-class">.flume</span><span class="hljs-selector-class">.sink</span><span class="hljs-selector-class">.kafka</span>.KafkaSink<br>agent<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span><span class="hljs-selector-class">.kafka</span>.topic=sparkstreaming<br>agent<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span><span class="hljs-selector-class">.kafka</span>.zookeeperConnect=<span class="hljs-number">47.102</span>.<span class="hljs-number">199.215</span>:<span class="hljs-number">2181</span><br><span class="hljs-selector-id">#agent</span><span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span><span class="hljs-selector-class">.kafka</span><span class="hljs-selector-class">.bootstrap</span>.servers=<span class="hljs-number">47.102</span>.<span class="hljs-number">199.215</span>:<span class="hljs-number">9092</span><br>agent<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span><span class="hljs-selector-class">.kafka</span><span class="hljs-selector-class">.brokerList</span> =<span class="hljs-number">47.102</span>.<span class="hljs-number">199.215</span>:<span class="hljs-number">9092</span><br>agent<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span><span class="hljs-selector-class">.serializer</span>.class=kafka<span class="hljs-selector-class">.serializer</span>.StringEncoder<br>agent<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span>.flumeBatchSize=<span class="hljs-number">1000</span><br>agent<span class="hljs-selector-class">.sinks</span><span class="hljs-selector-class">.k1</span>.useFlumeEventFormat=true<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SparkSql</title>
      <link href="/daydoc/2019/06/13/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/sql/SparkSql/"/>
      <url>/daydoc/2019/06/13/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/sql/SparkSql/</url>
      
        <content type="html"><![CDATA[<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">spark</span> sql 相关内容<br></code></pre></td></tr></table></figure><a id="more"></a><h1 id="sparksql"><a href="#sparksql" class="headerlink" title="sparksql"></a>sparksql</h1>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CDH搭建细节</title>
      <link href="/daydoc/2019/05/27/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/CDH/%E6%90%AD%E5%BB%BA/"/>
      <url>/daydoc/2019/05/27/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/CDH/%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>…..</p><a id="more"></a><h2 id="CDH安装准备"><a href="#CDH安装准备" class="headerlink" title="CDH安装准备"></a>CDH安装准备</h2><p><img src="http://img.wqkenqing.ren/Ibp691.png" srcset="/daydoc/img/loading.gif" lazyload alt=""></p><p>ubuntu ulimit</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>spark操作.md</title>
      <link href="/daydoc/2019/05/17/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/spark%E6%93%8D%E4%BD%9C/"/>
      <url>/daydoc/2019/05/17/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/spark/spark%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>spark编程积累</p><a id="more"></a><h1 id="spark编程"><a href="#spark编程" class="headerlink" title="spark编程"></a>spark编程</h1><h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><h3 id="hdfs"><a href="#hdfs" class="headerlink" title="hdfs"></a>hdfs</h3><p>操作hdfs比较常规,直接通过<br>context.textfile(path) //即可实现</p><h3 id="hbase"><a href="#hbase" class="headerlink" title="hbase"></a>hbase</h3><p>hbase 则要通过newAPIHadoopRDD来实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>JavaPairRDD&lt;ImmutableBytesWritable, Result&gt; javaRDD = jsc.newAPIHadoopRDD(HbaseOperate.getConf(), TableInputFormat<span class="hljs-class">.<span class="hljs-keyword">class</span>, <span class="hljs-title">ImmutableBytesWritable</span>.<span class="hljs-title">class</span>, <span class="hljs-title">Result</span>.<span class="hljs-title">class</span>)</span>;<br></code></pre></td></tr></table></figure><p>这里要特别说明的是,这里的conf承担了更多的责任,如指定表名,指定scan传输字符串等.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><br>Configuration hconf = HbaseOperate.getConf();<br>    Scan scan = <span class="hljs-keyword">new</span> Scan();<br>    hconf.set(TableInputFormat.INPUT_TABLE, <span class="hljs-string">"company"</span>);<br>    hconf.set(TableInputFormat.SCAN, convertScanToString(scan));<br></code></pre></td></tr></table></figure><p>参考以上这段代码</p><p>另</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">static</span> String <span class="hljs-title">convertScanToString</span><span class="hljs-params">(Scan scan)</span> <span class="hljs-keyword">throws</span> IOException </span>&#123;<br>     ClientProtos.Scan proto = ProtobufUtil.toScan(scan);<br>     <span class="hljs-keyword">return</span> Base64.encodeBytes(proto.toByteArray());<br> &#125;<br></code></pre></td></tr></table></figure><p>以上是为实现scan指令传输字符的封装.</p><p>两者底层都是通过persist实现</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hbaes操作</title>
      <link href="/daydoc/2019/05/17/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/hadoop/hbase/hbase%E6%93%8D%E4%BD%9C/"/>
      <url>/daydoc/2019/05/17/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/hadoop/hbase/hbase%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>对hbase常规api进行封装</p><a id="more"></a><h1 id="hbase日常api类封装"><a href="#hbase日常api类封装" class="headerlink" title="hbase日常api类封装"></a>hbase日常api类封装</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 常规api封装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop高可用模式搭建</title>
      <link href="/daydoc/2019/05/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/hadoop/hadoopHA%E6%90%AD%E5%BB%BA/"/>
      <url>/daydoc/2019/05/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/hadoop/hadoopHA%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>发现对hadoop的相关版本的组件,进程还有些模糊,借着针对hadoopHA模式搭建的过程,对hadoop<br>进行一次细统的回顾.</p><a id="more"></a><h1 id="hadoop-HA搭建与总结"><a href="#hadoop-HA搭建与总结" class="headerlink" title="hadoop HA搭建与总结"></a>hadoop HA搭建与总结</h1><h2 id="什么是HA"><a href="#什么是HA" class="headerlink" title="什么是HA"></a>什么是HA</h2><p>HA即高可用</p><h2 id="HA相关配置"><a href="#HA相关配置" class="headerlink" title="HA相关配置"></a>HA相关配置</h2><h3 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h3><p>基本一致</p><h3 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h3><p>这里有明显差别<br>hadoop2.X与hadoop1.X的高可能中的明显差异就是从这里开始的.<br>2.x 引入了nameservice. 该nameservice可支持最大两个namenode.<br>1.x img 和edits统一放置在namenode上.<br>2.x 则通过journalnodes来共享edits日志.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="hljs-meta">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">            Licensed under the Apache License, Version 2.0 (the "License");</span><br><span class="hljs-comment">  you may not use this file except in compliance with the License.</span><br><span class="hljs-comment">  You may obtain a copy of the License at</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">  Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment">  distributed under the License is distributed on an "AS IS" BASIS,</span><br><span class="hljs-comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment">  See the License for the specific language governing permissions and</span><br><span class="hljs-comment">  limitations under the License. See accompanying LICENSE file.</span><br><span class="hljs-comment">--&gt;</span><br><br><span class="hljs-comment">&lt;!-- Put site-specific property overrides in this file. --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br> <span class="hljs-comment">&lt;!-- 为namenode集群定义一个services name --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.nameservices<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>ns1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br>    <span class="hljs-comment">&lt;!-- nameservice 包含哪些namenode，为各个namenode起名 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.namenodes.ns1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>namenode,datanode1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br>   <span class="hljs-comment">&lt;!-- 名为master188的namenode的rpc地址和端口号，rpc用来和datanode通讯 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.rpc-address.ns1.namenode<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>namenode:9000<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br>    <span class="hljs-comment">&lt;!-- 名为master189的namenode的rpc地址和端口号，rpc用来和datanode通讯 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.rpc-address.ns1.datanode1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>datanode1:9000<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>  <span class="hljs-comment">&lt;!--名为master188的namenode的http地址和端口号，用来和web客户端通讯 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.http-address.ns1.namenode<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>namenode:50070<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>  <span class="hljs-comment">&lt;!-- 名为master189的namenode的http地址和端口号，用来和web客户端通讯 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.http-address.ns1.datanode1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>datanode1:50070<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br> <span class="hljs-comment">&lt;!-- namenode间用于共享编辑日志的journal节点列表 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>qjournal://namenode:8485;datanode1:8485;datanode2:8485/ns1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br>    <span class="hljs-comment">&lt;!-- 指定该集群出现故障时，是否自动切换到另一台namenode --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled.ns1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <br>    <br>      <span class="hljs-comment">&lt;!-- journalnode 上用于存放edits日志的目录 --&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop/hadoop_store/dfs/data/dfs/journalnode<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br>  <span class="hljs-comment">&lt;!-- 客户端连接可用状态的NameNode所用的代理类 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.client.failover.proxy.provider.ns1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br>    <span class="hljs-comment">&lt;!-- 一旦需要NameNode切换，使用ssh方式进行操作 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>sshfence<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br>    <span class="hljs-comment">&lt;!-- 如果使用ssh进行故障切换，使用ssh通信时用的密钥存储的位置 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop/.ssh/id_rsa<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <br>    <span class="hljs-comment">&lt;!-- connect-timeout超时时间 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.ha.fencing.ssh.connect-timeout<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>30000<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.name.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop/hadoop_store/dfs/name<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.data.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop/hadoop_store/dfs/data<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.permissions<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.replication<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="mapreduce-site-xml"><a href="#mapreduce-site-xml" class="headerlink" title="mapreduce-site.xml"></a>mapreduce-site.xml</h3><p>变动不大</p><h3 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs xml"><br><span class="hljs-meta">&lt;?xml version="1.0"?&gt;</span><br><span class="hljs-comment">&lt;!--</span><br><span class="hljs-comment">            Licensed under the Apache License, Version 2.0 (the "License");</span><br><span class="hljs-comment">  you may not use this file except in compliance with the License.</span><br><span class="hljs-comment">  You may obtain a copy of the License at</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">    http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">  Unless required by applicable law or agreed to in writing, software</span><br><span class="hljs-comment">  distributed under the License is distributed on an "AS IS" BASIS,</span><br><span class="hljs-comment">  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="hljs-comment">  See the License for the specific language governing permissions and</span><br><span class="hljs-comment">  limitations under the License. See accompanying LICENSE file.</span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>    <br>    <br><br>       <span class="hljs-comment">&lt;!-- 启用HA高可用性 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>      <br>        <span class="hljs-comment">&lt;!-- 指定resourcemanager的名字 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>yrc<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>      <br>        <span class="hljs-comment">&lt;!-- 使用了2个resourcemanager,分别指定Resourcemanager的地址 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>rm1,rm2<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <br>        <span class="hljs-comment">&lt;!-- 指定rm1的地址 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>namenode<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <br>        <span class="hljs-comment">&lt;!-- 指定rm2的地址  --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>datanode1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <br>        <span class="hljs-comment">&lt;!-- 指定当前机器master188作为rm1 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.ha.id<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>rm1<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <br>        <span class="hljs-comment">&lt;!-- 指定zookeeper集群机器 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>namenode:2181,datanode1:2181,datanode2:2181<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <br>        <span class="hljs-comment">&lt;!-- NodeManager上运行的附属服务，默认是mapreduce_shuffle --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>      <br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>kuiqwang<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log.server.url<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>http://namenode:19888/tmp/logs/hadoop/logs/<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>                <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.local-dirs<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop/hadoop_store/logs/yarn<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>           <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.log-dirs<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/home/hadoop/hadoop_store/logs/userlogs<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!--内存,核数大小配置 --&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.resource.memory-mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>4096<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.scheduler.minimum-allocation-mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>1024<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.scheduler.maximum-allocation-mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>3072<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.app.mapreduce.am.resource.mb<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>3072<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.app.mapreduce.am.command-opts<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>-Xmx3276m<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.resource.cpu-vcores<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.scheduler.maximum-allocation-vcores<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="HA过程中主要用到的操作命令"><a href="#HA过程中主要用到的操作命令" class="headerlink" title="HA过程中主要用到的操作命令"></a>HA过程中主要用到的操作命令</h3><p>当配置文件完成后,先启动journalnode,以助namenode 和standby node 共享edits文件<br>hadoop-daemon.sh<br><img src="http://img.wqkenqing.ren/urHEX6.png" srcset="/daydoc/img/loading.gif" lazyload alt=""></p><p>然后再进行namdnode格式化,hadoop namenode -format<br>进行namenode格式化<br>当namenode格式化完成后可以先启动该节点的namenode<br>hadoop-daemon.sh start namenode<br>然后再在另一namdnode节点执行<br>hdfs namenode -bootstrapStandby<br>到这可以将之前的journalnode停用,然后start-dfs.sh</p><p>因为要用到zookeeper协助同步配置文件与操作日志,所以这里可以先对zookeeper进行hdfs内容的格式化<br>hdfs zkfc –formatZK<br>然后启动FailOver进程<br>hadoop-daemon.sh start zkfc<br><img src="http://img.wqkenqing.ren/lvuo9N.png" srcset="/daydoc/img/loading.gif" lazyload alt=""><br>至此则是这些进程<br>然后启用yarn.<br>即<br>start-yarn.sh<br>到这里HA过程中用到的一些常用指令大致总结完成</p><hr><p>至此 hadoop HA的常规总结完成.后续再补充一些细节,如standy 节点切的,与切换机制.HA背后的运作机制,与效果</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hdfs操作细节</title>
      <link href="/daydoc/2019/05/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/hadoop/hdfs/hdfs%E6%93%8D%E4%BD%9C/"/>
      <url>/daydoc/2019/05/16/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/hadoop/hdfs/hdfs%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>针对hdfs一些较细节的api封装</p><a id="more"></a><h1 id="hdfs操作"><a href="#hdfs操作" class="headerlink" title="hdfs操作"></a>hdfs操作</h1><h2 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h2><ol><li>创建文件 </li><li>写数据 </li><li>删除文件 </li><li>上传文件 </li><li>下载文件 </li><li>断点续写</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs error">错误：<br><br>    java.io.IOException: Failed to replace a bad datanode on the existing pipeline due to no more good datanodes being available to try<br></code></pre></td></tr></table></figure><p>原因：<br>    无法写入；我的环境中有3个datanode，备份数量设置的是3。在写操作时，它会在pipeline中写3个机器。默认replace-datanode-on-failure.policy是DEFAULT,如果系统中的datanode大于等于3，它会找另外一个datanode来拷贝。目前机器只有3台，因此只要一台datanode出问题，就一直无法写入成功。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.client.block.write.replace-datanode-on-failure.enable<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span>         <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><br>   <br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.client.block.write.replace-datanode-on-failure.policy<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>NEVER<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><p>对于dfs.client.block.write.replace-datanode-on-failure.enable，客户端在写失败的时候，是否使用更换策略，默认是true没有问题<br>对于，dfs.client.block.write.replace-datanode-on-failure.policy，default在3个或以上备份的时候，是会尝试更换结点尝试写入datanode。而在两个备份的时候，不更换datanode，直接开始写。对于3个datanode的集群，只要一个节点没响应写入就会出问题，所以可以关掉。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hive总结</title>
      <link href="/daydoc/2018/12/24/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/hive%E6%80%BB%E7%BB%93/"/>
      <url>/daydoc/2018/12/24/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/hive%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="Hive相关点小结"><a href="#Hive相关点小结" class="headerlink" title="Hive相关点小结"></a>Hive相关点小结</h1><a id="more"></a><h2 id="启动指令"><a href="#启动指令" class="headerlink" title="启动指令"></a>启动指令</h2><ol><li>hive ==  hive –service cli<br>不需要启动server，使用本地的metastore，可以直接做一些简单的数据操作和测试。</li><li>启动hiveserver2<br>hive –service hiveserver2</li><li>beeline工具测试使用jdbc方式连接<br>beeline -u jdbc:hive2://localhost:10000</li></ol><p>1.managed table<br>管理表。<br>删除表时，数据也删除了</p><p>2.external table<br>外部表。<br>删除表时，数据不删</p><h2 id="建表"><a href="#建表" class="headerlink" title="建表:"></a>建表:</h2><p>CREATE TABLE IF NOT EXISTS t2(id int,name string,age int)<br>COMMENT ‘xx’                                     //注释<br>ROW FORMAT DELIMITED                             //行分隔符<br>FIELDS TERMINATED BY ‘,’                         //字段分隔符，这里使用的是逗号可以根据自己的需要自行进行修改<br>STORED AS TEXTFILE ;</p><h3 id="外部表"><a href="#外部表" class="headerlink" title="外部表:"></a>外部表:</h3><p> CREATE  TABLE IF NOT EXISTS t2(id int,name string,age int)<br> COMMENT ‘xx’<br> ROW FORMAT DELIMITED<br> FIELDS TERMINATED BY ‘,’<br> STORED AS TEXTFILE ; </p><h3 id="分区表，桶表"><a href="#分区表，桶表" class="headerlink" title="分区表，桶表"></a>分区表，桶表</h3><h4 id="分区表"><a href="#分区表" class="headerlink" title="分区表"></a>分区表</h4><p>Hive中有分区表的概念。我们可以看到分区表具有重要的性能，而且分区表还可以将数据以一种符合逻辑的方式进行组织，比如分层存储。Hive的分区表，是把数据放在满足条件的分区目录下<br>CREATE TABLE t3(id int,name string,age int) </p><p>PARTITIONED BY (Year INT, Month INT)   //按照年月进行分区</p><p> ROW FORMAT DELIMITED                      //行分隔符</p><p>FIELDS TERMINATED BY ‘,’ ;                    //字段分隔符，这里使用的是逗号可以根据自己的需要自行进行修改<br>load data local inpath ‘/home/zpx/customers.txt’ into table t3 partition</p><h4 id="分桶表"><a href="#分桶表" class="headerlink" title="分桶表"></a>分桶表</h4><p>这样做，在查找数据的时候就可以跨越多个桶，直接查找复合条件的数据了。速度快，时间成本低。Hive中的桶表默认使用的机制也是hash。<br>CREATE TABLE t4(id int,name string,age int) </p><pre><code class="hljs">CLUSTERED BY (id) INTO 3 BUCKETS      //创建3个通桶表，按照字段id进行分桶ROW FORMAT DELIMITED                     //行分隔符FIELDS TERMINATED BY &apos;,&apos; ; </code></pre><p>load data local inpath ‘/home/centos/customers.txt’ into table t4 ;</p><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><p>load data local inpath ‘/home/zpx/customers.txt’ into table t2 ; //local上传文件<br>load data inpath ‘/user/zpx/customers.txt’ [overwrite] into table t2 //分布式文件系统上移动文件</p><h2 id="建视图"><a href="#建视图" class="headerlink" title="建视图"></a>建视图</h2><p>Hive也可以建立视图，是一张虚表，方便我们进行操作.</p><p>create view v1 as select a.id aid,a.name ,b.id bid , b.order from customers a left outer join default.tt b on a.id = b.cid ;</p><h2 id="Hive的严格模式"><a href="#Hive的严格模式" class="headerlink" title="Hive的严格模式"></a>Hive的严格模式</h2><p>Hive提供了一个严格模式，可以防止用户执行那些产生意想不到的不好的影响的查询。<br>使用了严格模式之后主要对以下3种不良操作进行控制：</p><p>1.分区表必须指定分区进行查询。<br>2.order by时必须使用limit子句。<br>3.不允许笛卡尔积。<br><img src="http://img.wqkenqing.ren/2019-03-18-17-13-36.png" srcset="/daydoc/img/loading.gif" lazyload alt="2019-03-18-17-13-36"></p><h2 id="Hive的动态分区"><a href="#Hive的动态分区" class="headerlink" title="Hive的动态分区"></a>Hive的动态分区</h2><p>像分区表里面存储了数据。我们在进行存储数据的时候，都是明确的指定了分区。在这个过程中Hive也提供了一种比较任性化的操作，就是动态分区，不需要我们指定分区目录，Hive能够把数据进行动态的分发,<strong>我们需要将当前的严格模式设置成非严格模式，否则不允许使用动态分区</strong><br>set hive.exec.dynamic.partition.mode=nonstrict//设置非严格模式</p><h2 id="Hive的排序"><a href="#Hive的排序" class="headerlink" title="Hive的排序"></a>Hive的排序</h2><p>Hive也提供了一些排序的语法，包括order by,sort by。</p><p>order by=MapReduce的全排序<br>sort by=MapReduce的部分排序<br>distribute by=MapReduce的分区</p><p>selece …….from …… order by 字段；//按照这个字段全排序</p><p>selece …….from …… sort by 字段； //按照这个字段局部有序</p><p>selece 字段…..from …… distribute by 字段；//按照这个字段分区<br>特别注意的是：</p><ol><li>在上面的最后一个distribute by使用过程中，按照排序的字段要出现在最左侧也就是select中有这个字段，因为我们要告诉MapReduce你要按照哪一个字段分区，当然获取的数据中要出现这个字段了。类似于我们使用group by的用法，字段也必须出现在最左侧，因为数据要包含这个字段，才能按照这个字段分组，至于Hive什么时候会自行的开启MapReduce，那就是在使用聚合的情况下开启，使用select …from ….以及使用分区表的selece ….from……where …..不会开启</li><li>distribute by与sort by可以组合使用，但是distribute by要放在前边，因为MapReduce要先分区，后排序，再归并</li></ol><p>select 字段a,……..from …….distribute by字段a，sort by字段<br>如果distribute by与sort by使用的字段一样，则可以使用cluster by 字段替代：<br>select 字段a,……..from …….cluster by 字段</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ol><li>show functions; 展示相关函数</li><li>desc function split;</li><li>desc function  extended split;  //查看函数的扩展信息</li></ol><h3 id="用户自定义函数（UDF）"><a href="#用户自定义函数（UDF）" class="headerlink" title="用户自定义函数（UDF）"></a>用户自定义函数（UDF）</h3><p>具体步骤如下：</p><p>（1）.自定义类（继承UDF，或是GenericUDF。GenericUDF是更为复杂的抽象概念，但是其支持更好的null值处理同时还可以处理一些标准的UDF无法支持的编程操作）。<br>（2）.导出jar包，通过命令添加到hive的类路径。<br>$hive&gt;add jar xxx.jar<br>（3）.注册函数<br>$hive&gt;CREATE TEMPORARY FUNCTION 函数名 AS ‘具体类路径：包.类’;<br>（4）.使用<br> $hive&gt;select 函数名(参数);<br>自定义实现类如下(继承UDF)：</p>]]></content>
      
      
      
        <tags>
            
            <tag> bigdata </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hbase积累.md</title>
      <link href="/daydoc/2018/06/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/hbase%E7%A7%AF%E7%B4%AF/"/>
      <url>/daydoc/2018/06/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/hbase%E7%A7%AF%E7%B4%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="hbase积累"><a href="#hbase积累" class="headerlink" title="hbase积累"></a>hbase积累</h1><a id="more"></a><h2 id="细节点"><a href="#细节点" class="headerlink" title="细节点"></a>细节点</h2><h3 id="1-Rowkey设计原则"><a href="#1-Rowkey设计原则" class="headerlink" title="1.Rowkey设计原则"></a>1.Rowkey设计原则</h3><!-- more --><p>1.1 <strong>长度原则</strong> rowkey 在hbase以二进制码流,可以是任意字符串,</p><ul><li><p><strong>最大长度是64kb</strong>,实际应用主要是100~100bytes</p></li><li><p>长度尽量为8的整数倍,因为现在的系统主要是64位,内存8字节对齐.控制在16字节,符合操作系统特性</p></li></ul><p>1.2 <strong>散列原则</strong>:因为hbase是分布式存储,rowkey的高位尽量是散列字段,散列性弱的尽量放在低位段.如Time AND Device_id的组合,相对而言device_id 应该量级较小,散列性高.而TIME散列性低,如果TIME放在高位,可能造成数据在某个RegeionServer上堆积的情况.所以较合理的rowkey组合应是<br>device_id+time.</p><p>1.3 <strong>RowKey唯一原则</strong>：必须在设计上保证其唯一性.<br>hbase 中以KeyValue形式存储,key若重复,行内容则会被覆盖.</p><hr><h3 id="2-Hbase的Regeion热点问题解决"><a href="#2-Hbase的Regeion热点问题解决" class="headerlink" title="2.Hbase的Regeion热点问题解决"></a>2.Hbase的Regeion热点问题解决</h3><p><code>因为在创建表是没有提前预分区,创建的表默认就只会有一个region,这个region的rowkey是没有边界的,即没有startkey与stopkey.数据在写入时,都会写入到这个region.随着数据的不断增加,达到某个阈值时,才会split成2个region.在这个过程中就会产生所有数据囤积在一个regionServer上,出现热点问题.另在split时,会占用集群的I/O资源.通过预分区可以解决该问题</code></p><h4 id="2-1-预分区"><a href="#2-1-预分区" class="headerlink" title="2.1 预分区"></a>2.1 预分区</h4><p>预分区,”预”字是核心.我们在建表时,预先对表中要存放的数据形式和可能的量级,心中必然会有所估量,即这里应<strong>预</strong>估数据量.若数据量较大,则在建表时又应该预分区.即根据数据形式,量级,事先预设好一定量的region,后面数据写入时,则会写入到相应的分区.从而避免热点,减少split.</p><p>2.1.2 salting(加盐)<br>hbase rowkey设计,避免热点,常会用到该操作,这里的加盐本身不是加密操作,而是在原数据前加入一些随机数据,从而起到分散不同region的作用.</p><p>2.1.3 预习区具体方案</p><p>hbase预分区的相关操作,如shell形式,可直接在hbase shell<br>操作.如</p><p>[<a href="https://blog.csdn.net/xiao_jun_0820/article/details/24419793]" target="_blank" rel="noopener">https://blog.csdn.net/xiao_jun_0820/article/details/24419793]</a>(Hbase shell 预分区操作.)</p><p>java形式<br>[<a href="https://blog.csdn.net/qq_20641565/article/details/56482407]" target="_blank" rel="noopener">https://blog.csdn.net/qq_20641565/article/details/56482407]</a>(Hbase 预分区 java API形式)</p><p>以上操作形式有个问题就是rowkey是随机生成的,虽起到了散列存储,避免了热点堆积,但因为加盐的缘故,想要直接的获取某行数据较为困难.若针对的是高频使用的数据,则会出现问题.</p><p>2.1.4 hash分区</p><p>在原先预分区的基础上,通过相关规则将原数据hash,从而获得这个原数据对应在哪个分区,使当拿到相关原数据,就能推演出相关rowkey.从而能准确的get数据.</p><h3 id="hbase优化"><a href="#hbase优化" class="headerlink" title="hbase优化"></a>hbase优化</h3><h4 id="确定优化目标"><a href="#确定优化目标" class="headerlink" title="确定优化目标"></a>确定优化目标</h4><p>沟通交流后，业务方更看重降低成本。数据量梳理后略有降低，保证吞吐，无长期请求堆积前提下可以放宽延时要求。为了更快的进行优化，放宽稳定性可以要求接受短期波动。<br>另外，该分组的RegionServer之前存在不稳定的问题，这次优化也一并解决。</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 日常总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spark学习</title>
      <link href="/daydoc/2018/03/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/spark%E5%AD%A6%E4%B9%A0/"/>
      <url>/daydoc/2018/03/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/spark%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="spark-学习"><a href="#spark-学习" class="headerlink" title="spark 学习"></a>spark 学习</h1><a id="more"></a><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">spark</span> 作为主流的实时计算引擎,需要高度掌握<br></code></pre></td></tr></table></figure><!-- more --><h2 id="spark介绍"><a href="#spark介绍" class="headerlink" title="spark介绍"></a>spark介绍</h2><p>Apache Spark是一用于实时处理的开源集群计算框架.持多种语言编程,Spark Streaming有高吞吐量和容错能力强等特点.<br>数据输入后可以用Spark的高度抽象原语如：map、reduce、join、window等进行运算,而结果也能保存在很多地方，如HDFS，数据库等。另外Spark Streaming也能和MLlib（机器学习）以及Graphx完美融合。</p><p>优点</p><ul><li>易用</li><li>容错</li><li>spark体系整合</li></ul><p><img src="http://img.wqkenqing.ren/2019-03-04-15-45-38.png" srcset="/daydoc/img/loading.gif" lazyload alt="spark&amp;storm对比"></p><h2 id="RDD详解"><a href="#RDD详解" class="headerlink" title="RDD详解"></a>RDD详解</h2><h3 id="RDD是什么"><a href="#RDD是什么" class="headerlink" title="RDD是什么"></a>RDD是什么</h3><p>RDD：Spark的核心概念是RDD (resilientdistributed dataset)，指的是一个只读的，可分区的分布式数据集，这个数据集的全部或部分可以缓存在内存中，在多次计算间重用。</p><p>另:RDD即弹性分布式数据集，有容错机制并可以被并行操作的元素集合，具有只读、分区、容错、高效、无需物化、可以缓存、RDD依赖等特征。RDD只是数据集的抽象，分区内部并不会存储具体的数据。</p><p>RDD的五个特性</p><ol><li>有一个分片列表。就是能被切分，和hadoop一样的，能够切分的数据才能并行计算。 </li><li>有一个函数计算每一个分片，这里指的是下面会提到的compute函数.</li><li>对其他的RDD的依赖列表，依赖还具体分为宽依赖和窄依赖，但并不是所有的RDD都有依赖.</li><li>可选：key-value型的RDD是根据哈希来分区的，类似于mapreduce当中的Paritioner接口，控制key分到哪个reduce。</li><li>可选：每一个分片的优先计算位置（preferred locations），比如HDFS的block的所在位置应该是优先计算的位置。(存储的是一个表，可以将处理的分区“本地化”).</li></ol><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs scala"><span class="hljs-comment">//只计算一次  </span><br>  <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getPartitions</span></span>: <span class="hljs-type">Array</span>[<span class="hljs-type">Partition</span>]  <br>  <span class="hljs-comment">//对一个分片进行计算，得出一个可遍历的结果</span><br>  <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">compute</span></span>(split: <span class="hljs-type">Partition</span>, context: <span class="hljs-type">TaskContext</span>): <span class="hljs-type">Iterator</span>[<span class="hljs-type">T</span>]<br>  <span class="hljs-comment">//只计算一次，计算RDD对父RDD的依赖</span><br>  <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getDependencies</span></span>: <span class="hljs-type">Seq</span>[<span class="hljs-type">Dependency</span>[_]] = deps<br>  <span class="hljs-comment">//可选的，分区的方法，针对第4点，类似于mapreduce当中的Paritioner接口，控制key分到哪个reduce</span><br>  <span class="hljs-meta">@transient</span> <span class="hljs-keyword">val</span> partitioner: <span class="hljs-type">Option</span>[<span class="hljs-type">Partitioner</span>] = <span class="hljs-type">None</span><br>  <span class="hljs-comment">//可选的，指定优先位置，输入参数是split分片，输出结果是一组优先的节点位置</span><br>  <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getPreferredLocations</span></span>(split: <span class="hljs-type">Partition</span>): <span class="hljs-type">Seq</span>[<span class="hljs-type">String</span>] = <span class="hljs-type">Nil</span><br></code></pre></td></tr></table></figure><h3 id="为什么会产生RDD"><a href="#为什么会产生RDD" class="headerlink" title="为什么会产生RDD"></a>为什么会产生RDD</h3><h3 id="RDD数据集"><a href="#RDD数据集" class="headerlink" title="RDD数据集"></a>RDD数据集</h3><ol><li>并行集合</li></ol><p>接收一个已经存在的集合,然后进行各种并行计算.并行化集合是通过调用SparkContext的parallelize方法，在一个已经存在的Scala集合上创建（一个Seq对象）。集合的对象将会被拷贝，创建出一个可以被并行操作的分布式数据集。</p><ol start="2"><li>Hadoop数据集</li></ol><p>Spark可以将任何Hadoop所支持的存储资源转化成RDD，只要文件系统是HDFS，或者Hadoop支持的任意存储系统即可，如本地文件（需要网络文件系统，所有的节点都必须能访问到）、HDFS、Cassandra、HBase、Amazon S3等，Spark支持文本文件、SequenceFiles和任何Hadoop InputFormat格式。</p><p>此两种类型的RDD都可以通过相同的方式进行操作，从而获得子RDD等一系列拓展，形成lineage血统关系图。</p><h3 id="Spark-RDD算子"><a href="#Spark-RDD算子" class="headerlink" title="Spark RDD算子"></a>Spark RDD算子</h3><ol><li>Transformation<br>不触发提交作业，完成作业中间处理过程。</li></ol><h2 id="DStream"><a href="#DStream" class="headerlink" title="DStream"></a>DStream</h2><h3 id="什么是DStream"><a href="#什么是DStream" class="headerlink" title="什么是DStream"></a>什么是DStream</h3><p>Discretized Stream :代表持续性的数据流和经过各种Spark原语操作后的结果数据流,在内部实现上是一系列连续的RDD来表示.每个RDD含有一段时间间隔内的数据,如下图<br><img src="http://img.wqkenqing.ren/2019-03-04-15-50-41.png" srcset="/daydoc/img/loading.gif" lazyload alt="DStream"></p><p>计算则由spark engine来完成<br><img src="http://img.wqkenqing.ren/2019-03-04-15-51-58.png" srcset="/daydoc/img/loading.gif" lazyload alt="spark engine流程"></p><h2 id="spark-java"><a href="#spark-java" class="headerlink" title="spark java"></a>spark java</h2><p>因为我是主要掌握的语言是java,从效率上来考虑,这里</p><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p><a href="https://blog.csdn.net/wangxiaotongfan/article/details/51395769" target="_blank" rel="noopener">https://blog.csdn.net/wangxiaotongfan/article/details/51395769</a> RDD详解<br><a href="https://blog.csdn.net/zuochang_liu/article/details/81459185" target="_blank" rel="noopener">https://blog.csdn.net/zuochang_liu/article/details/81459185</a>  spark streaming学习<br><a href="https://blog.csdn.net/hellozhxy/article/details/81672845" target="_blank" rel="noopener">https://blog.csdn.net/hellozhxy/article/details/81672845</a> spark java 使用指南<br><a href="https://blog.csdn.net/t1dmzks/article/details/70198430" target="_blank" rel="noopener">https://blog.csdn.net/t1dmzks/article/details/70198430</a> sparkRDD算子介绍<br><a href="https://blog.csdn.net/wxycx11111/article/details/79123482" target="_blank" rel="noopener">https://blog.csdn.net/wxycx11111/article/details/79123482</a> <strong>sparkRDD入门介绍</strong><br><a href="https://github.com/zhaikaishun/spark_tutorial" target="_blank" rel="noopener">https://github.com/zhaikaishun/spark_tutorial</a> <strong>RDD算子介绍</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spark学习2</title>
      <link href="/daydoc/2018/03/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/spark%E5%AD%A6%E4%B9%A02/"/>
      <url>/daydoc/2018/03/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/spark%E5%AD%A6%E4%B9%A02/</url>
      
        <content type="html"><![CDATA[<h1 id="spark学习2"><a href="#spark学习2" class="headerlink" title="spark学习2"></a>spark学习2</h1><h2 id="spark-运行的四种模式"><a href="#spark-运行的四种模式" class="headerlink" title="spark 运行的四种模式"></a>spark 运行的四种模式</h2><a id="more"></a><h3 id="本地模式"><a href="#本地模式" class="headerlink" title="本地模式"></a>本地模式</h3><p>如</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lsl">./bin/spark-submit --class org.apache.spark.examples.SparkPi --master local[<span class="hljs-number">1</span>] ./lib/spark-examples<span class="hljs-number">-1.3</span><span class="hljs-number">.1</span>-hadoop2<span class="hljs-number">.4</span><span class="hljs-number">.0</span>.jar <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h3 id="standlone模式"><a href="#standlone模式" class="headerlink" title="standlone模式"></a>standlone模式</h3><h4 id="client"><a href="#client" class="headerlink" title="client"></a>client</h4><p>./bin/spark-submit –class org.apache.spark.examples.SparkPi –master spark://spark001:7077 –executor-memory 1G –total-executor-cores 1 ./lib/spark-examples-1.3.1-hadoop2.4.0.jar 100</p><h4 id="cluster"><a href="#cluster" class="headerlink" title="cluster"></a>cluster</h4><p>./bin/spark-submit –class org.apache.spark.examples.SparkPi –master spark://spark001:7077 –deploy-mode cluster –supervise –executor-memory 1G –total-executor-cores 1 ./lib/spark-examples-1.3.1-hadoop2.7.0.jar 100</p><h3 id="Yarn模式"><a href="#Yarn模式" class="headerlink" title="Yarn模式"></a>Yarn模式</h3><h4 id="client模式"><a href="#client模式" class="headerlink" title="client模式"></a>client模式</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs lsl">client模式：<br>结果xshell可见：<br>./bin/spark-submit --class org.apache.spark.examples.SparkPi --master yarn-client --executor-memory <span class="hljs-number">1</span>G --num-executors <span class="hljs-number">1</span> ./lib/spark-examples<span class="hljs-number">-1.3</span><span class="hljs-number">.1</span>-hadoop2<span class="hljs-number">.7</span><span class="hljs-number">.0</span>.jar <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h4 id="cluster模式"><a href="#cluster模式" class="headerlink" title="cluster模式"></a>cluster模式</h4><p>./bin/spark-submit –class org.apache.spark.examples.SparkPi –master yarn-cluster –executor-memory 1G –num-executors 1 ./lib/spark-examples-1.3.1-hadoop2.4.0.jar 100</p><h2 id="spark-sql"><a href="#spark-sql" class="headerlink" title="spark sql"></a>spark sql</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 学习spark2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spark算子</title>
      <link href="/daydoc/2018/03/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/spark%E7%AE%97%E5%AD%90/"/>
      <url>/daydoc/2018/03/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/spark%E7%AE%97%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<h1 id="spark-算子"><a href="#spark-算子" class="headerlink" title="spark 算子"></a>spark 算子</h1><a id="more"></a><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs erlang">sparkRDD封装的函数方法又称算子,通过这些算子可以对RDD进行相关处理,从而获我们想要的结果,因为可能涉及的算子较多.因此单独开篇进行粒度更细,更集中的总结.<br><br>总得来讲spark的算子,本就是scala集合的一些高阶用法.<br></code></pre></td></tr></table></figure><h2 id="Transformation-转换"><a href="#Transformation-转换" class="headerlink" title="Transformation(转换)"></a>Transformation(转换)</h2><p>不触发提交作业，完成作业中间处理过程。</p><h3 id="parallelize-并行化"><a href="#parallelize-并行化" class="headerlink" title="parallelize (并行化)"></a>parallelize (并行化)</h3><p>将一个存在的集合，变成一个RDD ,返回的是一个JavaRDD[T]<br>** in scala **</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scala">sc.parallelize(<span class="hljs-type">List</span>(<span class="hljs-string">"shenzhen"</span>, <span class="hljs-string">"is a beautiful city"</span>))<br></code></pre></td></tr></table></figure><p> ** in java **<br> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">JavaRDD&lt;String&gt; javaStringRDD = sc.parallelize(Arrays.asList(<span class="hljs-string">"shenzhen"</span>, <span class="hljs-string">"is a beautiful city"</span>));<br></code></pre></td></tr></table></figure></p><h3 id="makeRDD"><a href="#makeRDD" class="headerlink" title="makeRDD"></a>makeRDD</h3><p>只有scala版本的才有makeRDD ,与parallelize类似.</p><h3 id="textFile"><a href="#textFile" class="headerlink" title="textFile"></a>textFile</h3><p>调用SparkContext.textFile()方法，从外部存储中读取数据来创建 RDD<br>** in scala **<br> <figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scala"><span class="hljs-keyword">var</span> lines = sc.textFile(inpath)<br></code></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// java</span><br> JavaRDD&lt;String&gt; lines = sc.textFile(inpath);<br></code></pre></td></tr></table></figure><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><p>对RDD数据进行过滤</p><h3 id="map"><a href="#map" class="headerlink" title="map"></a>map</h3><p>接收一个函数,并将这个函数作用于RDD中的每个元素.RDD 中对应*<em>元素的值 map是一对一的关系 *</em></p><h3 id="flatMap"><a href="#flatMap" class="headerlink" title="flatMap"></a>flatMap</h3><p>有时候，我们希望对某个元素生成多个元素，实现该功能的操作叫作 flatMap() ,faltMap的函数应用于每一个元素，对于每一个元素返回的是多个元素组成的迭代器</p><h3 id="distinct"><a href="#distinct" class="headerlink" title="distinct"></a>distinct</h3><p>去重,我们生成的RDD可能有重复的元素，使用distinct方法可以去掉重复的元素, 不过此方法涉及到混洗，操作开销很大 </p><h3 id="union"><a href="#union" class="headerlink" title="union"></a>union</h3><p>两个RDD进行合并 </p><h3 id="intersection"><a href="#intersection" class="headerlink" title="intersection"></a>intersection</h3><p>RDD1.intersection(RDD2) 返回两个RDD的交集，** 并且去重 **<br>intersection 需要混洗数据，比较浪费性能</p><h3 id="subtract"><a href="#subtract" class="headerlink" title="subtract"></a>subtract</h3><p>RDD1.subtract(RDD2),返回在RDD1中出现，但是不在RDD2中出现的元素，不去重 </p><h3 id="cartesian"><a href="#cartesian" class="headerlink" title="cartesian"></a>cartesian</h3><p>cartesian(RDD2) 返回RDD1和RDD2的笛卡儿积，这个开销非常大</p><h3 id="mapToPair"><a href="#mapToPair" class="headerlink" title="mapToPair"></a>mapToPair</h3><p>将元素该成key-value形式</p><h3 id="flatMapToPair"><a href="#flatMapToPair" class="headerlink" title="flatMapToPair"></a>flatMapToPair</h3><p>差异同mapToPair</p><h3 id="combineByKey"><a href="#combineByKey" class="headerlink" title="combineByKey"></a>combineByKey</h3><p>该方法主要针对不同分区的同一key进行元素合并函数操作.<br>需要对pairRDD进行</p><ol><li>createCombiner  会遍历分区中的所有元素，因此每个元素的键要么还没有遇到过,要么就<br>和之前的某个元素的键相同。如果这是一个新的元素， combineByKey() 会使用一个叫作 createCombiner() 的函数来创建<br>那个键对应的累加器的初始值</li><li>mergeValue 如果这是一个在处理当前分区之前已经遇到的键， 它会使用 mergeValue() 方法将该键的累加器对应的当前值与这个新的值进行合并</li><li>mergeCombiners 于每个分区都是独立处理的， 因此对于同一个键可以有多个累加器。如果有两个或者更<br>多的分区都有对应同一个键的累加器， 就需要使用用户提供的 mergeCombiners() 方法将各<br>个分区的结果进行合并。<h3 id="reduceByKey"><a href="#reduceByKey" class="headerlink" title="reduceByKey"></a>reduceByKey</h3>接收一个函数，按照相同的key进行reduce操<h3 id="foldByKey"><a href="#foldByKey" class="headerlink" title="foldByKey"></a>foldByKey</h3>该函数用于RDD[K,V]根据K将V做折叠、合并处理，其中的参数zeroValue表示先根据映射函数将zeroValue应用于V,进行初始化V,再将映射函数应用于初始化后的V ,与reduce不同的是 foldByKey开始折叠的第一个元素不是集合中的第一个元素，而是传入的一个元素 <h3 id="sortByKey"><a href="#sortByKey" class="headerlink" title="sortByKey"></a>sortByKey</h3>SortByKey用于对pairRDD按照key进行排序，第一个参数可以设置true或者false，默认是true <h3 id="groupByKey"><a href="#groupByKey" class="headerlink" title="groupByKey"></a>groupByKey</h3>groupByKey会将RDD[key,value] 按照相同的key进行分组，形成RDD[key,Iterable[value]]的形式， 有点类似于sql中的groupby，例如类似于mysql中的group_concat <h3 id="cogroup"><a href="#cogroup" class="headerlink" title="cogroup"></a>cogroup</h3>groupByKey是对单个 RDD 的数据进行分组，还可以使用一个叫作 cogroup() 的函数对多个共享同一个键的 RDD 进行分组<br>RDD1.cogroup(RDD2) 会将RDD1和RDD2按照相同的key进行分组，得到(key,RDD[key,Iterable[value1],Iterable[value2]])的形式 <h3 id="subtractByKey"><a href="#subtractByKey" class="headerlink" title="subtractByKey"></a>subtractByKey</h3>类似于subtrac，删掉 RDD 中键与 other RDD 中的键相同的元素<h3 id="join"><a href="#join" class="headerlink" title="join"></a>join</h3>可以把RDD1,RDD2中的相同的key给连接起来，类似于sql中的join操作<br>RDD1.join(RDD2) <h3 id="fullOuterJoin"><a href="#fullOuterJoin" class="headerlink" title="fullOuterJoin"></a>fullOuterJoin</h3>全连接<h3 id="leftOuterJoin"><a href="#leftOuterJoin" class="headerlink" title="leftOuterJoin"></a>leftOuterJoin</h3><h3 id="rightOuterJoin"><a href="#rightOuterJoin" class="headerlink" title="rightOuterJoin"></a>rightOuterJoin</h3></li></ol><h2 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h2><h3 id="first"><a href="#first" class="headerlink" title="first"></a>first</h3><p>返回第一个元素 </p><h3 id="take"><a href="#take" class="headerlink" title="take"></a>take</h3><p>rdd.take(n)返回第n个元素 </p><h3 id="collect"><a href="#collect" class="headerlink" title="collect"></a>collect</h3><p>rdd.collect() 返回 RDD 中的所有元素 </p><h3 id="count"><a href="#count" class="headerlink" title="count"></a>count</h3><p>rdd.count() 返回 RDD 中的元素个数 </p><h3 id="countByValue"><a href="#countByValue" class="headerlink" title="countByValue"></a>countByValue</h3><p>各元素在 RDD 中出现的次数 返回{(key1,次数),(key2,次数),…(keyn,次数)} </p><h3 id="reduce"><a href="#reduce" class="headerlink" title="reduce"></a>reduce</h3><p>并行整合RDD中所有数据</p><h3 id="fold"><a href="#fold" class="headerlink" title="fold"></a>fold</h3><p>和 reduce() 一 样， 但是提供了初始值num,每个元素计算时，先要合这个初始值进行折叠, 注意，这里会按照每个分区进行fold，然后分区之间还会再次进行fold </p><h3 id="top"><a href="#top" class="headerlink" title="top"></a>top</h3><p>rdd.top(n)<br>按照降序的或者指定的排序规则，返回前n个元素 </p><h3 id="takeOrdered"><a href="#takeOrdered" class="headerlink" title="takeOrdered"></a>takeOrdered</h3><p>rdd.take(n)<br>对RDD元素进行升序排序,取出前n个元素并返回，也可以自定义比较器（这里不介绍），类似于top的相反的方法 </p><h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h3><p>对 RDD 中的每个元素使用给<br>定的函数</p><h3 id="countByKey"><a href="#countByKey" class="headerlink" title="countByKey"></a>countByKey</h3><p>以RDD{(1, 2),(2,4),(2,5), (3, 4),(3,5), (3, 6)}为例 rdd.countByKey会返回{(1,1),(2,2),(3,3)} </p><h3 id="collectAsMap"><a href="#collectAsMap" class="headerlink" title="collectAsMap"></a>collectAsMap</h3><p>将pair类型(键值对类型)的RDD转换成map, 还是上面的例子</p><h3 id="saveAsTextFile"><a href="#saveAsTextFile" class="headerlink" title="saveAsTextFile"></a>saveAsTextFile</h3><p>saveAsTextFile用于将RDD以文本文件的格式存储到文件系统中。</p><h3 id="saveAsSequenceFile"><a href="#saveAsSequenceFile" class="headerlink" title="saveAsSequenceFile"></a>saveAsSequenceFile</h3><p>saveAsSequenceFile用于将RDD以SequenceFile的文件格式保存到HDFS上。</p><h3 id="saveAsObjectFile"><a href="#saveAsObjectFile" class="headerlink" title="saveAsObjectFile"></a>saveAsObjectFile</h3><p>saveAsObjectFile用于将RDD中的元素序列化成对象，存储到文件中。</p><h3 id="saveAsHadoopFile"><a href="#saveAsHadoopFile" class="headerlink" title="saveAsHadoopFile"></a>saveAsHadoopFile</h3><h3 id="saveAsNewAPIHadoopFile"><a href="#saveAsNewAPIHadoopFile" class="headerlink" title="saveAsNewAPIHadoopFile"></a>saveAsNewAPIHadoopFile</h3><h3 id="mapPartitions"><a href="#mapPartitions" class="headerlink" title="mapPartitions"></a>mapPartitions</h3><h3 id="mapPartitionsWithIndex"><a href="#mapPartitionsWithIndex" class="headerlink" title="mapPartitionsWithIndex"></a>mapPartitionsWithIndex</h3><h3 id="HashPartitioner"><a href="#HashPartitioner" class="headerlink" title="HashPartitioner"></a>HashPartitioner</h3><h3 id="RangePartitioner"><a href="#RangePartitioner" class="headerlink" title="RangePartitioner"></a>RangePartitioner</h3><h3 id="自定义分区"><a href="#自定义分区" class="headerlink" title="自定义分区"></a>自定义分区</h3>]]></content>
      
      
      
        <tags>
            
            <tag> spark学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqoop记录</title>
      <link href="/daydoc/2018/03/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/sqoop%E8%AE%B0%E5%BD%95/"/>
      <url>/daydoc/2018/03/04/%E7%8E%8B%E9%98%81/%E6%8A%80%E6%9C%AF/hexo/old/sqoop%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="将Mysql数据导入Hive中"><a href="#将Mysql数据导入Hive中" class="headerlink" title="将Mysql数据导入Hive中"></a>将Mysql数据导入Hive中</h2><a id="more"></a><p>命令:</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs haml">sqoop import  <br>-<span class="ruby">Dorg.apache.sqoop.splitter.allow_text_splitter=<span class="hljs-literal">true</span>       </span><br><span class="ruby">--connect <span class="hljs-symbol">jdbc:</span><span class="hljs-symbol">mysql:</span>/<span class="hljs-regexp">/211.159.172.76:3306/solo</span></span><br><span class="ruby">--username root </span><br><span class="ruby">--password <span class="hljs-number">125323</span>Wkq </span><br><span class="ruby">--table  tablename </span><br><span class="ruby">--hive-import </span><br><span class="ruby">--hive-table tablename</span><br></code></pre></td></tr></table></figure><h3 id="整库导入"><a href="#整库导入" class="headerlink" title="整库导入"></a>整库导入</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">sqoop import-all-tables <span class="hljs-params">--connect</span> jdbc<span class="hljs-function">:mysql</span>:<span class="hljs-string">//211.159.172.76</span><span class="hljs-function">:3306</span>/ <span class="hljs-params">--username</span> root <span class="hljs-params">--password</span> 125323Wkq <span class="hljs-params">--hive-database</span> solo  -m 10  <br><span class="hljs-params">--create-hive-table</span>  <br><span class="hljs-params">--fields-terminated-by</span> <span class="hljs-string">"\t"</span><br><span class="hljs-params">--hive-import</span> <span class="hljs-params">--hive-database</span> qianyang <span class="hljs-params">--hive-overwrite</span><br></code></pre></td></tr></table></figure><p>sqoop  import-all-tables -Dorg.apache.sqoop.splitter.allow_text_splitter=true –connect jdbc:mysql://211.159.172.76:3306/solo –username root –password 125323Wkq –hive-database blog  –create-hive-table  –hive-import –hive-overwrite -m 10 </p><h3 id="单表导入"><a href="#单表导入" class="headerlink" title="单表导入"></a>单表导入</h3><p>sqoop import  –connect   jdbc:mysql://211.159.172.76:3306/solo –username root     –password 125323Wkq    –table b3_solo_article –target-dir /blog/article   –hive-import  –hive-database blog<br>–fields-terminated-by “\t” –hive-table article  –hive-overwrite<br>–m 10  </p><p>sqoop  import  –connect jdbc:mysql://211.159.172.76:3306/solo –username root –password 125323Wkq –table b3_solo_article –target-dir /blog/article –hive-import –hive-database blog  –create-hive-table  –hive-table article –hive-overwrite -m 1 </p>]]></content>
      
      
      
        <tags>
            
            <tag> 日常总结 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
